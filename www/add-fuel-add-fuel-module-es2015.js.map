{"version":3,"sources":["./src/app/add-fuel/add-fuel.page.html","./src/app/add-fuel/add-fuel.module.ts","./src/app/add-fuel/add-fuel.page.scss","./src/app/add-fuel/add-fuel.page.ts"],"names":[],"mappings":"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","file":"add-fuel-add-fuel-module-es2015.js","sourcesContent":["export default \"<ion-header translucent>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Fuel Details</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<ion-content>\\r\\n  <form class=\\\"form\\\" [formGroup]=\\\"addFuelForm\\\" (submit)=\\\"addFuel(addFuelForm.value)\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Date</ion-label>\\r\\n            <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" formControlName=\\\"date\\\"></ion-datetime>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.date\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"addFuelForm.get('date').hasError(validation.type) && (addFuelForm.get('date').dirty || addFuelForm.get('date').touched)\\\">\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Vehicle Number</ion-label>\\r\\n            <ion-input onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"vehicleNumber\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.vehicleNumber\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"addFuelForm.get('vehicleNumber').hasError(validation.type) && (addFuelForm.get('vehicleNumber').dirty || addFuelForm.get('vehicleNumber').touched)\\\">\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Vehicle Type</ion-label>\\r\\n            <ion-select formControlName=\\\"vehicleType\\\" interface=\\\"popover\\\">\\r\\n              <ion-select-option text-wrap *ngFor=\\\"let vty of getapprovedvtypes()\\\" value={{vty}}>{{vty}}</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.vehicleType\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"addFuelForm.get('vehicleType').hasError(validation.type) && (addFuelForm.get('vehicleType').dirty || addFuelForm.get('vehicleType').touched)\\\">\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n    <ion-card>\\r\\n      <ion-card-content>\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">Location</ion-label>\\r\\n          <ion-input type=\\\"text\\\" onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"location\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validationMessages.location\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n              *ngIf=\\\"addFuelForm.get('location').hasError(validation.type) && (addFuelForm.get('location').dirty || addFuelForm.get('location').touched)\\\">\\r\\n              {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">Time</ion-label>\\r\\n          <ion-datetime formControlName=\\\"time\\\" displayFormat=\\\"HH:mm\\\"></ion-datetime>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validationMessages.time\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n              *ngIf=\\\"addFuelForm.get('time').hasError(validation.type) && (addFuelForm.get('time').dirty || addFuelForm.get('time').touched)\\\">\\r\\n              {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">Fuel Type</ion-label>\\r\\n          <ion-select text-wrap formControlName=\\\"FuelType\\\" interface=\\\"popover\\\" value=\\\"getfueltype()\\\">\\r\\n            <ion-select-option text-wrap value=\\\"getfueltype()\\\">{{getfueltype()}}</ion-select-option>\\r\\n          </ion-select>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">FuelTopUp</ion-label>\\r\\n          <ion-input type=\\\"number\\\" inputmode=\\\"numeric\\\" formControlName=\\\"FuelTopUp\\\"></ion-input>\\r\\n        </ion-item>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n\\r\\n    <div class=\\\"btn-wrapper\\\">\\r\\n      <div *ngIf = showSubmit()>\\r\\n        <ion-button class=\\\"submit-btn\\\" type=\\\"submit\\\" [disabled]=\\\"!addFuelForm.valid\\\" style=\\\"padding-right:10px\\\">Submit\\r\\n        </ion-button>\\r\\n        <ion-button (click)='onCancel()'>Cancel</ion-button>\\r\\n      </div>\\r\\n      <div *ngIf = !showSubmit()>\\r\\n            <ion-button expand=\\\"block\\\" (click)='onCancel()'>OK</ion-button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AddFuelPage } from './add-fuel.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddFuelPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [AddFuelPage]\r\n})\r\nexport class AddFuelPageModule {}\r\n","export default \"ion-input {\\n  text-transform: uppercase;\\n  color: primary !important; }\\n\\nion-card-title {\\n  --color:--ion-color-primary-contrast-rgb; }\\n\\n.btn-wrapper {\\n  text-align: center; }\\n\\n.input[type=number] {\\n  -moz-appearance: textfield; }\\n\\n.input[type=number]::-webkit-inner-spin-button {\\n    display: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLWZ1ZWwvQzpcXFVzZXJzXFxSdWlcXEFuZHJvaWRTdHVkaW9Qcm9qZWN0c1xcRW5naW5lZXJzTG9nYm9vazIvc3JjXFxhcHBcXGFkZC1mdWVsXFxhZGQtZnVlbC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7RUFDRSx5QkFBeUI7RUFDekIseUJBQXdCLEVBQUE7O0FBRzFCO0VBQ0Usd0NBQVEsRUFBQTs7QUFHVjtFQUNFLGtCQUFrQixFQUFBOztBQUlwQjtFQUVFLDBCQUF5QixFQUFBOztBQUYzQjtJQUNnQyxhQUFhLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hZGQtZnVlbC9hZGQtZnVlbC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqIHtcclxuLy8gIG9wYWNpdHk6IDEgIWltcG9ydGFudDsgIC8vIGRpc2FibGVkIGl0ZW1zIHdpbGwgbm90IGJlIGdyZXkgb3V0LlxyXG59XHJcblxyXG5pb24taW5wdXR7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBjb2xvcjogcHJpbWFyeSFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbmlvbi1jYXJkLXRpdGxle1xyXG4gIC0tY29sb3I6LS1pb24tY29sb3ItcHJpbWFyeS1jb250cmFzdC1yZ2I7XHJcbn1cclxuXHJcbi5idG4td3JhcHBlciB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4vLyBkbyBub3Qgc2hvdyBzcGlubmVyIGZvciBudW1iZXIgaW5wdXRzXHJcbi5pbnB1dFt0eXBlPW51bWJlcl0geyAgXHJcbiAgJjo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbnsgZGlzcGxheTogbm9uZTsgfVxyXG4gIC1tb3otYXBwZWFyYW5jZTp0ZXh0ZmllbGQ7XHJcbn0iXX0= */\"","import { Component, OnInit, wtfStartTimeRange } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { NavController } from '@ionic/angular';\r\nimport { DatabaseService, Fuel, VehicleTypes } from '../services/database.service';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as dayjs from 'dayjs'; // Datetime utility, See http://zetcode.com/javascript/dayjs/\r\n\r\n@Component({\r\n  selector: 'app-add-fuel',\r\n  templateUrl: './add-fuel.page.html',\r\n  styleUrls: ['./add-fuel.page.scss'],\r\n})\r\n\r\nexport class AddFuelPage implements OnInit {\r\n\r\n  addFuelForm: FormGroup;\r\n  errorMessage = '';\r\n  successMessage = '';\r\n  toast: any;\r\n  today = new Date().toISOString();\r\n  fuel: Fuel;\r\n  updateStatus;\r\n\r\n\r\n  validationMessages = {\r\n    date: [\r\n      { type: 'required', message: 'Date is required.' }],\r\n    vehicleNumber: [\r\n      { type: 'required', message: 'Vehicle Number is required.' },\r\n      { type: 'minlength', message: 'Vehicle number must be at least 5 characters long.' }\r\n    ],\r\n    vehicleType: [\r\n      { type: 'required', message: 'Select a type of vehicle' },\r\n    ],\r\n    location: [\r\n      { type: 'required', message: 'Enter starting location' },\r\n    ],\r\n    time: [\r\n      { type: 'required', message: 'Enter current time' },\r\n    ],\r\n    FuelTopUp: [\r\n      { type: 'required', message: 'Enter FuelTopUp value' },\r\n    ],\r\n  };\r\n\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    private formBuilder: FormBuilder,\r\n    public toastController: ToastController,\r\n    public database: DatabaseService,\r\n    public route: ActivatedRoute\r\n  ) { }\r\n\r\n  public getapprovedvtypes(): string[] {\r\n        var vtypes =  VehicleTypes\r\n        if (this.database.current.user.mss_certified != true) {\r\n            vtypes = vtypes.filter( vtype => vtype != 'MSS');\r\n        }\r\n        if (this.database.current.user.flb_certified != true) {\r\n            vtypes = vtypes.filter( vtype => vtype != 'FLB');\r\n        }\r\n        if (this.database.current.user.belrex_certified != true) {\r\n            vtypes = vtypes.filter( vtype => vtype != 'BELREX');\r\n        return vtypes\r\n        }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Create form group of controls\r\n    this.addFuelForm = this.formBuilder.group({\r\n      date: new FormControl(this.today, Validators.compose([Validators.required])),\r\n      vehicleNumber: new FormControl('', Validators.compose([Validators.minLength(5), Validators.required])),\r\n      vehicleType: new FormControl('', Validators.compose([Validators.required])),\r\n      location: new FormControl('', Validators.compose([Validators.required])),\r\n      time: new FormControl(this.today, Validators.compose([Validators.required])),\r\n      FuelType: new FormControl('', Validators.compose([Validators.required])),\r\n      FuelTopUp: new FormControl('', Validators.compose([Validators.required])),\r\n    });\r\n  }\r\n\r\n  onCancel() {\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n  showSubmit() {\r\n    return true;\r\n  }\r\n\r\n  showToast(msg) {\r\n    this.toastController.create({\r\n      message: msg,\r\n      duration: 2000,\r\n      //  showCloseButton: true,\r\n      //  closeButtonText: 'OK',\r\n      position: 'bottom'\r\n    }).then((obj) => {\r\n      obj.present();\r\n    });\r\n  }\r\n\r\n  getfueltype() {\r\n    if (this.addFuelForm.value.vehicleType == \"OUV\" || this.addFuelForm.value.vehicleType == \"5TON\") {\r\n      return \"diesel\" }\r\n    else if (this.addFuelForm.value.vehicleType != \"\") {\r\n      return \"petrol\" }\r\n  }\r\n\r\n  async addFuel(value)\r\n  {\r\n    if (this.fuel == null)\r\n    {\r\n      try {\r\n        const time2 = dayjs(new Date(this.addFuelForm.value.time)).format('HH:mm');\r\n        var new_fuel: Fuel =\r\n        {\r\n          created: this.database.getTimeStamp(),\r\n          driver: this.database.current.user.email,\r\n          // Stage-1 details\r\n          vehicle: this.addFuelForm.value.vehicleNumber,\r\n          vehicle_type: this.addFuelForm.value.vehicleType,\r\n          date: (this.addFuelForm.value.date).split('T')[0],\r\n          location: this.addFuelForm.value.location,\r\n          time: time2,\r\n          fleet: this.database.current.user.fleet,\r\n          company: this.database.current.user.company,\r\n          FuelTopUp: this.addFuelForm.value.FuelTopUp,\r\n        };\r\n        let subAutoID = this.database.collection('fuel').doc().id;\r\n        new_fuel.id = subAutoID\r\n        console.log('new_fuel=${JSON.stringify(new_fuel)}');\r\n        await this.database.write('fuel', new_fuel.id, new_fuel);\r\n        this.errorMessage = '';\r\n        this.successMessage = 'Your Fuel has been added.';\r\n\r\n        this.showToast(this.successMessage);\r\n        this.navCtrl.pop();\r\n      } catch (err) {\r\n\r\n        this.errorMessage = `Add Fuel error: ${err}`;\r\n        this.successMessage = '';\r\n\r\n        this.showToast(this.errorMessage);\r\n        this.navCtrl.pop();\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}