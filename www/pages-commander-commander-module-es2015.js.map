{"version":3,"sources":["./src/app/pages/commander/commander.page.html","./src/app/pages/commander/commander.module.ts","./src/app/pages/commander/commander.page.scss","./src/app/pages/commander/commander.page.ts"],"names":[],"mappings":"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","file":"pages-commander-commander-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Commander</ion-title>\\r\\n    <ion-buttons slot=\\\"primary\\\">\\r\\n      <ion-button left routerLink=\\\"/\\\" routerDirection=\\\"root\\\" fill=\\\"clear\\\" slot=\\\"primary\\\">\\r\\n        Logout<ion-icon name=\\\"log-out\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <!-- Notifications -->\\r\\n  <ion-item class=\\\"headers\\\" text-center><ion-label style=\\\"margin-bottom: 0;\\\"><h1> Notifications </h1></ion-label></ion-item>\\r\\n\\r\\n  <ion-card *ngFor=\\\"let drive of getPendingDrives()\\\" padding>\\r\\n\\r\\n    <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\">\\r\\n      <!--ion-fab-button size=\\\"small\\\" (click)=\\\"click(drive)\\\">View</ion-fab-button-->\\r\\n      <ion-fab-button size=\\\"small\\\" (click)=\\\"click(drive)\\\"><ion-icon name='share-alt'></ion-icon></ion-fab-button>\\r\\n      <!--ion-button fill=\\\"outline\\\" size=\\\"small\\\" (click)=\\\"click(drive)\\\">View</ion-button-->\\r\\n    </ion-fab>\\r\\n\\r\\n    <ion-card-subtitle color='danger'><strong>Pending review</strong></ion-card-subtitle>\\r\\n    <ion-card-title>{{drive.date}}</ion-card-title>\\r\\n\\r\\n    <ion-card-content no-padding>\\r\\n      Your drive on <b>{{drive.date}}</b> with <b>{{drive.driver}}</b> from\\r\\n      <b>{{drive.start_location}}</b> (<b>{{drive.start_time}}</b>) to \\r\\n      <b>{{drive.end_location}}</b> (<b>{{drive.end_time}}</b>)\\r\\n      is pending review.\\r\\n    </ion-card-content>\\r\\n\\r\\n  </ion-card>\\r\\n  <ion-card *ngFor=\\\"let form of getPendingMTRAC()\\\" padding>\\r\\n    <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\">\\r\\n      <!--ion-fab-button size=\\\"small\\\" (click)=\\\"click(drive)\\\">View</ion-fab-button-->\\r\\n      <ion-fab-button size=\\\"small\\\" (click)=\\\"clickmtrac(form)\\\"><ion-icon name='share-alt'></ion-icon></ion-fab-button>\\r\\n      <!--ion-button fill=\\\"outline\\\" size=\\\"small\\\" (click)=\\\"click(drive)\\\">View</ion-button-->\\r\\n    </ion-fab>\\r\\n    <ion-card-title>Complete MT-RAC</ion-card-title>\\r\\n  </ion-card>\\r\\n\\r\\n\\r\\n\\r\\n  <ion-item class=\\\"headers\\\" text-center><ion-label style=\\\"margin-bottom: 0;\\\"><h1> Operators </h1></ion-label></ion-item>\\r\\n\\r\\n  <ion-card>\\r\\n    <ion-list>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"stacked\\\">Driver</ion-label>\\r\\n        <ion-select id=\\\"driverlist\\\" interface=\\\"popover\\\" class=\\\"full-width-select\\\" value=\\\"ALL\\\">\\r\\n          <ion-select-option value=\\\"ALL\\\">ALL</ion-select-option>\\r\\n          <ion-select-option text-wrap *ngFor=\\\"let driver of database.current.all_drivers_of_commander\\\" value={{driver.email}} class=\\\"custom-font-size\\\">{{driver.email}}</ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </ion-card>\\r\\n  <ion-card *ngFor=\\\"let driver of getDrivers()\\\">\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle><ion-icon name=\\\"person\\\" text-center (click)=\\\"showother()\\\"></ion-icon> <strong> {{driver.name}} ({{driver.email}})</strong></ion-card-subtitle>\\r\\n      <ion-card-subtitle (click)=\\\"showother()\\\">Last drive: {{driver.summary.most_recent_drive | date: \\\"dd/MM/yyyy hh:mm\\\"}}, {{driver.summary.most_recent_drive | daysAgo}} days ago</ion-card-subtitle>\\r\\n      <ion-label position=\\\"stacked\\\" *ngIf=\\\"checkAll()==true\\\"><h2>Certifications</h2></ion-label>\\r\\n      <ion-button *ngIf=\\\"checkAll()==false\\\" (click)=\\\"showEdit()\\\">Certifications <ion-icon name=\\\"settings\\\"></ion-icon></ion-button>\\r\\n      <ion-grid>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-label color=\\\"success\\\"> OUV </ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col offset-4>\\r\\n            <ion-label color=\\\"success\\\"> 5TON </ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-label *ngIf=\\\"driver.mss_certified == true\\\" color=\\\"success\\\" > MSS </ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col offset-4 >\\r\\n            <ion-label *ngIf=\\\"driver.flb_certified == true\\\" color=\\\"success\\\"> FLB </ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-label *ngIf=\\\"driver.belrex_certified == true\\\" color=\\\"success\\\"> BELREX </ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col offset-4>\\r\\n            <ion-label *ngIf=\\\"driver.m3g_certified == true\\\" color=\\\"success\\\"> M3G </ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n\\r\\n      <ion-card *ngIf=\\\"checkEditDriverStatus()==true\\\">\\r\\n        <ion-list>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\">MSS</ion-label>\\r\\n            <ion-select id=\\\"mss\\\" interface=\\\"popover\\\" value={{driver.mss_certified}}>\\r\\n              <ion-select-option value=\\\"true\\\">Certified</ion-select-option>\\r\\n              <ion-select-option value=\\\"false\\\">Not Certified</ion-select-option>\\r\\n            </ion-select>\\r\\n            <ion-label position=\\\"stacked\\\">FLB</ion-label>\\r\\n            <ion-select id=\\\"flb\\\" interface=\\\"popover\\\" value={{driver.flb_certified}}>\\r\\n              <ion-select-option value=\\\"true\\\">Certified</ion-select-option>\\r\\n              <ion-select-option value=\\\"false\\\">Not Certified</ion-select-option>\\r\\n            </ion-select>\\r\\n            <ion-label position=\\\"stacked\\\">BELREX</ion-label>\\r\\n            <ion-select id=\\\"belrex\\\" interface=\\\"popover\\\" value={{driver.belrex_certified}}>\\r\\n              <ion-select-option value=\\\"true\\\">Certified</ion-select-option>\\r\\n              <ion-select-option value=\\\"false\\\">Not Certified</ion-select-option>\\r\\n            </ion-select>\\r\\n            <ion-label position=\\\"stacked\\\">M3G</ion-label>\\r\\n            <ion-select id=\\\"m3g\\\" interface=\\\"popover\\\" value={{driver.m3g_certified}}>\\r\\n              <ion-select-option value=\\\"true\\\">Certified</ion-select-option>\\r\\n              <ion-select-option value=\\\"false\\\">Not Certified</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n        <ion-button (click)=\\\"updateCertfication(getDriver())\\\">save changes</ion-button>\\r\\n      </ion-card>\\r\\n    </ion-card-header>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <ion-card-content>\\r\\n      <ion-grid class=\\\"table\\\" no-padding>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"4\\\" class=\\\"bubble-text\\\" no-padding><ion-card no-padding (click)=\\\"showdrives()\\\">\\r\\n            <div class=\\\"ion-text-center\\\" style=\\\"width: 100%;\\\">\\r\\n              <ion-icon name=\\\"car\\\" size=\\\"large\\\" ></ion-icon><br>\\r\\n              <div class=\\\"shift_up\\\">Drives</div>\\r\\n              <div class=\\\"slide_num\\\">{{driver.summary.drive_count}}</div>\\r\\n              <ion-label *ngIf=\\\"checkDriveStatus()\\\">\\r\\n                <h6 *ngFor=\\\"let vehicle of driver.summary.most_recent_drive_by_vehicle_type | keyvalue\\\">\\r\\n                  {{vehicle.key}} : {{getDrivesbyVehicleType(vehicle.key, driver)}}\\r\\n                </h6>\\r\\n              </ion-label>\\r\\n            </div>\\r\\n          </ion-card></ion-col>\\r\\n\\r\\n          <ion-col size=\\\"4\\\" class=\\\"bubble-text\\\" no-padding><ion-card no-padding (click)=\\\"showmileage()\\\">\\r\\n            <div class=\\\"ion-text-center\\\" style=\\\"width: 100%;\\\">\\r\\n              <ion-icon name=\\\"speedometer\\\" size=\\\"large\\\"></ion-icon><br>\\r\\n              <div class=\\\"shift_up\\\">Mileage</div>\\r\\n              <div class=\\\"slide_num\\\">{{driver.summary.mileage_km}} km</div>\\r\\n              <ion-label *ngIf=\\\"checkMileageStatus()\\\">\\r\\n                <h6 *ngFor=\\\"let vehicle of driver.summary.most_recent_drive_by_vehicle_type | keyvalue\\\">\\r\\n                  {{vehicle.key}} : {{getMileagebyVehicleType(driver.summary.mileage_by_vehicle_type, vehicle.key)}}\\r\\n                </h6>\\r\\n              </ion-label>\\r\\n            </div>\\r\\n          </ion-card></ion-col>\\r\\n\\r\\n          <ion-col size=\\\"4\\\" class=\\\"bubble-text\\\" no-padding><ion-card no-padding>\\r\\n            <div class=\\\"ion-text-center\\\" style=\\\"width: 100%;\\\" (click)=\\\"showother()\\\">\\r\\n              <ion-icon name=\\\"clock\\\" size=\\\"large\\\"></ion-icon><br>\\r\\n              <div class=\\\"shift_up\\\">Time Driven</div>\\r\\n              <div class=\\\"slide_num\\\">{{driver.summary.duration_minutes / 60 | number : '1.0-1' }} hours</div>\\r\\n            </div>\\r\\n          </ion-card></ion-col>\\r\\n\\r\\n\\r\\n          <ion-row text-center style=\\\"padding: 0 10px\\\" *ngIf=\\\"checkDriveStatus() || checkMileageStatus() || checkOtherStatus()\\\" (click)=\\\"showother()\\\">\\r\\n            <ion-col>\\r\\n              average drive distance: <br/> {{driver.summary.mileage_km / driver.summary.drive_count | number : '1.0-1'}} km\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              average drive duration: <br/>{{driver.summary.duration_minutes / 60 / driver.summary.drive_count | number : '1.0-1'}} hours\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-row>\\r\\n        <ion-row text-center (click)=\\\"showother()\\\">\\r\\n          <ion-col text-center><ion-card padding text-center>\\r\\n            <ion-grid>\\r\\n              <ion-row><ion-col><ion-card-title text-center>\\r\\n                <strong>JIT Countdown</strong>\\r\\n              </ion-card-title></ion-col></ion-row>\\r\\n\\r\\n              <ion-row><ion-col><ion-card-subtitle>\\r\\n\\r\\n                <ion-grid><ion-row><ion-col><ion-label *ngIf=\\\"checkTimelefttoJIT(driver.summary.most_recent_drive) == false\\\" color='danger' text-center>\\r\\n                  <strong><h2>\\r\\n                    DO JIT NOW!\\r\\n                  </h2></strong>\\r\\n                </ion-label></ion-col></ion-row></ion-grid>\\r\\n\\r\\n                <ion-label>\\r\\n                  <ion-item *ngIf=\\\"checkTimelefttoJIT(driver.summary.most_recent_drive) == true\\\" text-center>\\r\\n                    <ion-grid><ion-row><ion-col><countdown [config]=\\\"{leftTime: getTimelefttoJIT(driver.summary.most_recent_drive), format: 'dd'}\\\"></countdown>\\r\\n                        <h6 style=\\\"padding-bottom: 5px\\\">days</h6></ion-col>\\r\\n                      <ion-col><countdown [config]=\\\"{leftTime: getTimelefttoJIT(driver.summary.most_recent_drive), format: 'HH'}\\\"></countdown>\\r\\n                        <h6 style=\\\"padding-bottom: 5px\\\">hrs</h6></ion-col>\\r\\n                      <ion-col><countdown [config]=\\\"{leftTime: getTimelefttoJIT(driver.summary.most_recent_drive), format: 'mm'}\\\"></countdown>\\r\\n                        <h6 style=\\\"padding-bottom: 5px\\\">mins</h6></ion-col>\\r\\n                      <ion-col><countdown [config]=\\\"{leftTime: getTimelefttoJIT(driver.summary.most_recent_drive), format: 'ss'}\\\"></countdown>\\r\\n                        <h6 style=\\\"padding-bottom: 5px\\\">sec</h6></ion-col></ion-row></ion-grid>\\r\\n                  </ion-item>\\r\\n                </ion-label>\\r\\n           </ion-card-subtitle></ion-col></ion-row></ion-grid>\\r\\n          </ion-card></ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n      <!--<ion-grid  class=\\\"ion-no-padding\\\">\\r\\n        <ion-row text-center>\\r\\n          <ion-col text-center><ion-icon name=\\\"car\\\"></ion-icon> <br> Total Drives: <br> {{driver.summary.drive_count}}</ion-col>\\r\\n          <ion-col text-center><ion-icon name=\\\"speedometer\\\"></ion-icon> <br> Total Mileage:<br> {{driver.summary.mileage_km}} KM</ion-col>\\r\\n          <ion-col text-center><ion-icon name=\\\"clock\\\"></ion-icon> <br> Time Driven: <br> {{driver.summary.duration_minutes / 60 | number : '1.0-1' }} hours</ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n      </ion-grid>-->\\r\\n\\r\\n      <ion-item *ngFor=\\\"let vehicle of driver.summary.most_recent_drive_by_vehicle_type | keyvalue\\\" (click)=\\\"showother()\\\">\\r\\n\\r\\n\\r\\n          <ion-col *ngIf=\\\"checkOtherStatus()\\\" (click)=\\\"showother()\\\">\\r\\n            <ion-label *ngIf=\\\"checkOtherStatus()\\\">\\r\\n              <h3 class=\\\"underline\\\" *ngIf=\\\"checkOperatorCurrencyValid(vehicle.key,driver.summary.most_recent_drive_by_vehicle_type[vehicle.key])\\\">{{vehicle.key}}</h3>\\r\\n            </ion-label >\\r\\n            <ion-label  color='danger' *ngIf=\\\"checkOtherStatus()\\\">\\r\\n               <h3 class=\\\"underline\\\" *ngIf=\\\"checkOperatorCurrencyInvalid(vehicle.key,driver.summary.most_recent_drive_by_vehicle_type[vehicle.key])\\\">{{vehicle.key}}</h3>\\r\\n            </ion-label>\\r\\n          \\r\\n           Last Drive: {{driver.summary.most_recent_drive_by_vehicle_type[vehicle.key] | date: \\\"dd/MM/yyyy\\\"}}\\r\\n           ({{driver.summary.most_recent_drive_by_vehicle_type[vehicle.key] | daysAgo}} days ago)</ion-col>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CommanderPage } from './commander.page';\r\nimport { DriveViewModule } from '../../drive-view/drive-view.module';\r\nimport { PipesModule } from '../../pipes/pipes.module';\r\n\r\nimport { CountdownModule } from 'ngx-countdown';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CommanderPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CountdownModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    DriveViewModule,\r\n    PipesModule,\r\n  ],\r\n  declarations: [CommanderPage]\r\n})\r\nexport class CommanderPageModule {}\r\n","export default \".div {\\n  text-align: center;\\n  border: 6px solid black; }\\n\\n.vertical-align-content > * {\\n  display: -webkit-box !important;\\n  display: flex !important;\\n  align-content: center !important;\\n  -webkit-box-align: center !important;\\n          align-items: center !important; }\\n\\n.full-width-select {\\n  width: 100%;\\n  max-width: 100%; }\\n\\n.custom-font-size {\\n  font-size: 0.8em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY29tbWFuZGVyL0M6XFxVc2Vyc1xcUnVpXFxBbmRyb2lkU3R1ZGlvUHJvamVjdHNcXEVuZ2luZWVyc0xvZ2Jvb2syL3NyY1xcYXBwXFxwYWdlc1xcY29tbWFuZGVyXFxjb21tYW5kZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQWtCO0VBQ2xCLHVCQUF1QixFQUFBOztBQUUzQjtFQUVLLCtCQUF1QjtFQUF2Qix3QkFBdUI7RUFDdkIsZ0NBQStCO0VBQy9CLG9DQUE2QjtVQUE3Qiw4QkFBNkIsRUFBQTs7QUFHbEM7RUFDRSxXQUFXO0VBQ1gsZUFBZSxFQUFBOztBQUVqQjtFQUNJLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvY29tbWFuZGVyL2NvbW1hbmRlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGl2e1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgYm9yZGVyOiA2cHggc29saWQgYmxhY2s7XHJcbn1cclxuLnZlcnRpY2FsLWFsaWduLWNvbnRlbnQgPiAqXHJcbntcclxuICAgICBkaXNwbGF5OiBmbGV4IWltcG9ydGFudDtcclxuICAgICBhbGlnbi1jb250ZW50OiBjZW50ZXIhaW1wb3J0YW50O1xyXG4gICAgIGFsaWduLWl0ZW1zOiBjZW50ZXIhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uZnVsbC13aWR0aC1zZWxlY3Qge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxufVxyXG4uY3VzdG9tLWZvbnQtc2l6ZSB7XHJcbiAgICBmb250LXNpemU6IDAuOGVtO1xyXG59Il19 */\"","import { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { Platform } from '@ionic/angular';\r\nimport { DatabaseService, User, Drive, VehicleTypes, Mtrac } from '../../services/database.service';\r\nimport { Chart } from \"chart.js\";\r\nimport { PipesModule } from '../../pipes/pipes.module';\r\nimport * as dayjs from 'dayjs';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\n\r\n\r\n@Component({\r\n  selector: 'app-commander',\r\n  templateUrl: './commander.page.html',\r\n  styleUrls: ['./commander.page.scss'],\r\n})\r\n\r\nexport class CommanderPage implements OnInit {\r\n\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    public database: DatabaseService,\r\n    private platform: Platform,\r\n    private geolocation: Geolocation,\r\n    public toastController: ToastController, ) { }\r\n\r\n  drivestatus = 9 > 10;\r\n  mileagestatus = 9 > 10;\r\n  otherstatus = 9 > 10;\r\n  drivereditstatus = 9 > 10;\r\n  successMessage = '';\r\n  errorMessage = '';\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public editDriver(driver: string) : User[] {\r\n    var drivr = this.database.current.all_drivers_of_commander;\r\n    drivr = drivr.filter( (drvr) => drvr.email == driver);\r\n    this.drivereditstatus = !this.drivereditstatus;\r\n    return drivr;\r\n  }\r\n\r\n  public showEdit() {\r\n    return this.drivereditstatus = !this.drivereditstatus;\r\n  }\r\n\r\n  public getDrvr(driver: string) : User[] {\r\n    var drivr = this.database.current.all_drivers_of_commander;\r\n    return drivr.filter( (drvr) => drvr.email == driver);\r\n  }\r\n\r\n  public getDrivers() : User[] {\r\n    var drivers = this.database.current.all_drivers_of_commander;\r\n    var drvrs = (<HTMLInputElement>document.getElementById(\"driverlist\")).value;\r\n    if (drvrs != \"ALL\") {\r\n      return drivers.filter( (driver) => driver.email == drvrs);\r\n    }\r\n    return drivers\r\n  }\r\n\r\n  public getDriver() : User {\r\n    var driver = this.database.current.all_drivers_of_commander;\r\n    var drvrs = (<HTMLInputElement>document.getElementById(\"driverlist\")).value;\r\n    return driver.filter( (driver) => driver.email == drvrs)[0];\r\n  }\r\n\r\n  async updateCertfication(driver: any) {\r\n    //console.log(driver);\r\n    var mssc = (<HTMLInputElement>document.getElementById(\"mss\")).value.toLowerCase() === 'true';\r\n    var flbc = (<HTMLInputElement>document.getElementById(\"flb\")).value.toLowerCase() === 'true';\r\n    var belrexc = (<HTMLInputElement>document.getElementById(\"belrex\")).value.toLowerCase() === 'true';\r\n    var m3gc = (<HTMLInputElement>document.getElementById(\"m3g\")).value.toLowerCase() === 'true';\r\n    driver.mss_certified = mssc;\r\n    driver.flb_certified = flbc;\r\n    driver.belrex_certified = belrexc;\r\n    driver.m3g_certified = m3gc;\r\n    try {\r\n      await this.database.write('user',driver.email,driver);\r\n      this.drivereditstatus = !this.drivereditstatus;\r\n      this.successMessage = 'the driver account has been updated.';\r\n      this.showToast(this.successMessage);\r\n    } catch(err) {\r\n        console.log(err);\r\n        this.errorMessage = err.message;\r\n        this.successMessage = '';\r\n    }\r\n  }\r\n\r\n  public checkAll() {\r\n    var drivers = (<HTMLInputElement>document.getElementById(\"driverlist\")).value;\r\n     if (this.database.current.user.is_admin == true)\r\n    { return drivers == \"ALL\"; }\r\n    return true;\r\n  }\r\n\r\n\r\n  showToast(msg) {\r\n    this.toastController.create({\r\n      message: msg,\r\n      duration: 2000,\r\n      position: 'middle'\r\n    }).then((obj) => {\r\n      obj.present();\r\n    });\r\n  }\r\n\r\n  public checkEditDriverStatus() {\r\n    if (this.database.current.user.is_admin == true)\r\n    {\r\n      return this.drivereditstatus;\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  public checkOperatorCurrencyValid(vehicletype:string, date:any){\r\n    const today = dayjs();\r\n    var period =  8;\r\n    return today.diff(date,\"day\") < period ;\r\n  }\r\n\r\n  public checkOperatorCurrencyInvalid(vehicletype:string, date:any){\r\n    const today = dayjs();\r\n    var period = 8;\r\n    return today.diff(date,\"day\") > period ;\r\n  }\r\n\r\n  public showdrives(){\r\n    this.drivestatus = !this.drivestatus;\r\n  }\r\n\r\n  public checkDriveStatus(){\r\n    return this.drivestatus;\r\n  }\r\n\r\n  public showmileage(){\r\n    this.mileagestatus = !this.mileagestatus;\r\n  }\r\n\r\n  public checkMileageStatus(){\r\n    return this.mileagestatus;\r\n  }\r\n\r\n  public showother(){\r\n    this.otherstatus = !this.otherstatus;\r\n  }\r\n\r\n  public checkOtherStatus(){\r\n    return this.otherstatus;\r\n  }\r\n\r\n  public getMileagebyVehicleType(data: any,vehicle: any) {\r\n    for (var type of VehicleTypes) {\r\n      if (type == vehicle) {\r\n        if (data[type] != null) {\r\n          return data[type] + \" km\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public getDrivesbyVehicleType(vehicle: any, drvr: any) {\r\n    for (var type of VehicleTypes) {\r\n      var drv = 0\r\n      if (type == vehicle){\r\n        var dhis = this.database.current.drive_history.filter( (drive) => { return drive.driver === drvr.email });\r\n        for (let trip of dhis) {\r\n          if (trip.vehicle_type == vehicle) {\r\n            drv += 1;\r\n          }\r\n        }\r\n      return drv;\r\n      }\r\n    }\r\n  }\r\n\r\n  public getPendingDrives() : Drive[] {\r\n    return this.database.current.drive_history.filter( (drive) => { if (this.database.current.user.email === drive.commander) {\r\n      return drive.status === 'pending';}\r\n    });\r\n  }\r\n\r\n  public getPendingMTRAC() : Mtrac[] {\r\n    return this.database.current.mtrac_history.filter( (form) => { if (this.database.current.user.email === form.commander) {\r\n      return form.status === 'pending';}\r\n    });\r\n  }\r\n\r\n  public getApprovedDrives() : Drive[] {\r\n    return this.database.current.drive_history.filter( (drive) => {\r\n      return drive.status === 'verified';\r\n    });\r\n  }\r\n\r\n  public checkTimelefttoJIT(date: any) {\r\n    const today = dayjs();\r\n    var period = 8;\r\n    var left = period - today.diff(date,\"day\");\r\n    if (left < 0){\r\n      return false };\r\n    return true;\r\n  }\r\n\r\n  public getTimelefttoJIT(date:any ) {\r\n    const today = dayjs();\r\n    var period = 7*24*60*60;\r\n    var left = period - today.diff(date,\"s\");\r\n    return left;\r\n  }\r\n\r\n  public click(drive: Drive): void {\r\n    this.database.current.drive_to_edit = drive;\r\n    console.log(`> Navigating to AddDrivePage for drive id=${drive.id}`);\r\n    this.navCtrl.navigateForward(['/add-drive']);\r\n  }\r\n\r\n public clickmtrac(form: Mtrac): void {\r\n    this.database.current.mtrac_to_edit = form;\r\n    console.log(`> Navigating to mtracPage for mtrac id=${form.id}`);\r\n    this.navCtrl.navigateForward(['/mtrac']);\r\n  }\r\n\r\n/*//  public click1(driver: User): void {\r\n    for (let user of this.database.current.all_drivers_of_commander) {\r\n      driver = user\r\n      console.log(`> Navigating to History for email=${driver.email}`)\r\n      this.navCtrl.navigateForward(['/history'])\r\n    };\r\n  }*/\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}