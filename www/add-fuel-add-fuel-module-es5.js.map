{"version":3,"sources":["src/app/add-fuel/add-fuel.page.html","src/app/add-fuel/add-fuel.module.ts","src/app/add-fuel/add-fuel.page.scss","src/app/add-fuel/add-fuel.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header translucent>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Fuel Details</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<ion-content>\\r\\n  <form class=\\\"form\\\" [formGroup]=\\\"addFuelForm\\\" (submit)=\\\"addFuel(addFuelForm.value)\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Date</ion-label>\\r\\n            <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" formControlName=\\\"date\\\"></ion-datetime>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.date\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"addFuelForm.get('date').hasError(validation.type) && (addFuelForm.get('date').dirty || addFuelForm.get('date').touched)\\\">\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Vehicle Number</ion-label>\\r\\n            <ion-input onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"vehicleNumber\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.vehicleNumber\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"addFuelForm.get('vehicleNumber').hasError(validation.type) && (addFuelForm.get('vehicleNumber').dirty || addFuelForm.get('vehicleNumber').touched)\\\">\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Vehicle Type</ion-label>\\r\\n            <ion-select formControlName=\\\"vehicleType\\\" interface=\\\"popover\\\">\\r\\n              <ion-select-option text-wrap *ngFor=\\\"let vty of getapprovedvtypes()\\\" value={{vty}}>{{vty}}</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.vehicleType\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"addFuelForm.get('vehicleType').hasError(validation.type) && (addFuelForm.get('vehicleType').dirty || addFuelForm.get('vehicleType').touched)\\\">\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n    <ion-card>\\r\\n      <ion-card-content>\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">Location</ion-label>\\r\\n          <ion-input type=\\\"text\\\" onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"location\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validationMessages.location\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n              *ngIf=\\\"addFuelForm.get('location').hasError(validation.type) && (addFuelForm.get('location').dirty || addFuelForm.get('location').touched)\\\">\\r\\n              {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">Time</ion-label>\\r\\n          <ion-datetime formControlName=\\\"time\\\" displayFormat=\\\"HH:mm\\\"></ion-datetime>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validationMessages.time\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n              *ngIf=\\\"addFuelForm.get('time').hasError(validation.type) && (addFuelForm.get('time').dirty || addFuelForm.get('time').touched)\\\">\\r\\n              {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">Fuel Type</ion-label>\\r\\n          <ion-select text-wrap formControlName=\\\"FuelType\\\" interface=\\\"popover\\\" value=\\\"getfueltype()\\\">\\r\\n            <ion-select-option text-wrap value=\\\"getfueltype()\\\">{{getfueltype()}}</ion-select-option>\\r\\n          </ion-select>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">FuelTopUp</ion-label>\\r\\n          <ion-input type=\\\"number\\\" inputmode=\\\"numeric\\\" formControlName=\\\"FuelTopUp\\\"></ion-input>\\r\\n        </ion-item>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n\\r\\n    <div class=\\\"btn-wrapper\\\">\\r\\n      <div *ngIf = showSubmit()>\\r\\n        <ion-button class=\\\"submit-btn\\\" type=\\\"submit\\\" [disabled]=\\\"!addFuelForm.valid\\\" style=\\\"padding-right:10px\\\">Submit\\r\\n        </ion-button>\\r\\n        <ion-button (click)='onCancel()'>Cancel</ion-button>\\r\\n      </div>\\r\\n      <div *ngIf = !showSubmit()>\\r\\n            <ion-button expand=\\\"block\\\" (click)='onCancel()'>OK</ion-button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AddFuelPage } from './add-fuel.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddFuelPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [AddFuelPage]\r\n})\r\nexport class AddFuelPageModule {}\r\n","export default \"ion-input {\\n  text-transform: uppercase;\\n  color: primary !important; }\\n\\nion-card-title {\\n  --color:--ion-color-primary-contrast-rgb; }\\n\\n.btn-wrapper {\\n  text-align: center; }\\n\\n.input[type=number] {\\n  -moz-appearance: textfield; }\\n\\n.input[type=number]::-webkit-inner-spin-button {\\n    display: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLWZ1ZWwvQzpcXFVzZXJzXFxSdWlcXEFuZHJvaWRTdHVkaW9Qcm9qZWN0c1xcRW5naW5lZXJzTG9nYm9vazIvc3JjXFxhcHBcXGFkZC1mdWVsXFxhZGQtZnVlbC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7RUFDRSx5QkFBeUI7RUFDekIseUJBQXdCLEVBQUE7O0FBRzFCO0VBQ0Usd0NBQVEsRUFBQTs7QUFHVjtFQUNFLGtCQUFrQixFQUFBOztBQUlwQjtFQUVFLDBCQUF5QixFQUFBOztBQUYzQjtJQUNnQyxhQUFhLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hZGQtZnVlbC9hZGQtZnVlbC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqIHtcclxuLy8gIG9wYWNpdHk6IDEgIWltcG9ydGFudDsgIC8vIGRpc2FibGVkIGl0ZW1zIHdpbGwgbm90IGJlIGdyZXkgb3V0LlxyXG59XHJcblxyXG5pb24taW5wdXR7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBjb2xvcjogcHJpbWFyeSFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbmlvbi1jYXJkLXRpdGxle1xyXG4gIC0tY29sb3I6LS1pb24tY29sb3ItcHJpbWFyeS1jb250cmFzdC1yZ2I7XHJcbn1cclxuXHJcbi5idG4td3JhcHBlciB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4vLyBkbyBub3Qgc2hvdyBzcGlubmVyIGZvciBudW1iZXIgaW5wdXRzXHJcbi5pbnB1dFt0eXBlPW51bWJlcl0geyAgXHJcbiAgJjo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbnsgZGlzcGxheTogbm9uZTsgfVxyXG4gIC1tb3otYXBwZWFyYW5jZTp0ZXh0ZmllbGQ7XHJcbn0iXX0= */\"","import { Component, OnInit, wtfStartTimeRange } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { NavController } from '@ionic/angular';\r\nimport { DatabaseService, Fuel, VehicleTypes } from '../services/database.service';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as dayjs from 'dayjs'; // Datetime utility, See http://zetcode.com/javascript/dayjs/\r\n\r\n@Component({\r\n  selector: 'app-add-fuel',\r\n  templateUrl: './add-fuel.page.html',\r\n  styleUrls: ['./add-fuel.page.scss'],\r\n})\r\n\r\nexport class AddFuelPage implements OnInit {\r\n\r\n  addFuelForm: FormGroup;\r\n  errorMessage = '';\r\n  successMessage = '';\r\n  toast: any;\r\n  today = new Date().toISOString();\r\n  fuel: Fuel;\r\n  updateStatus;\r\n\r\n\r\n  validationMessages = {\r\n    date: [\r\n      { type: 'required', message: 'Date is required.' }],\r\n    vehicleNumber: [\r\n      { type: 'required', message: 'Vehicle Number is required.' },\r\n      { type: 'minlength', message: 'Vehicle number must be at least 5 characters long.' }\r\n    ],\r\n    vehicleType: [\r\n      { type: 'required', message: 'Select a type of vehicle' },\r\n    ],\r\n    location: [\r\n      { type: 'required', message: 'Enter starting location' },\r\n    ],\r\n    time: [\r\n      { type: 'required', message: 'Enter current time' },\r\n    ],\r\n    FuelTopUp: [\r\n      { type: 'required', message: 'Enter FuelTopUp value' },\r\n    ],\r\n  };\r\n\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    private formBuilder: FormBuilder,\r\n    public toastController: ToastController,\r\n    public database: DatabaseService,\r\n    public route: ActivatedRoute\r\n  ) { }\r\n\r\n  public getapprovedvtypes(): string[] {\r\n        var vtypes =  VehicleTypes\r\n        if (this.database.current.user.mss_certified != true) {\r\n            vtypes = vtypes.filter( vtype => vtype != 'MSS');\r\n        }\r\n        if (this.database.current.user.flb_certified != true) {\r\n            vtypes = vtypes.filter( vtype => vtype != 'FLB');\r\n        }\r\n        if (this.database.current.user.belrex_certified != true) {\r\n            vtypes = vtypes.filter( vtype => vtype != 'BELREX');\r\n        return vtypes\r\n        }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Create form group of controls\r\n    this.addFuelForm = this.formBuilder.group({\r\n      date: new FormControl(this.today, Validators.compose([Validators.required])),\r\n      vehicleNumber: new FormControl('', Validators.compose([Validators.minLength(5), Validators.required])),\r\n      vehicleType: new FormControl('', Validators.compose([Validators.required])),\r\n      location: new FormControl('', Validators.compose([Validators.required])),\r\n      time: new FormControl(this.today, Validators.compose([Validators.required])),\r\n      FuelType: new FormControl('', Validators.compose([Validators.required])),\r\n      FuelTopUp: new FormControl('', Validators.compose([Validators.required])),\r\n    });\r\n  }\r\n\r\n  onCancel() {\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n  showSubmit() {\r\n    return true;\r\n  }\r\n\r\n  showToast(msg) {\r\n    this.toastController.create({\r\n      message: msg,\r\n      duration: 2000,\r\n      //  showCloseButton: true,\r\n      //  closeButtonText: 'OK',\r\n      position: 'bottom'\r\n    }).then((obj) => {\r\n      obj.present();\r\n    });\r\n  }\r\n\r\n  getfueltype() {\r\n    if (this.addFuelForm.value.vehicleType == \"OUV\" || this.addFuelForm.value.vehicleType == \"5TON\") {\r\n      return \"diesel\" }\r\n    else if (this.addFuelForm.value.vehicleType != \"\") {\r\n      return \"petrol\" }\r\n  }\r\n\r\n  async addFuel(value)\r\n  {\r\n    if (this.fuel == null)\r\n    {\r\n      try {\r\n        const time2 = dayjs(new Date(this.addFuelForm.value.time)).format('HH:mm');\r\n        var new_fuel: Fuel =\r\n        {\r\n          created: this.database.getTimeStamp(),\r\n          driver: this.database.current.user.email,\r\n          // Stage-1 details\r\n          vehicle: this.addFuelForm.value.vehicleNumber,\r\n          vehicle_type: this.addFuelForm.value.vehicleType,\r\n          date: (this.addFuelForm.value.date).split('T')[0],\r\n          location: this.addFuelForm.value.location,\r\n          time: time2,\r\n          fleet: this.database.current.user.fleet,\r\n          company: this.database.current.user.company,\r\n          FuelTopUp: this.addFuelForm.value.FuelTopUp,\r\n        };\r\n        let subAutoID = this.database.collection('fuel').doc().id;\r\n        new_fuel.id = subAutoID\r\n        console.log('new_fuel=${JSON.stringify(new_fuel)}');\r\n        await this.database.write('fuel', new_fuel.id, new_fuel);\r\n        this.errorMessage = '';\r\n        this.successMessage = 'Your Fuel has been added.';\r\n\r\n        this.showToast(this.successMessage);\r\n        this.navCtrl.pop();\r\n      } catch (err) {\r\n\r\n        this.errorMessage = `Add Fuel error: ${err}`;\r\n        this.successMessage = '';\r\n\r\n        this.showToast(this.errorMessage);\r\n        this.navCtrl.pop();\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"add-fuel-add-fuel-module-es5.js"}