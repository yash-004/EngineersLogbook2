{"version":3,"sources":["./src/app/add-drive/add-drive.page.html","./src/app/add-drive/add-drive.module.ts","./src/app/add-drive/add-drive.page.scss","./src/app/add-drive/add-drive.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,2jDAA4/C,sBAAsB,4xBAA4xB,sBAAsB,8YAA8Y,KAAK,GAAG,KAAK,qcAAqc,sBAAsB,ycAAyc,SAAS,GAAG,QAAQ,2eAA2e,sBAAsB,4/BAA4/B,sBAAsB,0sBAA0sB,sBAAsB,2nBAA2nB,sBAAsB,wgCAAwgC,sBAAsB,gsBAAgsB,sBAAsB,inBAAinB,sBAAsB,qKAAqK,qCAAqC,+pBAA+pB,sBAAsB,21E;;;;;;;;;;;;;;;;;;;;;;ACA3vT;AACM;AACmB;AACX;AAEV;AAEG;AAEhD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4DAAY;KACxB;CACF,CAAC;AAYF,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;CAAG;AAArB,kBAAkB;IAV9B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,kEAAmB;YACnB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,4DAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;AC1B/B;AAAe,2EAAY,8BAA8B,8BAA8B,EAAE,oBAAoB,6CAA6C,EAAE,kBAAkB,uBAAuB,EAAE,yBAAyB,+BAA+B,EAAE,oDAAoD,oBAAoB,EAAE,+CAA+C,ulC;;;;;;;;;;;;;;;;;;;;;;;ACArT;AACY;AAClC;AAC4C;AAC1C;AACA;AAClB,CAAC,6DAA6D;AAQ7F,IAAa,YAAY,GAAzB,MAAa,YAAY;IAmDvB,YACU,OAAsB,EACtB,WAAwB,EACzB,eAAgC,EAChC,QAAyB,EACzB,KAAqB;QAJpB,YAAO,GAAP,OAAO,CAAe;QACtB,gBAAW,GAAX,WAAW,CAAa;QACzB,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,UAAK,GAAL,KAAK,CAAgB;QApD9B,iBAAY,GAAG,EAAE,CAAC;QAClB,mBAAc,GAAG,EAAE,CAAC;QAEpB,UAAK,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAGjC,eAAU,GAAG,IAAI,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;QAIlB,uBAAkB,GAAG;YACnB,IAAI,EAAE;gBACJ,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,mBAAmB,EAAE;aAAC;YACrD,aAAa,EAAE;gBACb,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,6BAA6B,EAAE;gBAC5D,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,oDAAoD,EAAE;aACrF;YACD,WAAW,EAAE;gBACX,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,0BAA0B,EAAE;aAC1D;YACD,gBAAgB,EAAE;gBAChB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,oCAAoC,EAAE;aACpE;YACD,aAAa,EAAE;gBACb,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,yBAAyB,EAAE;aACzD;YACD,aAAa,EAAE;gBACb,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,8BAA8B,EAAE;aAC9D;YACD,SAAS,EAAE;gBACT,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,oBAAoB,EAAE;aACpD;YACD,WAAW,EAAE;gBACX,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,sBAAsB,EAAE;aACtD;YACD,WAAW,EAAE;gBACX,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,4BAA4B,EAAE;aAC5D;YACD,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,kBAAkB,EAAE;aAClD;YACD,SAAS,EAAE;gBACT,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,2BAA2B,EAAE;aAC3D;SACF,CAAC;IAQE,CAAC;IAEL,OAAO;QACL,IAAI,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC,UAAU;QAC/B,IAAI,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC;QAChC,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QAChC,IAAI,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC;QAC9B,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,aAAa,CAAC,QAAQ,CAAC,EAAE,EAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QAChC,IAAI,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC7B,WAAW,CAAC,QAAQ,CAAC,EAAE,EAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,EAAE,IAAI,cAAc,IAAI,EAAE,GAAG,YAAY,EAAC;YAC5C,OAAO,KAAK,CAAC;SACd;QACD,IAAI,EAAE,IAAI,aAAa,IAAI,EAAE,GAAG,WAAW,EAAC;YAC1C,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,iBAAiB;QAClB,IAAI,MAAM,GAAI,uEAAY;QAC1B,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE;YAClD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAE,KAAK,CAAC,EAAE,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC;SACpD;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE;YAClD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAE,KAAK,CAAC,EAAE,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC;SACpD;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;YACrD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAE,KAAK,CAAC,EAAE,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC;SACvD;QACD,OAAO,MAAM;IAEnB,CAAC;IAED,QAAQ;QACN,gCAAgC;QAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,KAAK,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5E,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtG,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3E,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAChF,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC7E,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC7E,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,KAAK,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjF,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3E,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3E,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvE,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzE,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAClC,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YAC3D,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YAC3D,MAAM,EAAE,IAAI,0DAAW,CAAE,EAAE,CAAC;SAC7B,CAAC,CAAC;QAEL,8BAA8B;QAC9B,4BAA4B;QAE1B,kCAAkC;QAClC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC;QACjD,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;YACtB,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SAC7D;QACD,6CAA6C;QAC7C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC;QAE3C;;WAEG;QACH,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC;SACtD;QACD,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;YACtB,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAClD,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACzE;QACD,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE,EAAE,oBAAoB;YAC5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC;YACjD,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;aAAM,EAAG,+BAA+B;YACvC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAChG,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;gBAC/C,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;iBAAM,IACN,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,UAAU,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAC/M,YAAY;gBACZ,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAC/B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;iBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE;gBACvG,yCAAyC;gBACzC,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;gBACxD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;iBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACtG,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC;gBACnD,yCAAyC;gBACzC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;SACF;IACH,CAAC;IAED,iBAAiB;QAEf,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAC/B,kDAAkD;QAC/C,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QACpD,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QACnD,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAE9B,6EAA6E;QAC7E,yBAAyB;QACzB,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,SAAS,EAAE;YAC/F,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;YACtD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;SAC/C;IACF,CAAC;IAEF,kBAAkB;QAChB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAC1E,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACzE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAC1E,0CAA0C;QAC1C,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,eAAe,EAAE,CAAC;QACvD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,eAAe,EAAE,CAAC;QACvD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;QACnD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,eAAe,EAAE,CAAC;IACvD,CAAC;IAED,gBAAgB;QACd,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACtC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,+BAA+B;QAC/B,MAAM,KAAK,GAAG,kCAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC1D,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED,oBAAoB;QAClB,kBAAkB;QAClB,wCAAwC;QACxC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;QAClF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QACvE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACzE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,CAAC;QACzF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAC3E,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACnE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAClE,CAAC;IAED,kBAAkB;QAChB,kBAAkB;QAClB,sCAAsC;QACtC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC;QACrF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QACvE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC/D,OAAO,CAAC,GAAG,CAAC,YAAY,GAAK,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC9D,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACnE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;QACnF,sCAAsC;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;IAC7C,CAAC;IAED,sBAAsB;QACpB,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACjE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC;SACzD;IACH,CAAC;IAEK,QAAQ,CAAC,KAAK;;YAClB,2EAA2E;YAC3E,4CAA4C;YAC5C,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;gBAC5B,IAAI,CAAC,YAAY,GAAG,2DAA2D,CAAC;gBAChF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC/B,OAAO;aACR;YACD,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAC5D;gBAAC,IAAI;oBACH,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oBAE5D,iEAAiE;oBACjE,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;oBAC3E,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC;oBAChE,YAAY,CAAC,SAAS,GAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,gBAAgB,CAAC;oBACnE,YAAY,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjE,YAAY,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;oBAClF,YAAY,CAAC,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;oBAC9E,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC;oBAC5D,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;oBACtD,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;oBAC1D,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC;oBACrD,kBAAkB;oBAClB,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC;oBAChE,YAAY,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;oBAC3E,kFAAkF;oBACjF,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC;oBACxD,mEAAmE;oBACnE,YAAY,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC;oBAC7C,YAAY,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;oBACtE,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC;oBAE3D,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC;oBAC9D,YAAY,CAAC,MAAM,GAAG,SAAS,CAAC;oBAChC,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,YAAY,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;oBAClE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;oBACvB,IAAI,CAAC,cAAc,GAAG,8BAA8B,CAAC;oBACrD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;iBACrC;gBAAC,OAAO,GAAG,EAAE;oBACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,YAAY,GAAG,4BAA4B,CAAC;oBACjD,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;oBAEzB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACnC;aAAC;QACJ,CAAC;KAAA;IAEK,QAAQ,CAAC,KAAK;;YAClB,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACxE,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE;gBAC5D,8DAA8D;gBAC9D,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;gBAC/D,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAClD,4BAA4B;gBAC5B,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC9D,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,IAAI,CAAC,cAAc,GAAG,iDAAiD,CAAC;gBACxE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aAErC;iBAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;gBAChF,kDAAkD;gBAClD,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;gBACvD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACtB;iBAAM,EAAE,mDAAmD;gBAC1D,IAAI;oBACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC;oBACjD,MAAM,IAAI,GAAG,kCAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBAChF,IAAI,SAAS,GAAU;wBACrB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;wBACrC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK;wBACxC,MAAM,EAAE,aAAa;wBAErB,kBAAkB;wBAClB,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW,EAAE;wBAC5D,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW;wBACjD,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,gBAAgB;wBACnD,IAAI,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBAClD,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW,EAAE;wBACnE,cAAc,EAAE,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC;wBAC/D,UAAU,EAAE,IAAI;wBAChB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK;wBACvC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO;wBAC3C,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM;qBAEvC,CAAC;oBACF,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;oBACtD,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;oBAC7D,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,CAAC;oBAChC,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;oBAE9D,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;oBACvB,IAAI,CAAC,cAAc,GAAG,4BAA4B,CAAC;oBAEnD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;iBAErC;gBAAC,OAAO,GAAG,EAAE;oBAEZ,IAAI,CAAC,YAAY,GAAG,oBAAoB,GAAG,EAAE,CAAC;oBAC9C,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;oBACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;oBACnD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAClC,qBAAqB;iBACtB;aACF;QACH,CAAC;KAAA;IAED,SAAS,CAAC,GAAG;QACX,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;YAC1B,OAAO,EAAE,GAAG;YACZ,QAAQ,EAAE,IAAI;YACd,0BAA0B;YAC1B,0BAA0B;YAC1B,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACd,GAAG,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,QAAQ;QACN,4DAA4D;QAC5D,IAAI,IAAI,CAAC,SAAS,EAAE;YAAE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAAE;aAAM;YAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SAAE;QAC/E,0DAA0D;IAC5D,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;QAC3D,OAAO,KAAK,CAAC;IACf,CAAC;CACF;;YAtVoB,4DAAa;YACT,0DAAW;YACR,8DAAe;YACtB,0EAAe;YAClB,8DAAc;;AAxDnB,YAAY;IANxB,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,qNAAoC;;KAErC,CAAC;2EAsDmB,4DAAa;QACT,0DAAW;QACR,8DAAe;QACtB,0EAAe;QAClB,8DAAc;GAxDnB,YAAY,CA0YxB;AA1YwB","file":"add-drive-add-drive-module-es2015.js","sourcesContent":["export default \"<ion-header translucent>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Drive Details</ion-title>\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-item *ngIf=\\\"!gettime()\\\" color=\\\"danger\\\" text-wrap>\\r\\n    <ion-label>ONLY IN CAMP DRIVES ALLOWED</ion-label>\\r\\n  </ion-item>\\r\\n  <form class=\\\"form\\\" [formGroup]=\\\"addDriveForm\\\" (submit)=\\\"addDrive(addDriveForm.value)\\\">\\r\\n\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item text-wrap>\\r\\n            <ion-label position=\\\"floating\\\">driving area</ion-label>\\r\\n            <ion-select formControlName=\\\"incamp\\\" interface=\\\"popover\\\">\\r\\n              <ion-select-option text-wrap value=true>In Camp</ion-select-option>\\r\\n              <ion-select-option text-wrap value=false *ngIf=\\\"gettime()\\\">Out of Camp</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Date</ion-label>\\r\\n            <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" formControlName=\\\"date\\\"></ion-datetime>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.date\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"addDriveForm.get('date').hasError(validation.type) && (addDriveForm.get('date').dirty || addDriveForm.get('date').touched)\\\">\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item >\\r\\n            <ion-label position=\\\"floating\\\">Vehicle Number</ion-label>\\r\\n            <ion-input onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"vehicleNumber\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.vehicleNumber\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"addDriveForm.get('vehicleNumber').hasError(validation.type) && (addDriveForm.get('vehicleNumber').dirty || addDriveForm.get('vehicleNumber').touched)\\\">\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Vehicle Type</ion-label>\\r\\n            <ion-select formControlName=\\\"vehicleType\\\" interface=\\\"popover\\\">\\r\\n              <ion-select-option text-wrap *ngFor=\\\"let vty of getapprovedvtypes()\\\" value={{vty}}>{{vty}}</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.vehicleType\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"addDriveForm.get('vehicleType').hasError(validation.type) && (addDriveForm.get('vehicleType').dirty || addDriveForm.get('vehicleType').touched)\\\">\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Vehicle Commander</ion-label>\\r\\n            <ion-select formControlName=\\\"vehicleCommander\\\" interface=\\\"popover\\\">\\r\\n              <ion-select-option *ngFor=\\\"let c of database.current.all_commanders_of_driver\\\" value={{c.email}}>{{c.name}}\\r\\n              </ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.vehicleCommander\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"addDriveForm.get('vehicleCommander').hasError(validation.type) && (addDriveForm.get('vehicleCommander').dirty || addDriveForm.get('vehicleCommander').touched)\\\">\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n    <ion-card>\\r\\n      <ion-card-content>\\r\\n        <ion-item lines=\\\"none\\\" no-padding>\\r\\n          <ion-icon name=\\\"pin\\\" size=\\\"large\\\" color=\\\"primary\\\"></ion-icon>\\r\\n          <ion-label> Start Drive Details </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">Location</ion-label>\\r\\n          <ion-input type=\\\"text\\\" onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"startLocation\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validationMessages.startLocation\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n              *ngIf=\\\"addDriveForm.get('startLocation').hasError(validation.type) && (addDriveForm.get('startLocation').dirty || addDriveForm.get('startLocation').touched)\\\">\\r\\n              {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">Odometer</ion-label>\\r\\n          <ion-input type=\\\"number\\\" inputmode=\\\"numeric\\\" formControlName=\\\"startOdometer\\\" placeholder=\\\"Input Current Odometer Reading\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validationMessages.startOdometer\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n              *ngIf=\\\"addDriveForm.get('startOdometer').hasError(validation.type) && (addDriveForm.get('startOdometer').dirty || addDriveForm.get('startOdometer').touched)\\\">\\r\\n              {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">Time</ion-label>\\r\\n          <ion-datetime formControlName=\\\"startTime\\\" displayFormat=\\\"HH:mm\\\"></ion-datetime>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validationMessages.startTime\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n              *ngIf=\\\"addDriveForm.get('startTime').hasError(validation.type) && (addDriveForm.get('startTime').dirty || addDriveForm.get('startTime').touched)\\\">\\r\\n              {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n\\r\\n    <ion-card *ngIf=(drive)>\\r\\n      <ion-card-content>\\r\\n        <ion-item lines=\\\"none\\\" no-padding>\\r\\n          <ion-icon name=\\\"pin\\\" size=\\\"large\\\" color=\\\"success\\\"></ion-icon>\\r\\n          <ion-label> End Drive Details </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">Location</ion-label>\\r\\n          <ion-input type=\\\"text\\\" onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"endLocation\\\" placeholder=\\\"End Location\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validationMessages.endLocation\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n              *ngIf=\\\"addDriveForm.get('endLocation').hasError(validation.type) && (addDriveForm.get('endLocation').dirty || addDriveForm.get('endLocation').touched)\\\">\\r\\n              {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">Odometer</ion-label>\\r\\n          <ion-input type=\\\"number\\\" inputmode=\\\"numeric\\\" formControlName=\\\"endOdometer\\\" placeholder=\\\"Input Current Odometer Reading\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validationMessages.endOdometer\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n              *ngIf=\\\"addDriveForm.get('endOdometer').hasError(validation.type) && (addDriveForm.get('endOdometer').dirty || addDriveForm.get('endOdometer').touched)\\\">\\r\\n              {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">Time</ion-label>\\r\\n          <ion-datetime formControlName=\\\"endTime\\\" displayFormat=\\\"HH:mm\\\"></ion-datetime>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validationMessages.endTime\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n              *ngIf=\\\"addDriveForm.get('endTime').hasError(validation.type) && (addDriveForm.get('endTime').dirty || addDriveForm.get('endTime').touched)\\\">\\r\\n              {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n        <ion-item>\\r\\n          <ion-label>Fuel Level</ion-label>\\r\\n          <ion-label>{{addDriveForm.get('fuelLevel').value}}%</ion-label>\\r\\n          <ion-range min='0' max='100' color=\\\"secondary\\\" step='25' snaps=\\\"true\\\" ticks=\\\"true\\\" formControlName=\\\"fuelLevel\\\">\\r\\n            <ion-label slot=\\\"start\\\">empty</ion-label>\\r\\n            <ion-label slot=\\\"end\\\">full</ion-label>\\r\\n          </ion-range>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validationMessages.fuelLevel\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n              *ngIf=\\\"addDriveForm.get('fuelLevel').hasError(validation.type) && (addDriveForm.get('fuelLevel').dirty || addDriveForm.get('fuelLevel').touched)\\\">\\r\\n              {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n        <ion-item>\\r\\n          <ion-label>Maintenance Drive</ion-label>\\r\\n          <ion-toggle slot=\\\"start\\\" formControlName=\\\"maintenance\\\" (ionChange)=\\\"onToggle()\\\" [checked]=\\\"isToggled\\\"></ion-toggle>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label floating>Comments</ion-label>\\r\\n          <ion-textarea onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"driveComments\\\"></ion-textarea>\\r\\n        </ion-item>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n   <ion-card *ngIf=(showStatus)>\\r\\n      <ion-list>\\r\\n      <ion-radio-group formControlName=\\\"driveStatus\\\">\\r\\n        <ion-item>\\r\\n          <ion-label>Verified Drive</ion-label>\\r\\n          <ion-radio value='verified' formControlName='radioVerify'>Verify drive</ion-radio>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>Reject Drive</ion-label>\\r\\n          <ion-radio value='rejected' formControlName='radioReject'>Reject Drive</ion-radio>\\r\\n        </ion-item>\\r\\n      </ion-radio-group>\\r\\n      </ion-list>\\r\\n    </ion-card>\\r\\n\\r\\n    <div class=\\\"btn-wrapper\\\">\\r\\n      <div *ngIf = showSubmit()>\\r\\n        <ion-button *ngIf = this.database.current.user.is_commander routerLink=\\\"/tabs/commander\\\">Cancel</ion-button>\\r\\n        <ion-button *ngIf = !this.database.current.user.is_commander routerLink=\\\"/tabs/summary\\\">Cancel</ion-button>\\r\\n        <ion-button *ngIf = this.database.current.user.is_commander class=\\\"submit-btn\\\" type=\\\"submit\\\" routerLink=\\\"/tabs/commander\\\" [disabled]=\\\"!addDriveForm.valid || addDriveForm.get('driveStatus').value == null \\\" style=\\\"padding-right:10px\\\">Submit\\r\\n        </ion-button>\\r\\n        <ion-button *ngIf = !this.database.current.user.is_commander class=\\\"submit-btn\\\" type=\\\"submit\\\" routerLink=\\\"/tabs/summary\\\" [disabled]=\\\"!addDriveForm.valid\\\" style=\\\"padding-right:10px\\\">\\r\\n          Submit\\r\\n        </ion-button>\\r\\n      </div>\\r\\n      <div *ngIf = !showSubmit()>\\r\\n            <ion-button *ngIf = !this.database.current.user.is_commander expand=\\\"block\\\" routerLink=\\\"/tabs/summary\\\">OK</ion-button>\\r\\n            <ion-button *ngIf = this.database.current.user.is_commander expand=\\\"block\\\" routerLink=\\\"/tabs/commander\\\">OK</ion-button>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AddDrivePage } from './add-drive.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddDrivePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [AddDrivePage]\r\n})\r\nexport class AddDrivePageModule {}\r\n","export default \"ion-input {\\n  text-transform: uppercase;\\n  color: primary !important; }\\n\\nion-card-title {\\n  --color:--ion-color-primary-contrast-rgb; }\\n\\n.btn-wrapper {\\n  text-align: center; }\\n\\n.input[type=number] {\\n  -moz-appearance: textfield; }\\n\\n.input[type=number]::-webkit-inner-spin-button {\\n    display: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLWRyaXZlL0M6XFxVc2Vyc1xcUnVpXFxBbmRyb2lkU3R1ZGlvUHJvamVjdHNcXEVuZ2luZWVyc0xvZ2Jvb2syL3NyY1xcYXBwXFxhZGQtZHJpdmVcXGFkZC1kcml2ZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0E7RUFDRSx5QkFBeUI7RUFDekIseUJBQXdCLEVBQUE7O0FBRzFCO0VBQ0Usd0NBQVEsRUFBQTs7QUFHVjtFQUNFLGtCQUFrQixFQUFBOztBQUlwQjtFQUVFLDBCQUF5QixFQUFBOztBQUYzQjtJQUNnQyxhQUFhLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hZGQtZHJpdmUvYWRkLWRyaXZlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4qIHtcclxuLy8gIG9wYWNpdHk6IDEgIWltcG9ydGFudDsgIC8vIGRpc2FibGVkIGl0ZW1zIHdpbGwgbm90IGJlIGdyZXkgb3V0LlxyXG59XHJcblxyXG5pb24taW5wdXR7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBjb2xvcjogcHJpbWFyeSFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbmlvbi1jYXJkLXRpdGxle1xyXG4gIC0tY29sb3I6LS1pb24tY29sb3ItcHJpbWFyeS1jb250cmFzdC1yZ2I7XHJcbn1cclxuXHJcbi5idG4td3JhcHBlciB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4vLyBkbyBub3Qgc2hvdyBzcGlubmVyIGZvciBudW1iZXIgaW5wdXRzXHJcbi5pbnB1dFt0eXBlPW51bWJlcl0geyAgXHJcbiAgJjo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbnsgZGlzcGxheTogbm9uZTsgfVxyXG4gIC1tb3otYXBwZWFyYW5jZTp0ZXh0ZmllbGQ7XHJcbn0iXX0= */\"","import { Component, OnInit, wtfStartTimeRange } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { NavController } from '@ionic/angular';\r\nimport { DatabaseService, Drive, VehicleTypes, Mtrac } from '../services/database.service';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as dayjs from 'dayjs'; // DateTime utility, See http://zetcode.com/javascript/dayjs/\r\n\r\n@Component({\r\n  selector: 'app-add-drive',\r\n  templateUrl: './add-drive.page.html',\r\n  styleUrls: ['./add-drive.page.scss'],\r\n})\r\n\r\nexport class AddDrivePage implements OnInit {\r\n\r\n  addDriveForm: FormGroup;\r\n  endDriveForm: FormGroup;\r\n  errorMessage = '';\r\n  successMessage = '';\r\n  toast: any;\r\n  today = new Date().toISOString();\r\n  drive;\r\n  updateStatus;\r\n  showStatus = true;\r\n  isToggled = false;\r\n  isDisabled;\r\n  mtrac;\r\n\r\n  validationMessages = {\r\n    date: [\r\n      { type: 'required', message: 'Date is required.' }],\r\n    vehicleNumber: [\r\n      { type: 'required', message: 'Vehicle Number is required.' },\r\n      { type: 'minlength', message: 'Vehicle number must be at least 5 characters long.' }\r\n    ],\r\n    vehicleType: [\r\n      { type: 'required', message: 'Select a type of vehicle' },\r\n    ],\r\n    vehicleCommander: [\r\n      { type: 'required', message: 'Select the Vehicle Commanders Name' },\r\n    ],\r\n    startLocation: [\r\n      { type: 'required', message: 'Enter starting location' },\r\n    ],\r\n    startOdometer: [\r\n      { type: 'required', message: 'Enter current Odometer value' },\r\n    ],\r\n    startTime: [\r\n      { type: 'required', message: 'Enter current Time' },\r\n    ],\r\n    endLocation: [\r\n      { type: 'required', message: 'Enter final location' },\r\n    ],\r\n    endOdometer: [\r\n      { type: 'required', message: 'Enter final Odometer value' },\r\n    ],\r\n    endTime: [\r\n      { type: 'required', message: 'Enter final Time' },\r\n    ],\r\n    fuelLevel: [\r\n      { type: 'required', message: 'Indicate final fuel level' },\r\n    ]\r\n  };\r\n\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    private formBuilder: FormBuilder,\r\n    public toastController: ToastController,\r\n    public database: DatabaseService,\r\n    public route: ActivatedRoute\r\n  ) { }\r\n\r\n  gettime() {\r\n    var cd = new Date(); // for now\r\n    var nmtmoringstart = new Date();\r\n    nmtmoringstart.setHours(7,30,0);\r\n    var nmtmoringend = new Date();\r\n    nmtmoringend.setHours(9,30,0);\r\n    var nmtnightstart = new Date();\r\n    nmtnightstart.setHours(17,30,0);\r\n    var nmtnightend = new Date();\r\n    nmtnightend.setHours(19,30,0);\r\n    if (cd >= nmtmoringstart && cd < nmtmoringend){\r\n      return false;\r\n    }\r\n    if (cd >= nmtnightstart && cd < nmtnightend){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public getapprovedvtypes(): string[] {\r\n        var vtypes =  VehicleTypes\r\n        if (this.database.current.user.mss_certified != true) {\r\n            vtypes = vtypes.filter( vtype => vtype != 'MSS');\r\n        }\r\n        if (this.database.current.user.flb_certified != true) {\r\n            vtypes = vtypes.filter( vtype => vtype != 'FLB');\r\n        }\r\n        if (this.database.current.user.belrex_certified != true) {\r\n            vtypes = vtypes.filter( vtype => vtype != 'BELREX');\r\n        }\r\n        return vtypes\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Create form group of controls\r\n    this.addDriveForm = this.formBuilder.group({\r\n      date: new FormControl(this.today, Validators.compose([Validators.required])),\r\n      vehicleNumber: new FormControl('', Validators.compose([Validators.minLength(5), Validators.required])),\r\n      vehicleType: new FormControl('', Validators.compose([Validators.required])),\r\n      vehicleCommander: new FormControl('', Validators.compose([Validators.required])),\r\n      startLocation: new FormControl('', Validators.compose([Validators.required])),\r\n      startOdometer: new FormControl('', Validators.compose([Validators.required])),\r\n      startTime: new FormControl(this.today, Validators.compose([Validators.required])),\r\n      endLocation: new FormControl('', Validators.compose([Validators.required])),\r\n      endOdometer: new FormControl('', Validators.compose([Validators.required])),\r\n      endTime: new FormControl('', Validators.compose([Validators.required])),\r\n      maintenance: new FormControl(''),\r\n      fuelLevel: new FormControl('', Validators.compose([Validators.required])),\r\n      driveComments: new FormControl(''),\r\n      driveStatus: new FormControl(''),\r\n      radioVerify: new FormControl({ value: '', disabled: true }),\r\n      radioReject: new FormControl({ value: '', disabled: true }),\r\n      incamp: new FormControl ('')\r\n    });\r\n\r\n  //  this.updateStatus = false;\r\n  //  this.isDisabled = false;\r\n\r\n    // get the drive the user selected\r\n    this.drive = this.database.current.drive_to_edit;\r\n    if (this.drive != null) {\r\n      console.log('In add drive page: drive id:' + this.drive.id);\r\n    }\r\n    // Has gotten the info so reset drive_to_edit\r\n    this.database.current.drive_to_edit = null;\r\n\r\n    /* if user did not select any drive, ie user clicked on fab button,\r\n        check if there is an incompleted drive\r\n     */\r\n    if (this.drive == null) {\r\n      this.drive = this.database.current.drive_in_progress;\r\n    }\r\n    if (this.drive != null) {\r\n      console.log('drive status: ' + this.drive.status);\r\n      console.log('is commander: ' + this.database.current.user.is_commander);\r\n    }\r\n    if (this.drive == null) { // start a new drive\r\n      this.mtrac = this.database.current.mtrac_to_edit;\r\n      this.startDriveControls();\r\n      this.updateStatus = false;\r\n      this.isDisabled = false;\r\n      this.showStatus = false;\r\n    } else {  // retrieving an existing drive\r\n      if (this.drive.driver != this.database.current.user.email && this.database.current.user.is_admin) {\r\n        console.log('editing drive info - admin user');\r\n        this.editDriveControls();\r\n        this.updateStatus = true;\r\n        this.showStatus = true;\r\n        this.isDisabled = false;\r\n      } else if\r\n      (this.drive.status === 'pending' || this.drive.status === 'verified' || ((this.drive.status === 'in-progress' || this.drive.status === 'rejected') && this.drive.commander == this.database.current.user.email)) {\r\n        // view only\r\n        console.log('viewing a drive');\r\n        this.updateStatus = false;\r\n        this.showStatus = true;\r\n        this.isDisabled = true;\r\n        this.viewDriveControls();\r\n      } else if (this.drive.status === 'in-progress' && this.drive.driver == this.database.current.user.email) {\r\n        // driver enter details to complete drive\r\n        console.log('completing an in-progress drive - driver');\r\n        this.updateStatus = false;\r\n        this.isDisabled = false;\r\n        this.showStatus = false;\r\n        this.endDriveControls();\r\n      } else if ((this.drive.status === 'rejected' && this.drive.driver == this.database.current.user.email)) {\r\n        console.log('editing rejected drive info - driver')\r\n        // driver edit details for rejected drive\r\n        this.updateStatus = false;\r\n        this.showStatus = true;\r\n        this.isDisabled = false;\r\n        this.editDriveControls();\r\n      }\r\n    }\r\n  }\r\n\r\n  viewDriveControls()\r\n  {\r\n    this.addDriveForm.disable();\r\n //   this.isDisabled = this.addDriveForm.disabled;\r\n    console.log('form is disabled? ' + this.isDisabled);\r\n    console.log('update status? ' + this.updateStatus);\r\n    this.setStartDriveDetails();\r\n    this.setEndDriveDetails();\r\n    this.setDriveStatusControls();\r\n\r\n    // if commander and drive status is pending, add verified and reject controls\r\n    // else display ok button\r\n    if (this.drive.commander == this.database.current.user.email && this.drive.status === 'pending') {\r\n      console.log('commander need to approve/reject drive');\r\n      this.updateStatus = true;\r\n      this.addDriveForm.get('driveStatus').setValidators(Validators.required);\r\n      this.addDriveForm.get('radioVerify').enable();\r\n      this.addDriveForm.get('radioReject').enable();\r\n    }\r\n   }\r\n\r\n  startDriveControls() {\r\n    this.addDriveForm.get('date').setValue(this.today);\r\n    this.addDriveForm.get('startTime').setValue(this.today);\r\n    this.addDriveForm.get('incamp').setValue(this.mtrac.incamp);\r\n    this.addDriveForm.get('vehicleNumber').setValue(this.mtrac.vehicleNumber);\r\n    this.addDriveForm.get('vehicleCommander').setValue(this.mtrac.commander);\r\n    this.addDriveForm.get('startLocation').setValue(this.mtrac.startLocation);\r\n    // clear validators for end drive controls\r\n    this.addDriveForm.get('endLocation').clearValidators();\r\n    this.addDriveForm.get('endOdometer').clearValidators();\r\n    this.addDriveForm.get('endTime').clearValidators();\r\n    this.addDriveForm.get('fuelLevel').clearValidators();\r\n  }\r\n\r\n  endDriveControls() {\r\n    console.log('incomplete drive exist');\r\n    this.setStartDriveDetails();\r\n    // set end Time to current time\r\n    const time2 = dayjs(new Date(this.today)).format('HH:mm');\r\n    this.addDriveForm.get('endTime').setValue(time2);\r\n  }\r\n\r\n  editDriveControls() {\r\n    this.addDriveForm.reset();\r\n    this.setStartDriveDetails();\r\n    this.setEndDriveDetails();\r\n    this.setDriveStatusControls();\r\n  }\r\n\r\n  setStartDriveDetails() {\r\n    // Stage-1 details\r\n    // populate values of start drive fields\r\n    this.addDriveForm.get('date').setValue(this.drive.date);\r\n    this.addDriveForm.get('vehicleNumber').setValue(this.drive.vehicle.toUpperCase());\r\n    this.addDriveForm.get('vehicleType').setValue(this.drive.vehicle_type);\r\n    this.addDriveForm.get('vehicleCommander').setValue(this.drive.commander);\r\n    this.addDriveForm.get('startLocation').setValue(this.drive.start_location.toUpperCase());\r\n    this.addDriveForm.get('startOdometer').setValue(this.drive.start_odometer);\r\n    this.addDriveForm.get('startTime').setValue(this.drive.start_time);\r\n    this.addDriveForm.get('incamp').setValue(this.drive.incamp);\r\n    console.log('start time: ' + this.addDriveForm.value.startTime);\r\n  }\r\n\r\n  setEndDriveDetails() {\r\n    // Stage-2 details\r\n    // populate values of end drive fields\r\n    this.addDriveForm.get('endLocation').setValue(this.drive.end_location.toUpperCase());\r\n    this.addDriveForm.get('endOdometer').setValue(this.drive.end_odometer);\r\n    this.addDriveForm.get('endTime').setValue(this.drive.end_time);\r\n    console.log('end time: ' +   this.addDriveForm.value.endTime);\r\n    this.addDriveForm.get('fuelLevel').setValue(this.drive.fuel_level);\r\n    this.addDriveForm.get('driveComments').setValue(this.drive.comments.toUpperCase());\r\n    // set the maintenance toggle to check\r\n    this.isToggled = this.drive.is_maintenance;\r\n  }\r\n\r\n  setDriveStatusControls() {\r\n    if (this.showStatus) {\r\n      this.addDriveForm.get('driveStatus').setValue(this.drive.status);\r\n      console.log(this.addDriveForm.get('driveStatus').value);\r\n    }\r\n  }\r\n\r\n  async endDrive(value) {\r\n    // added this check as end drive details can be saved despite missing info.\r\n    // check if all mandatory fields are entered\r\n    if (!this.addDriveForm.valid) {\r\n      this.errorMessage = 'Drive cannot be updated... missing end drive information.';\r\n      this.showToast(this.errorMessage);\r\n      console.log(this.errorMessage);\r\n      return;\r\n    }\r\n    if (this.drive.commander != this.database.current.user.email)\r\n    {try {\r\n      const currentDrive = this.database.current.drive_history[0];\r\n\r\n      // Stage 1 details : the user may made some changes to these info\r\n      currentDrive.vehicle = this.addDriveForm.value.vehicleNumber.toUpperCase();\r\n      currentDrive.vehicle_type = this.addDriveForm.value.vehicleType;\r\n      currentDrive.commander =  this.addDriveForm.value.vehicleCommander;\r\n      currentDrive.date = (this.addDriveForm.value.date).split('T')[0];\r\n      currentDrive.start_location = this.addDriveForm.value.startLocation.toUpperCase();\r\n      currentDrive.start_odometer = parseInt(this.addDriveForm.value.startOdometer);\r\n      currentDrive.start_time = this.addDriveForm.value.startTime;\r\n      currentDrive.fleet = this.database.current.user.fleet;\r\n      currentDrive.company = this.database.current.user.company;\r\n      currentDrive.incamp = this.addDriveForm.value.incamp;\r\n      // Stage 2 details\r\n      currentDrive.end_location = this.addDriveForm.value.endLocation;\r\n      currentDrive.end_odometer = parseInt(this.addDriveForm.value.endOdometer);\r\n     // const time2 = dayjs(new Date(this.addDriveForm.value.endTime)).format('HH:mm');\r\n      currentDrive.end_time = this.addDriveForm.value.endTime;\r\n      // store the maintenance toggle checked value in the drive document\r\n      currentDrive.is_maintenance = this.isToggled;\r\n      currentDrive.fuel_level = parseInt(this.addDriveForm.value.fuelLevel);\r\n      console.log('Fuel level (UI): ' + currentDrive.fuel_level);\r\n\r\n      currentDrive.comments = this.addDriveForm.value.driveComments;\r\n      currentDrive.status = 'pending';\r\n      await this.database.write('drive', currentDrive.id, currentDrive);\r\n      this.errorMessage = '';\r\n      this.successMessage = 'Your drive has been updated.';\r\n      this.showToast(this.successMessage);\r\n    } catch (err) {\r\n      console.log(err);\r\n      this.errorMessage = 'Update drive error: ${err}';\r\n      this.successMessage = '';\r\n\r\n      this.showToast(this.errorMessage);\r\n    }}\r\n  }\r\n\r\n  async addDrive(value) {\r\n    console.log('is Commander: ' + this.database.current.user.is_commander);\r\n    if (this.drive.commander == this.database.current.user.email) {\r\n      // commander has verified/rejected drive, update drive status.\r\n      this.drive.status = this.addDriveForm.get('driveStatus').value;\r\n      console.log('Drive status: ' + this.drive.status);\r\n      // update status in database\r\n      await this.database.write('drive', this.drive.id, this.drive);\r\n      this.errorMessage = '';\r\n      this.successMessage = 'The drive status has been updated successfully.';\r\n      this.showToast(this.successMessage);\r\n\r\n    } else if (this.database.current.drive_in_progress != null || this.drive != null) {\r\n      // the submit is to complete the drive information\r\n      console.log('Updating start and end drive details...');\r\n      this.endDrive(value);\r\n    } else { // the submit is to capture start drive information\r\n      try {\r\n        this.mtrac = this.database.current.mtrac_to_edit;\r\n        const time = dayjs(new Date(this.addDriveForm.value.startTime)).format('HH:mm');\r\n        var new_drive: Drive = {\r\n          created: this.database.getTimeStamp(),\r\n          driver: this.database.current.user.email,\r\n          status: \"in-progress\",\r\n\r\n          // Stage-1 details\r\n          vehicle: this.addDriveForm.value.vehicleNumber.toUpperCase(),\r\n          vehicle_type: this.addDriveForm.value.vehicleType,\r\n          commander: this.addDriveForm.value.vehicleCommander,\r\n          date: (this.addDriveForm.value.date).split('T')[0],\r\n          start_location: this.addDriveForm.value.startLocation.toUpperCase(),\r\n          start_odometer: parseInt(this.addDriveForm.value.startOdometer),\r\n          start_time: time,\r\n          fleet: this.database.current.user.fleet,\r\n          company: this.database.current.user.company,\r\n          incamp: this.addDriveForm.value.incamp,\r\n\r\n        };\r\n        console.log('new_drive=${JSON.stringify(new_drive)}');\r\n        await this.database.write('drive', this.mtrac.id, new_drive);\r\n        this.mtrac.status = \"completed\";\r\n        await this.database.write('mtrac', this.mtrac.id, this.mtrac);\r\n\r\n        this.errorMessage = '';\r\n        this.successMessage = 'Your drive has been added.';\r\n\r\n        this.showToast(this.successMessage);\r\n\r\n      } catch (err) {\r\n\r\n        this.errorMessage = `Add drive error: ${err}`;\r\n        this.successMessage = '';\r\n        console.log(this.errorMessage);\r\n        console.log(this.addDriveForm.value.startLocation);\r\n        this.showToast(this.errorMessage);\r\n        //this.navCtrl.pop();\r\n      }\r\n    }\r\n  }\r\n\r\n  showToast(msg) {\r\n    this.toastController.create({\r\n      message: msg,\r\n      duration: 2000,\r\n      //  showCloseButton: true,\r\n      //  closeButtonText: 'OK',\r\n      position: 'middle'\r\n    }).then((obj) => {\r\n      obj.present();\r\n    });\r\n  }\r\n\r\n  onCancel() {\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n  onToggle() {\r\n    //console.log(\"initial state - toggled: \" + this.isToggled);\r\n    if (this.isToggled) { this.isToggled = false; } else { this.isToggled = true; }\r\n    //console.log(\"final state - toggled: \" + this.isToggled);\r\n  }\r\n\r\n  showSubmit() {\r\n    if (this.updateStatus || !this.isDisabled) { return true; }\r\n    return false;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}