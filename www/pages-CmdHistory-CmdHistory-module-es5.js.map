{"version":3,"sources":["src/app/pages/CmdHistory/CmdHistory.page.html","src/app/pages/CmdHistory/CmdHistory.module.ts","src/app/pages/CmdHistory/CmdHistory.page.scss","src/app/pages/CmdHistory/CmdHistory.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header >\\r\\n  <ion-toolbar>\\r\\n    <ion-title>History</ion-title>\\r\\n    <ion-buttons slot=\\\"primary\\\">\\r\\n      <ion-button left routerLink=\\\"/\\\" routerDirection=\\\"root\\\" fill=\\\"clear\\\" slot=\\\"primary\\\">\\r\\n        Logout<ion-icon name=\\\"log-out\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-card>\\r\\n  <ion-list>\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"stacked\\\">Driver</ion-label>\\r\\n      <ion-select id=\\\"drvr\\\" interface=\\\"popover\\\" value=\\\"ALL\\\" class=\\\"full-width-select\\\">\\r\\n        <ion-select-option value=\\\"ALL\\\">ALL</ion-select-option>\\r\\n        <ion-select-option text-wrap *ngFor=\\\"let driver of database.current.all_drivers_of_commander\\\" value={{driver.email}} class=\\\"custom-font-size\\\">{{driver.email}}</ion-select-option>\\r\\n      </ion-select>\\r\\n      <ion-label position=\\\"stacked\\\">Vehicle Type</ion-label>\\r\\n        <ion-select id=\\\"vehitype\\\" interface=\\\"popover\\\" value=\\\"ALL\\\" class=\\\"full-width-select\\\">\\r\\n          <ion-select-option value=\\\"ALL\\\">ALL</ion-select-option>\\r\\n          <ion-select-option text-wrap *ngFor =\\\"let vehicle of database.current.stats.most_recent_drive_by_vehicle_type | keyvalue\\\" value={{vehicle.key}} class=\\\"custom-font-size\\\">{{vehicle.key}}</ion-select-option>\\r\\n        </ion-select>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-card>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <!-- Month/date Selector (Sticky header) -->\\r\\n\\r\\n  <ion-item-divider sticky>\\r\\n    <ion-grid>\\r\\n      <ion-row class=\\\"vertical-align-content\\\">\\r\\n        <ion-col no-padding text-center size=3>\\r\\n            <ion-button size=\\\"small\\\" (click)=\\\"incrementFilterPeriod(-1)\\\"><ion-icon name=\\\"return-left\\\"></ion-icon></ion-button>\\r\\n        </ion-col>\\r\\n\\r\\n        <ion-col no-padding text-center>\\r\\n          <h4>{{getFilterPeriodString()}}</h4>\\r\\n        </ion-col>\\r\\n\\r\\n        <ion-col no-padding text-center size=3>\\r\\n            <ion-button size=\\\"small\\\" (click)=\\\"incrementFilterPeriod(+1)\\\"><ion-icon name=\\\"return-right\\\"></ion-icon></ion-button>\\r\\n        </ion-col>\\r\\n\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-item-divider>\\r\\n\\r\\n  <div style=\\\"display: block\\\">\\r\\n    <canvas baseChart\\r\\n                [data]=\\\"chartData\\\"\\r\\n                [labels]=\\\"chartLabels\\\"\\r\\n                [chartType]=\\\"chartType\\\"\\r\\n                [colors]=\\\"chartColors\\\"\\r\\n                (chartHover)=\\\"chartHovered($event)\\\"\\r\\n                (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n  </div>\\r\\n\\r\\n  <ion-card>\\r\\n    <div class=\\\"ion-text-center\\\" style=\\\"width: 100%;\\\">\\r\\n      <ion-icon name=\\\"speedometer\\\" size=\\\"small\\\"></ion-icon>\\r\\n      <ion-label class=\\\"slide_num\\\" *ngIf=\\\"getFilterPeriodString()=='All'\\\"> Total Mileage: {{getMileage()}} km</ion-label>\\r\\n      <ion-label *ngIf=\\\"getFilterPeriodString()!='All'\\\" class=\\\"slide_num\\\"> {{getFilterPeriodString()}} Total Mileage: {{getMileage()}} km</ion-label><br>\\r\\n      <ion-col *ngFor=\\\"let vehicle of database.current.stats.most_recent_drive_by_vehicle_type | keyvalue\\\">\\r\\n        {{vehicle.key}} : {{getMileagebyVehicleType(vehicle.key)}}\\r\\n      </ion-col>\\r\\n    </div>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-card *ngFor=\\\"let trip of getDrives()\\\">\\r\\n    <br>\\r\\n    <app-drive-view expandHeight='150px' expandWidth='100px' [drive]=\\\"trip\\\"></app-drive-view>\\r\\n  </ion-card>\\r\\n\\r\\n<!--\\r\\n    <ion-row >\\r\\n      <ion-col align=\\\"center\\\">\\r\\n      <ion-card >\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle>\\r\\n          <ion-item class=\\\"card\\\">\\r\\n          <ion-label position=\\\"floating\\\"></ion-label>\\r\\n          <ion-input disabled type=\\\"date\\\" name=\\\"text_drivedate\\\" color=\\\"success\\\">  </ion-input>\\r\\n            </ion-item>\\r\\n        </ion-card-subtitle>\\r\\n      <ion-card-title>\\r\\n        <ion-item class=\\\"card\\\" >\\r\\n          <ion-label color=\\\"success\\\" position=\\\"floating\\\">VehicleType</ion-label>\\r\\n          <ion-input color=\\\"success\\\" disabled type=\\\"number\\\" name=\\\"text_drivevehicletype\\\">  </ion-input>\\r\\n            </ion-item>\\r\\n    </ion-card-title>\\r\\n    </ion-card-header>\\r\\n\\r\\n    <ion-card-content>\\r\\n\\r\\n      <ion-grid>\\r\\n        <ion-row>\\r\\n          <ion-col >\\r\\n            <ion-item class=\\\"card\\\">\\r\\n          <ion-label color=\\\"success\\\" position=\\\"floating\\\">Total Time Driven</ion-label>\\r\\n          <ion-input disabled type=\\\"number\\\" name=\\\"text_driveduration\\\" color=\\\"success\\\">  </ion-input>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n          <ion-col>\\r\\n            <ion-item class=\\\"card\\\">\\r\\n          <ion-label color=\\\"success\\\" position=\\\"floating\\\">Total Mileage</ion-label>\\r\\n          <ion-input disabled type=\\\"number\\\" name=\\\"text_drivemileage\\\" color=\\\"success\\\">  </ion-input>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n-->\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CmdHistoryPage } from './CmdHistory.page';\r\nimport { DriveViewModule } from '../../drive-view/drive-view.module';\r\nimport { ChartsModule } from 'ng2-charts';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CmdHistoryPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    DriveViewModule,\r\n    ChartsModule\r\n  ],\r\n  declarations: [CmdHistoryPage\r\n  ]\r\n})\r\nexport class CmdHistoryPageModule {}\r\n","export default \".vertical-align-content > * {\\n  display: -webkit-box !important;\\n  display: flex !important;\\n  align-content: center !important;\\n  -webkit-box-align: center !important;\\n          align-items: center !important;\\n  -webkit-box-pack: center !important;\\n          justify-content: center !important; }\\n\\n.full-width-select {\\n  width: 100%;\\n  max-width: 100%; }\\n\\n.custom-font-size {\\n  font-size: 0.8em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvQ21kSGlzdG9yeS9DOlxcVXNlcnNcXFJ1aVxcQW5kcm9pZFN0dWRpb1Byb2plY3RzXFxFbmdpbmVlcnNMb2dib29rMi9zcmNcXGFwcFxccGFnZXNcXENtZEhpc3RvcnlcXENtZEhpc3RvcnkucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUssK0JBQXVCO0VBQXZCLHdCQUF1QjtFQUN2QixnQ0FBK0I7RUFDL0Isb0NBQTZCO1VBQTdCLDhCQUE2QjtFQUM3QixtQ0FBa0M7VUFBbEMsa0NBQWtDLEVBQUE7O0FBRXZDO0VBQ0UsV0FBVztFQUNYLGVBQWUsRUFBQTs7QUFFakI7RUFDSSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL0NtZEhpc3RvcnkvQ21kSGlzdG9yeS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudmVydGljYWwtYWxpZ24tY29udGVudCA+ICpcclxue1xyXG4gICAgIGRpc3BsYXk6IGZsZXghaW1wb3J0YW50O1xyXG4gICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlciFpbXBvcnRhbnQ7XHJcbiAgICAgYWxpZ24taXRlbXM6IGNlbnRlciFpbXBvcnRhbnQ7ICAvLyB2ZXJ0aWNhbCBhbGlnbm1lbnRcclxuICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50OyAgLy8gaG9yaXpvbnRhbCBhbGlnbm1lbnRcclxufVxyXG4uZnVsbC13aWR0aC1zZWxlY3Qge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxufVxyXG4uY3VzdG9tLWZvbnQtc2l6ZSB7XHJcbiAgICBmb250LXNpemU6IDAuOGVtO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { DatabaseService, Drive, VehicleTypes } from '../../services/database.service';\r\nimport * as dayjs from 'dayjs'; // DateTime utility, See http://zetcode.com/javascript/dayjs/;\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\n\r\n@Component({\r\n  selector: 'app-cmd_history',\r\n  templateUrl: './CmdHistory.page.html',\r\n  styleUrls: ['./CmdHistory.page.scss'],\r\n})\r\nexport class CmdHistoryPage implements OnInit {\r\n\r\n  select_month: number = 0;\r\n  select_year: number = 0;\r\n\r\n  constructor(\r\n    private database: DatabaseService,\r\n    private geolocation: Geolocation,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildChart();\r\n    let watch = this.geolocation.watchPosition();\r\n    watch.subscribe((data) => {\r\n      if ( ( parseFloat(data.coords.latitude.toFixed(9)), parseFloat(data.coords.longitude.toFixed(9)) ) != (this.database.current.user.location.lat, this.database.current.user.location.lng) )\r\n      { this.database.current.user.location = {lat: parseFloat(data.coords.latitude.toFixed(9)),lng: parseFloat(data.coords.longitude.toFixed(9))};\r\n        console.log(this.database.current.user.location);\r\n        console.log(\"write\");\r\n        this.database.write('user', this.database.current.user.email, this.database.current.user);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getMileage() {\r\n    var mileage = 0;\r\n    var drives = this.getDrives();\r\n    for (var d of drives) {\r\n      mileage += d.end_odometer - d.start_odometer }\r\n    return mileage;\r\n  }\r\n\r\n  getMileagebyVehicleType(vehicle: string) {\r\n    var mileage = 0;\r\n    var drives = this.getDrives();\r\n    for (var d of drives) {\r\n      if (d.vehicle_type == vehicle) {\r\n        mileage += d.end_odometer - d.start_odometer }\r\n      }\r\n    return mileage;\r\n  }\r\n\r\n  public getDrives() : Drive[] {\r\n\r\n    var drives = this.database.current.drive_history;\r\n    var vtype = (<HTMLInputElement>document.getElementById(\"vehitype\")).value;\r\n    var drvr = (<HTMLInputElement>document.getElementById(\"drvr\")).value;\r\n    // 4 cases\r\n    // if vtype = X and drvr = X\r\n    // if vtype = ALL and drvr = X\r\n    // if vtype = X and drvr = ALL\r\n    // if vtype = ALL and drvr = ALL\r\n    if (!this.select_month && !this.select_year) {\r\n      // if vtype = X and drvr = X\r\n      if (vtype != \"ALL\" && drvr != \"ALL\") {\r\n        var r = drives.filter( (drive) => drive.vehicle_type == vtype);\r\n        return r.filter( (drive) => drive.driver == drvr);\r\n      }\r\n      // if vtype = ALL and drvr = X\r\n      else if (vtype == \"ALL\" && drvr != \"ALL\") {\r\n        return drives.filter( (drive) => drive.driver == drvr);\r\n      }\r\n      // if vtype = X and drvr = ALL\r\n      else if (vtype != \"ALL\" && drvr == \"ALL\") {\r\n        return drives.filter( (drive) => drive.vehicle_type == vtype);\r\n      }\r\n      // if vtype = ALL and drvr = ALL\r\n      return drives\r\n    }\r\n    else {\r\n      // if vtype = X and drvr = X\r\n      if (vtype != \"ALL\" && drvr != \"ALL\") {\r\n        var r =drives.filter( (drive) => drive.vehicle_type == vtype);\r\n        var r =r.filter( (drive) => drive.driver == drvr);\r\n        return r.filter( (drive) => {\r\n          var elem = drive.date.split(\"-\");\r\n          return (!this.select_year||parseInt(elem[0])==this.select_year)\r\n            && (!this.select_month||parseInt(elem[1])==this.select_month);\r\n        });\r\n      }\r\n      // if vtype = ALL and drvr = X\r\n      else if (vtype == \"ALL\" && drvr != \"ALL\") {\r\n        var r =drives.filter( (drive) => drive.driver == drvr);\r\n        return r.filter( (drive) => {\r\n          var elem = drive.date.split(\"-\");\r\n          return (!this.select_year||parseInt(elem[0])==this.select_year)\r\n            && (!this.select_month||parseInt(elem[1])==this.select_month);\r\n        });\r\n      }\r\n      // if vtype = X and drvr = ALL\r\n      else if (vtype != \"ALL\" && drvr == \"ALL\") {\r\n        var r =drives.filter( (drive) => drive.vehicle_type == vtype);\r\n        return r.filter( (drive) => {\r\n          var elem = drive.date.split(\"-\");\r\n          return (!this.select_year||parseInt(elem[0])==this.select_year)\r\n            && (!this.select_month||parseInt(elem[1])==this.select_month);\r\n        });\r\n      }\r\n      // if vtype = ALL and drvr = ALL\r\n      return drives.filter( (drive) => {\r\n        var elem = drive.date.split(\"-\");\r\n        return (!this.select_year||parseInt(elem[0])==this.select_year)\r\n          && (!this.select_month||parseInt(elem[1])==this.select_month);\r\n      });\r\n    }\r\n  }\r\n\r\n  /*public getDrives() : Drive[] {\r\n\r\n    var drives = this.database.current.drive_history;\r\n\r\n    if (!this.select_month && !this.select_year) return drives; // No filter\r\n\r\n    return drives.filter( (drive) => {\r\n      var elem = drive.date.split(\"-\");\r\n      return (!this.select_year||parseInt(elem[0])==this.select_year) \r\n        && (!this.select_month||parseInt(elem[1])==this.select_month);\r\n    });\r\n  }*/\r\n  \r\n  public getFilterPeriodString(): string {\r\n    if (this.select_month==0 || this.select_year==0) {\r\n      return \"All\";\r\n    } else {\r\n      const dt = dayjs(new Date(this.select_year, this.select_month-1, 1));  // months in dayjs, Jan=0\r\n      return dt.format(\"MMMM, YYYY\");\r\n    }\r\n  }\r\n  \r\n  public incrementFilterPeriod(delta: number) {\r\n\r\n    const today = dayjs();\r\n\r\n    var changed: boolean = true;\r\n    \r\n    if (delta==-1) {\r\n      if (!this.select_month || !this.select_year) {\r\n        // Current month/year\r\n        this.select_month = today.month()+1;\r\n        this.select_year = today.year();\r\n      } else {\r\n        this.select_month--;\r\n        if (this.select_month==0) { \r\n          // Roll back to previous year\r\n          this.select_year--; \r\n          this.select_month = 12;\r\n        }\r\n      }\r\n    } else {\r\n      if (!this.select_month || !this.select_year) {\r\n        // Can't increment\r\n        changed = false;\r\n      } else {\r\n        // When incrementing beyond current month/year, select \"all\"\r\n        if (this.select_year==today.year() && (this.select_month-1)==today.month()) {\r\n          this.select_year = this.select_month = 0;\r\n        } else {\r\n          this.select_month++;\r\n          if (this.select_month==13) { \r\n            // Roll over to next year\r\n            this.select_year++; \r\n            this.select_month = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (changed) this.buildChart();\r\n  }\r\n\r\n  // Build Doughnut chart of mileage per VehicleType\r\n  public chartLabels:string[] = Object.keys(this.database.current.stats.most_recent_drive_by_vehicle_type);\r\n  public chartData:number[] = [ 0,0,0,0 ];\r\n  public chartType:string = 'doughnut';\r\n  public chartColors:any[] = [{backgroundColor: [\r\n            \"rgba(255,99,132,0.2)\",\r\n            \"rgba(54, 162, 235,0.2)\",\r\n            \"rgba(255, 206, 86,0.2)\",\r\n            \"rgba(75, 192, 192,0.2)\",\r\n            \"rgba(153, 102, 255,0.2)\",],\r\n            borderColor: [\r\n            \"rgba(255,99,132, 1)\",\r\n            \"rgba(54, 162, 235, 1)\",\r\n            \"rgba(255, 206, 86, 1)\",\r\n            \"rgba(75, 192, 192, 1)\",\r\n            \"rgba(153, 102, 255, 1)\",]\r\n            }];\r\n\r\n  private buildChart(): void {\r\n\r\n    var count:number[] = Array(this.chartLabels.length).fill(0)\r\n    \r\n    this.getDrives().map( (trip) => {\r\n      var valid_type = false;\r\n      for (let i=0; i<this.chartLabels.length; i++) {\r\n        if (trip.vehicle_type === this.chartLabels[i]) {\r\n          count[i] += this.database.distance(trip);\r\n          valid_type = true;\r\n        }\r\n      }\r\n      if (!valid_type) { console.log(`### Error: Invalid vehicle type: ${trip.vehicle_type} in ${trip.id}`); }\r\n    });\r\n    \r\n    //console.log(`>buildChart() = ${count}`);\r\n    this.chartData = count;\r\n  }\r\n  \r\n  public chartClicked(e:any):void {\r\n    //console.log(e);\r\n  }\r\n  public chartHovered(e:any):void {\r\n    //console.log(e);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"pages-CmdHistory-CmdHistory-module-es5.js"}