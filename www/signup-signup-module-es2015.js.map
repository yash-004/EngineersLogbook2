{"version":3,"sources":["./src/app/signup/signup.page.html","./src/app/signup/signup.module.ts","./src/app/signup/signup.page.scss","./src/app/signup/signup.page.ts"],"names":[],"mappings":"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","file":"signup-signup-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Signup</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content no-padding>\\r\\n\\r\\n  <form class=\\\"form\\\" [formGroup]=\\\"validationsForm\\\"  (ngSubmit)=\\\"tryRegister(validationsForm.value)\\\">\\r\\n    \\r\\n    <!-- Name ------------------->\\r\\n\\r\\n    <ion-item no-padding>\\r\\n      <ion-label position=\\\"floating\\\">Name</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\r\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('name').hasError(validation.type) && (validationsForm.get('name').dirty || validationsForm.get('name').touched)\\\">\\r\\n        {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n\\r\\n    <!-- Email ------------------->\\r\\n\\r\\n    <ion-item no-padding>\\r\\n      <ion-label  position=\\\"floating\\\">Email</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validationMessages.email\\\">\\r\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('email').hasError(validation.type) && (validationsForm.get('email').dirty || validationsForm.get('email').touched)\\\">\\r\\n        {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n    <!-- Unit ------------------->\\r\\n\\r\\n    <ion-item no-padding>\\r\\n      <ion-label position=\\\"floating\\\">Unit</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"unit\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validationMessages.unit\\\">\\r\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('unit').hasError(validation.type) && (validationsForm.get('unit').dirty || validationsForm.get('unit').touched)\\\">\\r\\n          {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n    <!-- Company/Platoon ------------------->\\r\\n\\r\\n    <ion-item no-padding>\\r\\n      <ion-label position=\\\"floating\\\">Company</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"company\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validationMessages.company\\\">\\r\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('company').hasError(validation.type) && (validationsForm.get('company').dirty || validationsForm.get('company').touched)\\\">\\r\\n        {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n    \\r\\n    <!-- Password ------------------->\\r\\n\\r\\n    <ion-item no-padding>\\r\\n      <ion-label  position=\\\"floating\\\">Password</ion-label>\\r\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validationMessages.password\\\">\\r\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('password').hasError(validation.type) && (validationsForm.get('password').dirty || validationsForm.get('password').touched)\\\">\\r\\n        {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n       \\r\\n    <ion-item no-padding>\\r\\n      <ion-label position=\\\"floating\\\">Confirm Password</ion-label>\\r\\n      <ion-input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validationMessages.confirmPassword\\\">\\r\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('confirmPassword').hasError(validation.type) && (validationsForm.get('confirmPassword').dirty || validationsForm.get('confirmPassword').touched)\\\">\\r\\n        {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n\\r\\n    <!-- Licence ------------------->\\r\\n    \\r\\n    <ion-item no-padding>\\r\\n      <ion-label position=\\\"floating\\\">License Number</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"licenseNum\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validationMessages.licenseNum\\\">\\r\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('licenseNum').hasError(validation.type) && (validationsForm.get('licenseNum').dirty || validationsForm.get('licenseNum').touched)\\\">\\r\\n        {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n    \\r\\n    <ion-item no-padding>\\r\\n      <ion-label floating >License Type</ion-label>\\r\\n      <ion-select formControlName=\\\"licenseType\\\">\\r\\n        <ion-select-option value=\\\"A\\\">A</ion-select-option>\\r\\n        <ion-select-option value=\\\"B\\\">B</ion-select-option>\\r\\n        <ion-select-option value=\\\"C\\\">C</ion-select-option>\\r\\n        <ion-select-option value=\\\"D\\\">D</ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n\\r\\n    <!-- Commander or Driver ------------------->\\r\\n\\r\\n    <ion-item no-padding>\\r\\n      <ion-label floating >Commander or Driver?</ion-label>\\r\\n      <ion-select formControlName=\\\"isCommander\\\">\\r\\n        <ion-select-option value=\\\"true\\\">Commander</ion-select-option>\\r\\n        <ion-select-option value=\\\"false\\\">Driver</ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n        \\r\\n    <!-- Submit Button ------------------->  \\r\\n    <BR><BR>\\r\\n    <ion-button expand=\\\"block\\\" class=\\\"submit-btn\\\" type=\\\"submit\\\"  [disabled]=\\\"!validationsForm.valid\\\">Sign up</ion-button>\\r\\n    <label class=\\\"error-message\\\">{{errorMessage}}</label>\\r\\n    <label class=\\\"success-message\\\">{{successMessage}}</label>\\r\\n\\r\\n    <!-- <ion-button expand=\\\"block\\\" routerLink=\\\"/tabs\\\" fill=\\\"outline\\\">Sign up</ion-button>  --> \\r\\n\\r\\n    <!-- Cancel Button ------------------->\\r\\n    <ion-button expand=\\\"block\\\" routerLink=\\\"/\\\" fill=\\\"outline\\\">Cancel</ion-button>\\r\\n\\r\\n  </form>\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SignupPage } from './signup.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SignupPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [SignupPage]\r\n})\r\nexport class SignupPageModule {}\r\n","export default \"ion-content {\\n  --padding-start: 10%;\\n  --padding-end: 10%;\\n  --padding-top: 5px; }\\n  ion-content .error-message {\\n    color: red;\\n    font-size: 0.8em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lnbnVwL0M6XFxVc2Vyc1xcUnVpXFxBbmRyb2lkU3R1ZGlvUHJvamVjdHNcXEVuZ2luZWVyc0xvZ2Jvb2syL3NyY1xcYXBwXFxzaWdudXBcXHNpZ251cC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFRSxvQkFBZ0I7RUFDaEIsa0JBQWM7RUFDZCxrQkFBYyxFQUFBO0VBSmhCO0lBT0ksVUFBVTtJQUNWLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2lnbnVwL3NpZ251cC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XHJcblxyXG4gIC0tcGFkZGluZy1zdGFydDogMTAlO1xyXG4gIC0tcGFkZGluZy1lbmQ6IDEwJTtcclxuICAtLXBhZGRpbmctdG9wOiA1cHg7XHJcblxyXG4gIC5lcnJvci1tZXNzYWdlIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBmb250LXNpemU6IDAuOGVtO1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { NavController } from '@ionic/angular';\r\nimport { DatabaseService, User } from '../services/database.service';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.page.html',\r\n  styleUrls: ['./signup.page.scss'],\r\n})\r\nexport class SignupPage implements OnInit {\r\n\r\n  validationsForm: FormGroup;\r\n  errorMessage = '';\r\n  successMessage = '';\r\n  toast: any;\r\n\r\n  validationMessages = {\r\n   name: [\r\n     { type: 'required', message: 'Name is required.' }],\r\n   email: [\r\n     { type: 'required', message: 'Email is required.' },\r\n     { type: 'pattern', message: 'Enter a valid email.' }\r\n   ],\r\n   unit: [\r\n     { type: 'required', message: 'Unit is required 30SCE or TPT.' },\r\n     { type: 'minlength', message: 'Unit must be at least 3 characters long.' }\r\n   ],\r\n   company: [\r\n     { type: 'required', message: 'Company is required A/B/C/ME or West.' },\r\n     { type: 'maxlength', message: 'Company must be less than 5 characters long. Alpha-A Bravo-B Charlie-C' }\r\n   ],\r\n   password: [\r\n     { type: 'required', message: 'Password is required.' },\r\n     { type: 'minlength', message: 'Password must be at least 6 characters long.' }\r\n   ],\r\n   confirmPassword: [\r\n    { type: 'required', message: 'You need to confirm your password.' },\r\n  ],\r\n   licenseNum: [\r\n    { type: 'required', message: 'License Number is required.' },\r\n    { type: 'minlength', message: 'License Number must be at least 5 characters long.' }\r\n  ]\r\n };\r\n\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    private authService: AuthenticationService,\r\n    private database: DatabaseService,\r\n    private formBuilder: FormBuilder,\r\n    public toastController: ToastController\r\n  ) {}\r\n\r\n  ngOnInit(){\r\n    this.validationsForm = this.formBuilder.group({\r\n      name: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      email: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      unit: new FormControl('', Validators.compose([\r\n        Validators.minLength(3),\r\n        Validators.required\r\n      ])),\r\n      company: new FormControl('', Validators.compose([\r\n        Validators.maxLength(4),\r\n        Validators.required\r\n      ])),\r\n      password: new FormControl('', Validators.compose([\r\n        Validators.minLength(6),\r\n        Validators.required\r\n      ])),\r\n      confirmPassword: new FormControl('', Validators.required),\r\n      licenseNum: new FormControl('', Validators.compose([\r\n        Validators.minLength(6),\r\n        Validators.required\r\n      ])),\r\n      licenseType: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ])),\r\n      isCommander: new FormControl('', Validators.compose([\r\n        Validators.required\r\n      ]))\r\n    });\r\n  }\r\n\r\n  async tryRegister(value){\r\n  \r\n    //console.log(`tryRegister: ${JSON.stringify(value)}`);\r\n    if (this.validationsForm.get('password').value !== this.validationsForm.get('confirmPassword').value) {\r\n      this.errorMessage = 'Password do not match';\r\n    }\r\n    else {\r\n      try {\r\n        const res = await this.authService.registerUser(value);\r\n        //console.log(`success: ${JSON.stringify(res)}`);\r\n        var new_user: User = {\r\n          name: value.name.toUpperCase(),\r\n          email: value.email,\r\n          fleet: value.unit.toUpperCase(),\r\n          company: value.company.toUpperCase(),\r\n          licence_num: value.licenseNum,\r\n          licence_type: value.licenseType,\r\n          created: this.database.getTimeStamp(),\r\n          mss_certified: false,\r\n          flb_certified: false,\r\n          belrex_certified: false,\r\n          m3g_certified: false,\r\n          is_driver: value.isCommander.toLowerCase() === 'false',\r\n          is_commander: value.isCommander.toLowerCase() === 'true',\r\n          location: {lat: 0, lng: 0},\r\n          admin_level: 1,\r\n        };\r\n        await this.database.write('user',res.user.email,new_user);\r\n        this.errorMessage = '';\r\n        this.successMessage = 'Your account has been created. Please log in.';\r\n        this.showToast(this.successMessage);\r\n        \r\n      } catch(err) {\r\n        console.log(err);\r\n        this.errorMessage = err.message;\r\n        this.successMessage = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  goLoginPage() {\r\n    this.navCtrl.navigateBack('');\r\n  }\r\n\r\n  showToast(msg) {\r\n    this.toastController.create({\r\n      message: msg,\r\n      duration: 2000,\r\n      showCloseButton: true,\r\n      closeButtonText: 'OK',\r\n      position: 'middle'\r\n    }).then((obj) => {\r\n      obj.present();\r\n      this.navCtrl.navigateBack('');\r\n    });\r\n  }\r\n \r\n}\r\n"],"sourceRoot":"webpack:///"}