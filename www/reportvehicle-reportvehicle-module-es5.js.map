{"version":3,"sources":["src/app/reportvehicle/reportvehicle.page.html","src/app/reportvehicle/reportvehicle.module.ts","src/app/reportvehicle/reportvehicle.page.scss","src/app/reportvehicle/reportvehicle.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,q/NAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,gDAAA,CAAA,mBAAA;AAFb,KADqB,CAAvB;;AAiBA,QAAa,uBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,uBAAuB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAVnC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,2CAAA,CAAA,qBAAA,CAJO,EAKP,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CALO,CADD;AAQR,MAAA,YAAY,EAAE,CAAC,gDAAA,CAAA,mBAAA,CAAD;AARN,KAAT,CAUmC,CAAA,EAAvB,uBAAuB,CAAvB;;;;;;;;;;;;;;;;AC1Bb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,2mDAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+DCMiB;;;AAQhC,QAAa,iBAAb;AAAA;AAAA;AAoCE,iCACU,OADV,EAEU,WAFV,EAGS,eAHT,EAIS,QAJT,EAKS,KALT,EAK8B;AAAA;;AAJpB,aAAA,OAAA,GAAA,OAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACD,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,KAAA,GAAA,KAAA;AArCT,aAAA,YAAA,GAAe,EAAf;AACA,aAAA,cAAA,GAAiB,EAAjB;AAEA,aAAA,KAAA,GAAQ,IAAI,IAAJ,GAAW,WAAX,EAAR;AAGA,aAAA,UAAA,GAAa,IAAb;AACA,aAAA,SAAA,GAAY,KAAZ;AAIA,aAAA,kBAAA,GAAqB;AACnB,UAAA,IAAI,EAAE,CACJ;AAAE,YAAA,IAAI,EAAE,UAAR;AAAoB,YAAA,OAAO,EAAE;AAA7B,WADI,CADa;AAGnB,UAAA,aAAa,EAAE,CACb;AAAE,YAAA,IAAI,EAAE,UAAR;AAAoB,YAAA,OAAO,EAAE;AAA7B,WADa,EAEb;AAAE,YAAA,IAAI,EAAE,WAAR;AAAqB,YAAA,OAAO,EAAE;AAA9B,WAFa,CAHI;AAOnB,UAAA,WAAW,EAAE,CACX;AAAE,YAAA,IAAI,EAAE,UAAR;AAAoB,YAAA,OAAO,EAAE;AAA7B,WADW,CAPM;AAUnB,UAAA,gBAAgB,EAAE,CAChB;AAAE,YAAA,IAAI,EAAE,UAAR;AAAoB,YAAA,OAAO,EAAE;AAA7B,WADgB,CAVC;AAanB,UAAA,WAAW,EAAE,CACX;AAAE,YAAA,IAAI,EAAE,UAAR;AAAoB,YAAA,OAAO,EAAE;AAA7B,WADW,CAbM;AAgBnB,UAAA,aAAa,EAAE,CACb;AAAE,YAAA,IAAI,EAAE,UAAR;AAAoB,YAAA,OAAO,EAAE;AAA7B,WADa;AAhBI,SAArB;AA2BK;;AA1CP;AAAA;AAAA,kCA4CS;AACL,cAAI,EAAE,GAAG,IAAI,IAAJ,EAAT,CADK,CACgB;;AACrB,cAAI,cAAc,GAAG,IAAI,IAAJ,EAArB;AACA,UAAA,cAAc,CAAC,QAAf,CAAwB,CAAxB,EAA0B,EAA1B,EAA6B,CAA7B;AACA,cAAI,YAAY,GAAG,IAAI,IAAJ,EAAnB;AACA,UAAA,YAAY,CAAC,QAAb,CAAsB,CAAtB,EAAwB,EAAxB,EAA2B,CAA3B;AACA,cAAI,aAAa,GAAG,IAAI,IAAJ,EAApB;AACA,UAAA,aAAa,CAAC,QAAd,CAAuB,EAAvB,EAA0B,EAA1B,EAA6B,CAA7B;AACA,cAAI,WAAW,GAAG,IAAI,IAAJ,EAAlB;AACA,UAAA,WAAW,CAAC,QAAZ,CAAqB,EAArB,EAAwB,EAAxB,EAA2B,CAA3B;;AACA,cAAI,EAAE,IAAI,cAAN,IAAwB,EAAE,GAAG,YAAjC,EAA8C;AAC5C,mBAAO,KAAP;AACD;;AACD,cAAI,EAAE,IAAI,aAAN,IAAuB,EAAE,GAAG,WAAhC,EAA4C;AAC1C,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD;AA7DH;AAAA;AAAA,4CA+D0B;AAClB,cAAI,MAAM,GAAI,uDAAA,CAAA,cAAA,CAAd;;AACA,cAAI,KAAK,QAAL,CAAc,OAAd,CAAsB,IAAtB,CAA2B,aAA3B,IAA4C,IAAhD,EAAsD;AAClD,YAAA,MAAM,GAAG,MAAM,CAAC,MAAP,CAAe,UAAA,KAAK;AAAA,qBAAI,KAAK,IAAI,KAAb;AAAA,aAApB,CAAT;AACH;;AACD,cAAI,KAAK,QAAL,CAAc,OAAd,CAAsB,IAAtB,CAA2B,aAA3B,IAA4C,IAAhD,EAAsD;AAClD,YAAA,MAAM,GAAG,MAAM,CAAC,MAAP,CAAe,UAAA,KAAK;AAAA,qBAAI,KAAK,IAAI,KAAb;AAAA,aAApB,CAAT;AACH;;AACD,cAAI,KAAK,QAAL,CAAc,OAAd,CAAsB,IAAtB,CAA2B,gBAA3B,IAA+C,IAAnD,EAAyD;AACrD,YAAA,MAAM,GAAG,MAAM,CAAC,MAAP,CAAe,UAAA,KAAK;AAAA,qBAAI,KAAK,IAAI,QAAb;AAAA,aAApB,CAAT;AACH;;AACD,iBAAO,MAAP;AAEL;AA5EH;AAAA;AAAA,mCA8EU;AACN;AACA,eAAK,YAAL,GAAoB,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AACzC,YAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,KAArB,EAA4B,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB,CAA5B,CADmC;AAEzC,YAAA,aAAa,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,CAArB,CAAD,EAA0B,2CAAA,CAAA,YAAA,CAAA,CAAW,QAArC,CAAnB,CAApB,CAF0B;AAGzC,YAAA,WAAW,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB,CAApB,CAH4B;AAIzC,YAAA,gBAAgB,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB,CAApB,CAJuB;AAKzC,YAAA,aAAa,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB,CAApB,CAL0B;AAMzC,YAAA,SAAS,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,KAArB,EAA4B,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB,CAA5B,CAN8B;AAOzC,YAAA,OAAO,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,KAArB,EAA4B,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB,CAA5B,CAPgC;AAQzC,YAAA,WAAW,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB,CAApB,CAR4B;AASzC,YAAA,WAAW,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB,CAApB,CAT4B;AAUzC,YAAA,MAAM,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAiB,EAAjB,CAViC;AAWzC,YAAA,aAAa,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB,CAApB;AAX0B,WAAvB,CAApB,CAFM,CAgBR;AACA;AAEE;;AACA,eAAK,KAAL,GAAa,KAAK,QAAL,CAAc,OAAd,CAAsB,aAAnC;;AACA,cAAI,KAAK,KAAL,IAAc,IAAlB,EAAwB;AACtB,YAAA,OAAO,CAAC,GAAR,CAAY,iCAAiC,KAAK,KAAL,CAAW,EAAxD;AACD,WAvBK,CAwBN;;;AACA,eAAK,QAAL,CAAc,OAAd,CAAsB,aAAtB,GAAsC,IAAtC;AAEA;;;;AAGA,cAAI,KAAK,KAAL,IAAc,IAAlB,EAAwB;AACtB,iBAAK,KAAL,GAAa,KAAK,QAAL,CAAc,OAAd,CAAsB,iBAAnC;AACD;;AACD,cAAI,KAAK,KAAT,EAAgB;AACd,YAAA,OAAO,CAAC,GAAR,CAAY,mBAAmB,KAAK,KAAL,CAAW,MAA1C;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,mBAAmB,KAAK,QAAL,CAAc,OAAd,CAAsB,IAAtB,CAA2B,YAA1D;AACD;;AACD,cAAI,KAAK,KAAL,IAAc,IAAlB,EAAwB;AAAE;AACxB,iBAAK,kBAAL;AACA,iBAAK,YAAL,GAAoB,KAApB;AACA,iBAAK,UAAL,GAAkB,KAAlB;AACA,iBAAK,UAAL,GAAkB,KAAlB;AACD,WALD,MAKO;AAAG;AACR,gBAAI,KAAK,KAAL,CAAW,MAAX,KAAsB,SAAtB,IAAmC,KAAK,KAAL,CAAW,MAAX,KAAsB,aAA7D,EAA4E;AAC1E;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,iBAAZ;AACA,mBAAK,YAAL,GAAoB,KAApB;AACA,mBAAK,UAAL,GAAkB,IAAlB;AACA,mBAAK,iBAAL;AACD,aAND,MAMO,IAAI,KAAK,KAAL,CAAW,MAAX,KAAsB,aAAtB,IAAuC,CAAC,KAAK,QAAL,CAAc,OAAd,CAAsB,IAAtB,CAA2B,YAAvE,EAAqF;AAC1F;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,0CAAZ;AACA,mBAAK,YAAL,GAAoB,KAApB;AACA,mBAAK,UAAL,GAAkB,KAAlB;AACA,mBAAK,UAAL,GAAkB,KAAlB;AACA,mBAAK,gBAAL;AACD;AACF;AACF;AAxIH;AAAA;AAAA,4CA0ImB;AAEf,eAAK,YAAL,CAAkB,OAAlB,GAFe,CAGlB;;AACG,UAAA,OAAO,CAAC,GAAR,CAAY,uBAAuB,KAAK,UAAxC;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,oBAAoB,KAAK,YAArC;AACA,eAAK,oBAAL;AACA,eAAK,gBAAL;AACC;AAlJL;AAAA;AAAA,6CAoJoB;AAChB,eAAK,YAAL,CAAkB,GAAlB,CAAsB,MAAtB,EAA8B,QAA9B,CAAuC,KAAK,KAA5C;AACA,eAAK,YAAL,CAAkB,GAAlB,CAAsB,WAAtB,EAAmC,QAAnC,CAA4C,KAAK,KAAjD,EAFgB,CAGhB;AACD;AAxJH;AAAA;AAAA,2CA0JkB;AACd,UAAA,OAAO,CAAC,GAAR,CAAY,wBAAZ;AACA,eAAK,oBAAL,GAFc,CAGd;;AACA,cAAM,KAAK,GAAG,kCAAK,CAAC,IAAI,IAAJ,CAAS,KAAK,KAAd,CAAD,CAAL,CAA4B,MAA5B,CAAmC,OAAnC,CAAd;AACA,eAAK,YAAL,CAAkB,GAAlB,CAAsB,SAAtB,EAAiC,QAAjC,CAA0C,KAA1C;AACA,eAAK,YAAL,CAAkB,GAAlB,CAAsB,eAAtB,EAAuC,MAAvC;AACA,eAAK,YAAL,CAAkB,GAAlB,CAAsB,aAAtB,EAAqC,MAArC;AACD;AAlKH;AAAA;AAAA,+CAoKsB;AAClB;AACA;AACA,eAAK,YAAL,CAAkB,GAAlB,CAAsB,MAAtB,EAA8B,QAA9B,CAAuC,KAAK,KAAL,CAAW,IAAlD;AACA,eAAK,YAAL,CAAkB,GAAlB,CAAsB,eAAtB,EAAuC,QAAvC,CAAgD,KAAK,KAAL,CAAW,OAAX,CAAmB,WAAnB,EAAhD;AACA,eAAK,YAAL,CAAkB,GAAlB,CAAsB,aAAtB,EAAqC,QAArC,CAA8C,KAAK,KAAL,CAAW,YAAzD;AACA,eAAK,YAAL,CAAkB,GAAlB,CAAsB,kBAAtB,EAA0C,QAA1C,CAAmD,KAAK,KAAL,CAAW,SAA9D;AACA,eAAK,YAAL,CAAkB,GAAlB,CAAsB,eAAtB,EAAuC,QAAvC,CAAgD,KAAK,KAAL,CAAW,cAAX,CAA0B,WAA1B,EAAhD;AACA,eAAK,YAAL,CAAkB,GAAlB,CAAsB,WAAtB,EAAmC,QAAnC,CAA4C,KAAK,KAAL,CAAW,UAAvD;AACA,eAAK,YAAL,CAAkB,GAAlB,CAAsB,QAAtB,EAAgC,QAAhC,CAAyC,KAAK,KAAL,CAAW,MAApD;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,iBAAiB,KAAK,YAAL,CAAkB,KAAlB,CAAwB,SAArD;AACD;AA/KH;AAAA;AAAA,iCAiLiB,KAjLjB,EAiLsB;;;;;;;;;AACZ,oBAAA,U,GAAa;AACb,sBAAA,OAAO,EAAE,KAAK,QAAL,CAAc,YAAd,EADI;AAEb,sBAAA,MAAM,EAAE,KAAK,QAAL,CAAc,OAAd,CAAsB,IAAtB,CAA2B,KAFtB;AAGb,sBAAA,MAAM,EAAE,aAHK;AAIb,sBAAA,cAAc,EAAE,KAAK,KAAL,CAAW,OAJd;AAKb,sBAAA,YAAY,EAAE,KAAK,KAAL,CAAW,YALZ;AAMb,sBAAA,SAAS,EAAE,KAAK,KAAL,CAAW,SANT;AAOb,sBAAA,IAAI,EAAG,KAAK,YAAL,CAAkB,KAAlB,CAAwB,IAAzB,CAA+B,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAPO;AAQb,sBAAA,cAAc,EAAE,KAAK,KAAL,CAAW,cARd;AASb,sBAAA,UAAU,EAAE,KAAK,KAAL,CAAW,UATV;AAUb,sBAAA,KAAK,EAAE,KAAK,QAAL,CAAc,OAAd,CAAsB,IAAtB,CAA2B,KAVrB;AAWb,sBAAA,OAAO,EAAE,KAAK,QAAL,CAAc,OAAd,CAAsB,IAAtB,CAA2B,OAXvB;AAYb,sBAAA,MAAM,EAAE,KAAK,YAAL,CAAkB,KAAlB,CAAwB,MAZnB;AAab,sBAAA,iBAAiB,EAAE,KAAK,YAAL,CAAkB,KAAlB,CAAwB,WAb9B;AAcb,sBAAA,WAAW,EAAE,KAAK,YAAL,CAAkB,KAAlB,CAAwB,aAdxB;AAeb,sBAAA,oBAAoB,EAAE,KAAK,QAAL,CAAc,OAAd,CAAsB,IAAtB,CAA2B;AAfpC,qB;;AAiBjB,2BAAM,KAAK,QAAL,CAAc,KAAd,CAAoB,kBAApB,EAAwC,KAAK,KAAL,CAAW,EAAnD,EAAuD,UAAvD,CAAN;;;AACA,yBAAK,cAAL,GAAsB,4BAAtB;AACA,yBAAK,SAAL,CAAe,KAAK,cAApB;AACA,yBAAK,OAAL,CAAa,GAAb;;;;;;;;;AACH;AAvMH;AAAA;AAAA,kCAyMY,GAzMZ,EAyMe;AACX,eAAK,eAAL,CAAqB,MAArB,CAA4B;AAC1B,YAAA,OAAO,EAAE,GADiB;AAE1B,YAAA,QAAQ,EAAE,IAFgB;AAG1B;AACA;AACA,YAAA,QAAQ,EAAE;AALgB,WAA5B,EAMG,IANH,CAMQ,UAAC,GAAD,EAAQ;AACd,YAAA,GAAG,CAAC,OAAJ;AACD,WARD;AASD;AAnNH;AAAA;AAAA,mCAqNU;AACN,eAAK,OAAL,CAAa,GAAb;AACD;AAvNH;AAAA;AAAA,qCAyNY;AACR,cAAI,CAAC,KAAK,UAAV,EAAsB;AAAE,mBAAO,IAAP;AAAc;;AACtC,iBAAO,KAAP;AACD;AA5NH;;AAAA;AAAA,OAAA;;;;cAqCqB,2CAAA,CAAA,eAAA;;cACI,2CAAA,CAAA,aAAA;;cACG,2CAAA,CAAA,iBAAA;;cACP,uDAAA,CAAA,iBAAA;;cACH,4CAAA,CAAA,gBAAA;;;;AAzCL,IAAA,iBAAiB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAN7B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,mBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,6FAAA,CAAA,YAFS;;;;AAAA,KAAV,CAM6B,E,uEAqCT,2CAAA,CAAA,eAAA,C,EACI,2CAAA,CAAA,aAAA,C,EACG,2CAAA,CAAA,iBAAA,C,EACP,uDAAA,CAAA,iBAAA,C,EACH,4CAAA,CAAA,gBAAA,C,EAzCY,CAAA,EAAjB,iBAAiB,CAAjB","sourcesContent":["export default \"<ion-header translucent>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Vehicle & Incident Details</ion-title>\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <form class=\\\"form\\\" [formGroup]=\\\"addDriveForm\\\" (submit)=\\\"addDrive(addDriveForm.value)\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item text-wrap>\\r\\n            <ion-label position=\\\"floating\\\">driving area</ion-label>\\r\\n            <ion-select formControlName=\\\"incamp\\\" interface=\\\"popover\\\">\\r\\n              <ion-select-option text-wrap value=true>In Camp</ion-select-option>\\r\\n              <ion-select-option text-wrap value=false *ngIf=\\\"gettime()\\\">Out of Camp</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item >\\r\\n            <ion-label position=\\\"floating\\\">Vehicle Number</ion-label>\\r\\n            <ion-input onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"vehicleNumber\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.vehicleNumber\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"addDriveForm.get('vehicleNumber').hasError(validation.type) && (addDriveForm.get('vehicleNumber').dirty || addDriveForm.get('vehicleNumber').touched)\\\">\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Vehicle Type</ion-label>\\r\\n            <ion-select formControlName=\\\"vehicleType\\\" interface=\\\"popover\\\">\\r\\n              <ion-select-option text-wrap *ngFor=\\\"let vty of getapprovedvtypes()\\\" value={{vty}}>{{vty}}</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.vehicleType\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"addDriveForm.get('vehicleType').hasError(validation.type) && (addDriveForm.get('vehicleType').dirty || addDriveForm.get('vehicleType').touched)\\\">\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Vehicle Commander</ion-label>\\r\\n            <ion-select formControlName=\\\"vehicleCommander\\\" interface=\\\"popover\\\">\\r\\n              <ion-select-option *ngFor=\\\"let c of database.current.all_commanders_of_driver\\\" value={{c.email}}>{{c.name}}\\r\\n              </ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n          <div class=\\\"validation-errors\\\">\\r\\n            <ng-container *ngFor=\\\"let validation of validationMessages.vehicleCommander\\\">\\r\\n              <div class=\\\"error-message\\\"\\r\\n                *ngIf=\\\"addDriveForm.get('vehicleCommander').hasError(validation.type) && (addDriveForm.get('vehicleCommander').dirty || addDriveForm.get('vehicleCommander').touched)\\\">\\r\\n                {{ validation.message }}\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n    <ion-card>\\r\\n      <ion-card-content>\\r\\n        <ion-item lines=\\\"none\\\" no-padding>\\r\\n          <ion-icon name=\\\"pin\\\" size=\\\"large\\\" color=\\\"primary\\\"></ion-icon>\\r\\n          <ion-label> Drive Details </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">Start Location</ion-label>\\r\\n          <ion-input type=\\\"text\\\" onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"startLocation\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validationMessages.startLocation\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n              *ngIf=\\\"addDriveForm.get('startLocation').hasError(validation.type) && (addDriveForm.get('startLocation').dirty || addDriveForm.get('startLocation').touched)\\\">\\r\\n              {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"floating\\\">Current Location</ion-label>\\r\\n          <ion-input type=\\\"text\\\" onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"endLocation\\\" placeholder=\\\"Current Location Address\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validationMessages.endLocation\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"addDriveForm.get('endLocation').hasError(validation.type) && (addDriveForm.get('endLocation').dirty || addDriveForm.get('endLocation').touched)\\\">\\r\\n              {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label floating>Description</ion-label>\\r\\n          <ion-textarea formControlName=\\\"driveComments\\\" placeholder=\\\"Describe the incident (what happened? which part of vehicle is damaged?)\\\"></ion-textarea>\\r\\n        </ion-item>\\r\\n        <div class=\\\"validation-errors\\\">\\r\\n          <ng-container *ngFor=\\\"let validation of validationMessages.driveComments\\\">\\r\\n            <div class=\\\"error-message\\\"\\r\\n                 *ngIf=\\\"addDriveForm.get('driveComments').hasError(validation.type) && (addDriveForm.get('driveComments').dirty || addDriveForm.get('driveComments').touched)\\\">\\r\\n              {{ validation.message }}\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n\\r\\n    <div class=\\\"btn-wrapper\\\">\\r\\n      <div *ngIf = showSubmit()>\\r\\n        <ion-button *ngIf = this.database.current.user.is_commander routerLink=\\\"/tabs/commander\\\">Cancel</ion-button>\\r\\n        <ion-button *ngIf = !this.database.current.user.is_commander routerLink=\\\"/tabs/summary\\\">Cancel</ion-button>\\r\\n        <ion-button *ngIf = this.database.current.user.is_commander class=\\\"submit-btn\\\" type=\\\"submit\\\" [disabled]=\\\"!addDriveForm.valid\\\" style=\\\"padding-right:10px\\\">Submit\\r\\n        </ion-button>\\r\\n        <ion-button *ngIf = !this.database.current.user.is_commander class=\\\"submit-btn\\\" type=\\\"submit\\\" [disabled]=\\\"!addDriveForm.valid\\\" style=\\\"padding-right:10px\\\">Submit\\r\\n        </ion-button>\\r\\n      </div>\\r\\n      <div *ngIf = !showSubmit()>\\r\\n            <ion-button *ngIf = !this.database.current.user.is_commander expand=\\\"block\\\" routerLink=\\\"/tabs/summary\\\">OK</ion-button>\\r\\n            <ion-button *ngIf = this.database.current.user.is_commander expand=\\\"block\\\" routerLink=\\\"/tabs/commander\\\">OK</ion-button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ReportVehiclePage } from './reportvehicle.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReportVehiclePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ReportVehiclePage]\r\n})\r\nexport class ReportVehiclePageModule {}\r\n","export default \"ion-input {\\n  text-transform: uppercase;\\n  color: primary !important; }\\n\\nion-card-title {\\n  --color:--ion-color-primary-contrast-rgb; }\\n\\n.btn-wrapper {\\n  text-align: center; }\\n\\n.input[type=number] {\\n  -moz-appearance: textfield; }\\n\\n.input[type=number]::-webkit-inner-spin-button {\\n    display: none; }\\n\\nion-textarea {\\n  min-height: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVwb3J0dmVoaWNsZS9DOlxcVXNlcnNcXFJ1aVxcQW5kcm9pZFN0dWRpb1Byb2plY3RzXFxFbmdpbmVlcnNMb2dib29rMi9zcmNcXGFwcFxccmVwb3J0dmVoaWNsZVxccmVwb3J0dmVoaWNsZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0E7RUFDRSx5QkFBeUI7RUFDekIseUJBQXdCLEVBQUE7O0FBRzFCO0VBQ0Usd0NBQVEsRUFBQTs7QUFHVjtFQUNFLGtCQUFrQixFQUFBOztBQUlwQjtFQUVFLDBCQUF5QixFQUFBOztBQUYzQjtJQUNnQyxhQUFhLEVBQUE7O0FBSTdDO0VBQ0UsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9yZXBvcnR2ZWhpY2xlL3JlcG9ydHZlaGljbGUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbioge1xyXG4vLyAgb3BhY2l0eTogMSAhaW1wb3J0YW50OyAgLy8gZGlzYWJsZWQgaXRlbXMgd2lsbCBub3QgYmUgZ3JleSBvdXQuXHJcbn1cclxuXHJcbmlvbi1pbnB1dHtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGNvbG9yOiBwcmltYXJ5IWltcG9ydGFudDtcclxufVxyXG5cclxuaW9uLWNhcmQtdGl0bGV7XHJcbiAgLS1jb2xvcjotLWlvbi1jb2xvci1wcmltYXJ5LWNvbnRyYXN0LXJnYjtcclxufVxyXG5cclxuLmJ0bi13cmFwcGVyIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi8vIGRvIG5vdCBzaG93IHNwaW5uZXIgZm9yIG51bWJlciBpbnB1dHNcclxuLmlucHV0W3R5cGU9bnVtYmVyXSB7ICBcclxuICAmOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9ueyBkaXNwbGF5OiBub25lOyB9XHJcbiAgLW1vei1hcHBlYXJhbmNlOnRleHRmaWVsZDtcclxufVxyXG5cclxuaW9uLXRleHRhcmVhe1xyXG4gIG1pbi1oZWlnaHQ6IGF1dG87XHJcbiAgfSJdfQ== */\"","import { Component, OnInit, wtfStartTimeRange } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { NavController } from '@ionic/angular';\r\nimport { DatabaseService, Drive, VehicleTypes } from '../services/database.service';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as dayjs from 'dayjs'; // DateTime utility, See http://zetcode.com/javascript/dayjs/\r\n\r\n@Component({\r\n  selector: 'app-reportvehicle',\r\n  templateUrl: './reportvehicle.page.html',\r\n  styleUrls: ['./reportvehicle.page.scss'],\r\n})\r\n\r\nexport class ReportVehiclePage implements OnInit {\r\n\r\n  addDriveForm: FormGroup;\r\n  endDriveForm: FormGroup;\r\n  errorMessage = '';\r\n  successMessage = '';\r\n  toast: any;\r\n  today = new Date().toISOString();\r\n  drive;\r\n  updateStatus;\r\n  showStatus = true;\r\n  isToggled = false;\r\n  isDisabled;\r\n  report;\r\n\r\n  validationMessages = {\r\n    date: [\r\n      { type: 'required', message: 'Date is required.' }],\r\n    vehicleNumber: [\r\n      { type: 'required', message: 'Vehicle Number is required.' },\r\n      { type: 'minlength', message: 'Vehicle number must be at least 5 characters long.' }\r\n    ],\r\n    vehicleType: [\r\n      { type: 'required', message: 'Select a type of vehicle' },\r\n    ],\r\n    vehicleCommander: [\r\n      { type: 'required', message: 'Select the Vehicle Commanders Name' },\r\n    ],\r\n    endLocation: [\r\n      { type: 'required', message: 'Enter current location address' },\r\n    ],\r\n    driveComments: [\r\n      { type: 'required', message: 'Enter description of incident' },\r\n    ],\r\n  };\r\n\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    private formBuilder: FormBuilder,\r\n    public toastController: ToastController,\r\n    public database: DatabaseService,\r\n    public route: ActivatedRoute\r\n  ) { }\r\n\r\n  gettime() {\r\n    var cd = new Date(); // for now\r\n    var nmtmoringstart = new Date();\r\n    nmtmoringstart.setHours(7,30,0);\r\n    var nmtmoringend = new Date();\r\n    nmtmoringend.setHours(9,30,0);\r\n    var nmtnightstart = new Date();\r\n    nmtnightstart.setHours(17,30,0);\r\n    var nmtnightend = new Date();\r\n    nmtnightend.setHours(19,30,0);\r\n    if (cd >= nmtmoringstart && cd < nmtmoringend){\r\n      return false;\r\n    }\r\n    if (cd >= nmtnightstart && cd < nmtnightend){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public getapprovedvtypes(): string[] {\r\n        var vtypes =  VehicleTypes\r\n        if (this.database.current.user.mss_certified != true) {\r\n            vtypes = vtypes.filter( vtype => vtype != 'MSS');\r\n        }\r\n        if (this.database.current.user.flb_certified != true) {\r\n            vtypes = vtypes.filter( vtype => vtype != 'FLB');\r\n        }\r\n        if (this.database.current.user.belrex_certified != true) {\r\n            vtypes = vtypes.filter( vtype => vtype != 'BELREX');\r\n        }\r\n        return vtypes\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Create form group of controls\r\n    this.addDriveForm = this.formBuilder.group({\r\n      date: new FormControl(this.today, Validators.compose([Validators.required])),\r\n      vehicleNumber: new FormControl('', Validators.compose([Validators.minLength(5), Validators.required])),\r\n      vehicleType: new FormControl('', Validators.compose([Validators.required])),\r\n      vehicleCommander: new FormControl('', Validators.compose([Validators.required])),\r\n      startLocation: new FormControl('', Validators.compose([Validators.required])),\r\n      startTime: new FormControl(this.today, Validators.compose([Validators.required])),\r\n      endTime: new FormControl(this.today, Validators.compose([Validators.required])),\r\n      endLocation: new FormControl('', Validators.compose([Validators.required])),\r\n      endOdometer: new FormControl('', Validators.compose([Validators.required])),\r\n      incamp: new FormControl (''),\r\n      driveComments: new FormControl('', Validators.compose([Validators.required])),\r\n    });\r\n\r\n  //  this.updateStatus = false;\r\n  //  this.isDisabled = false;\r\n\r\n    // get the drive the user selected\r\n    this.drive = this.database.current.drive_to_edit;\r\n    if (this.drive != null) {\r\n      console.log('In add drive page: drive id:' + this.drive.id);\r\n    }\r\n    // Has gotten the info so reset drive_to_edit\r\n    this.database.current.drive_to_edit = null;\r\n\r\n    /* if user did not select any drive, ie user clicked on fab button,\r\n        check if there is an incompleted drive\r\n     */\r\n    if (this.drive == null) {\r\n      this.drive = this.database.current.drive_in_progress;\r\n    }\r\n    if (this.drive) {\r\n      console.log('drive status: ' + this.drive.status);\r\n      console.log('is commander: ' + this.database.current.user.is_commander);\r\n    }\r\n    if (this.drive == null) { // start a new drive\r\n      this.startDriveControls();\r\n      this.updateStatus = false;\r\n      this.isDisabled = false;\r\n      this.showStatus = false;\r\n    } else {  // retrieving an existing drive\r\n      if (this.drive.status === 'pending' || this.drive.status === 'in-progress') {\r\n        // view only\r\n        console.log('viewing a drive');\r\n        this.updateStatus = false;\r\n        this.showStatus = true;\r\n        this.viewDriveControls();\r\n      } else if (this.drive.status === 'in-progress' && !this.database.current.user.is_commander) {\r\n        // driver enter details to complete drive\r\n        console.log('completing an in-progress drive - driver');\r\n        this.updateStatus = false;\r\n        this.isDisabled = false;\r\n        this.showStatus = false;\r\n        this.endDriveControls();\r\n      }\r\n    }\r\n  }\r\n\r\n  viewDriveControls()\r\n  {\r\n    this.addDriveForm.disable();\r\n //   this.isDisabled = this.addDriveForm.disabled;\r\n    console.log('form is disabled? ' + this.isDisabled);\r\n    console.log('update status? ' + this.updateStatus);\r\n    this.setStartDriveDetails();\r\n    this.endDriveControls();\r\n    }\r\n\r\n  startDriveControls() {\r\n    this.addDriveForm.get('date').setValue(this.today);\r\n    this.addDriveForm.get('startTime').setValue(this.today);\r\n    // clear validators for end drive controls\r\n  }\r\n\r\n  endDriveControls() {\r\n    console.log('incomplete drive exist');\r\n    this.setStartDriveDetails();\r\n    // set end Time to current time\r\n    const time2 = dayjs(new Date(this.today)).format('HH:mm');\r\n    this.addDriveForm.get('endTime').setValue(time2);\r\n    this.addDriveForm.get('driveComments').enable();\r\n    this.addDriveForm.get('endLocation').enable();\r\n  }\r\n\r\n  setStartDriveDetails() {\r\n    // Stage-1 details\r\n    // populate values of start drive fields\r\n    this.addDriveForm.get('date').setValue(this.drive.date);\r\n    this.addDriveForm.get('vehicleNumber').setValue(this.drive.vehicle.toUpperCase());\r\n    this.addDriveForm.get('vehicleType').setValue(this.drive.vehicle_type);\r\n    this.addDriveForm.get('vehicleCommander').setValue(this.drive.commander);\r\n    this.addDriveForm.get('startLocation').setValue(this.drive.start_location.toUpperCase());\r\n    this.addDriveForm.get('startTime').setValue(this.drive.start_time);\r\n    this.addDriveForm.get('incamp').setValue(this.drive.incamp);\r\n    console.log('start time: ' + this.addDriveForm.value.startTime);\r\n  }\r\n\r\n  async addDrive(value) {\r\n      var new_report = {\r\n          created: this.database.getTimeStamp(),\r\n          driver: this.database.current.user.email,\r\n          status: \"in-progress\",\r\n          vehicle_number: this.drive.vehicle,\r\n          vehicle_type: this.drive.vehicle_type,\r\n          commander: this.drive.commander,\r\n          date: (this.addDriveForm.value.date).split('T')[0],\r\n          start_location: this.drive.start_location,\r\n          start_time: this.drive.start_time,\r\n          fleet: this.database.current.user.fleet,\r\n          company: this.database.current.user.company,\r\n          incamp: this.addDriveForm.value.incamp,\r\n          incident_location: this.addDriveForm.value.endLocation,\r\n          description: this.addDriveForm.value.driveComments,\r\n          incident_coordinates: this.database.current.user.location,\r\n        };\r\n      await this.database.write('vehiclebreakdown', this.drive.id, new_report);\r\n      this.successMessage = 'Your report has been sent.';\r\n      this.showToast(this.successMessage);\r\n      this.navCtrl.pop();\r\n  }\r\n\r\n  showToast(msg) {\r\n    this.toastController.create({\r\n      message: msg,\r\n      duration: 2000,\r\n      //  showCloseButton: true,\r\n      //  closeButtonText: 'OK',\r\n      position: 'middle'\r\n    }).then((obj) => {\r\n      obj.present();\r\n    });\r\n  }\r\n\r\n  onCancel() {\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n  showSubmit() {\r\n    if (!this.isDisabled) { return true; }\r\n    return false;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"reportvehicle-reportvehicle-module-es5.js"}