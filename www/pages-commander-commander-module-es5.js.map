{"version":3,"sources":["src/app/pages/commander/commander.page.html","src/app/pages/commander/commander.module.ts","src/app/pages/commander/commander.page.scss","src/app/pages/commander/commander.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Commander</ion-title>\\r\\n    <ion-buttons slot=\\\"primary\\\">\\r\\n      <ion-button left routerLink=\\\"/\\\" routerDirection=\\\"root\\\" fill=\\\"clear\\\" slot=\\\"primary\\\">\\r\\n        Logout<ion-icon name=\\\"log-out\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <!-- Notifications -->\\r\\n  <ion-item class=\\\"headers\\\" text-center><ion-label style=\\\"margin-bottom: 0;\\\"><h1> Notifications </h1></ion-label></ion-item>\\r\\n\\r\\n  <ion-card *ngFor=\\\"let drive of getPendingDrives()\\\" padding>\\r\\n\\r\\n    <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\">\\r\\n      <!--ion-fab-button size=\\\"small\\\" (click)=\\\"click(drive)\\\">View</ion-fab-button-->\\r\\n      <ion-fab-button size=\\\"small\\\" (click)=\\\"click(drive)\\\"><ion-icon name='share-alt'></ion-icon></ion-fab-button>\\r\\n      <!--ion-button fill=\\\"outline\\\" size=\\\"small\\\" (click)=\\\"click(drive)\\\">View</ion-button-->\\r\\n    </ion-fab>\\r\\n\\r\\n    <ion-card-subtitle color='danger'><strong>Pending review</strong></ion-card-subtitle>\\r\\n    <ion-card-title>{{drive.date}}</ion-card-title>\\r\\n\\r\\n    <ion-card-content no-padding>\\r\\n      Your drive on <b>{{drive.date}}</b> with <b>{{drive.driver}}</b> from\\r\\n      <b>{{drive.start_location}}</b> (<b>{{drive.start_time}}</b>) to \\r\\n      <b>{{drive.end_location}}</b> (<b>{{drive.end_time}}</b>)\\r\\n      is pending review.\\r\\n    </ion-card-content>\\r\\n\\r\\n  </ion-card>\\r\\n  <ion-card *ngFor=\\\"let form of getPendingMTRAC()\\\" padding>\\r\\n    <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\">\\r\\n      <!--ion-fab-button size=\\\"small\\\" (click)=\\\"click(drive)\\\">View</ion-fab-button-->\\r\\n      <ion-fab-button size=\\\"small\\\" (click)=\\\"clickmtrac(form)\\\"><ion-icon name='share-alt'></ion-icon></ion-fab-button>\\r\\n      <!--ion-button fill=\\\"outline\\\" size=\\\"small\\\" (click)=\\\"click(drive)\\\">View</ion-button-->\\r\\n    </ion-fab>\\r\\n    <ion-card-title>Complete MT-RAC</ion-card-title>\\r\\n  </ion-card>\\r\\n\\r\\n\\r\\n\\r\\n  <ion-item class=\\\"headers\\\" text-center><ion-label style=\\\"margin-bottom: 0;\\\"><h1> Operators </h1></ion-label></ion-item>\\r\\n\\r\\n  <ion-card>\\r\\n    <ion-list>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"stacked\\\">Driver</ion-label>\\r\\n        <ion-select id=\\\"driverlist\\\" interface=\\\"popover\\\" class=\\\"full-width-select\\\" value=\\\"ALL\\\">\\r\\n          <ion-select-option value=\\\"ALL\\\">ALL</ion-select-option>\\r\\n          <ion-select-option text-wrap *ngFor=\\\"let driver of database.current.all_drivers_of_commander\\\" value={{driver.email}} class=\\\"custom-font-size\\\">{{driver.email}}</ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </ion-card>\\r\\n  <ion-card *ngFor=\\\"let driver of getDrivers()\\\">\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle><ion-icon name=\\\"person\\\" text-center (click)=\\\"showother()\\\"></ion-icon> <strong> {{driver.name}} ({{driver.email}})</strong></ion-card-subtitle>\\r\\n      <ion-card-subtitle (click)=\\\"showother()\\\">Last drive: {{driver.summary.most_recent_drive | date: \\\"dd/MM/yyyy hh:mm\\\"}}, {{driver.summary.most_recent_drive | daysAgo}} days ago</ion-card-subtitle>\\r\\n      <ion-label position=\\\"stacked\\\" *ngIf=\\\"checkAll()==true\\\"><h2>Certifications</h2></ion-label>\\r\\n      <ion-button *ngIf=\\\"checkAll()==false\\\" (click)=\\\"showEdit()\\\">Certifications <ion-icon name=\\\"settings\\\"></ion-icon></ion-button>\\r\\n      <ion-grid>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-label color=\\\"success\\\"> OUV </ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col offset-4>\\r\\n            <ion-label color=\\\"success\\\"> 5TON </ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-label *ngIf=\\\"driver.mss_certified == true\\\" color=\\\"success\\\" > MSS </ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col offset-4 >\\r\\n            <ion-label *ngIf=\\\"driver.flb_certified == true\\\" color=\\\"success\\\"> FLB </ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-label *ngIf=\\\"driver.belrex_certified == true\\\" color=\\\"success\\\"> BELREX </ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col offset-4>\\r\\n            <ion-label *ngIf=\\\"driver.m3g_certified == true\\\" color=\\\"success\\\"> M3G </ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n\\r\\n      <ion-card *ngIf=\\\"checkEditDriverStatus()==true\\\">\\r\\n        <ion-list>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"stacked\\\">MSS</ion-label>\\r\\n            <ion-select id=\\\"mss\\\" interface=\\\"popover\\\" value={{driver.mss_certified}}>\\r\\n              <ion-select-option value=\\\"true\\\">Certified</ion-select-option>\\r\\n              <ion-select-option value=\\\"false\\\">Not Certified</ion-select-option>\\r\\n            </ion-select>\\r\\n            <ion-label position=\\\"stacked\\\">FLB</ion-label>\\r\\n            <ion-select id=\\\"flb\\\" interface=\\\"popover\\\" value={{driver.flb_certified}}>\\r\\n              <ion-select-option value=\\\"true\\\">Certified</ion-select-option>\\r\\n              <ion-select-option value=\\\"false\\\">Not Certified</ion-select-option>\\r\\n            </ion-select>\\r\\n            <ion-label position=\\\"stacked\\\">BELREX</ion-label>\\r\\n            <ion-select id=\\\"belrex\\\" interface=\\\"popover\\\" value={{driver.belrex_certified}}>\\r\\n              <ion-select-option value=\\\"true\\\">Certified</ion-select-option>\\r\\n              <ion-select-option value=\\\"false\\\">Not Certified</ion-select-option>\\r\\n            </ion-select>\\r\\n            <ion-label position=\\\"stacked\\\">M3G</ion-label>\\r\\n            <ion-select id=\\\"m3g\\\" interface=\\\"popover\\\" value={{driver.m3g_certified}}>\\r\\n              <ion-select-option value=\\\"true\\\">Certified</ion-select-option>\\r\\n              <ion-select-option value=\\\"false\\\">Not Certified</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n        <ion-button (click)=\\\"updateCertfication(getDriver())\\\">save changes</ion-button>\\r\\n      </ion-card>\\r\\n    </ion-card-header>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <ion-card-content>\\r\\n      <ion-grid class=\\\"table\\\" no-padding>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"4\\\" class=\\\"bubble-text\\\" no-padding><ion-card no-padding (click)=\\\"showdrives()\\\">\\r\\n            <div class=\\\"ion-text-center\\\" style=\\\"width: 100%;\\\">\\r\\n              <ion-icon name=\\\"car\\\" size=\\\"large\\\" ></ion-icon><br>\\r\\n              <div class=\\\"shift_up\\\">Drives</div>\\r\\n              <div class=\\\"slide_num\\\">{{driver.summary.drive_count}}</div>\\r\\n              <ion-label *ngIf=\\\"checkDriveStatus()\\\">\\r\\n                <h6 *ngFor=\\\"let vehicle of driver.summary.most_recent_drive_by_vehicle_type | keyvalue\\\">\\r\\n                  {{vehicle.key}} : {{getDrivesbyVehicleType(vehicle.key, driver)}}\\r\\n                </h6>\\r\\n              </ion-label>\\r\\n            </div>\\r\\n          </ion-card></ion-col>\\r\\n\\r\\n          <ion-col size=\\\"4\\\" class=\\\"bubble-text\\\" no-padding><ion-card no-padding (click)=\\\"showmileage()\\\">\\r\\n            <div class=\\\"ion-text-center\\\" style=\\\"width: 100%;\\\">\\r\\n              <ion-icon name=\\\"speedometer\\\" size=\\\"large\\\"></ion-icon><br>\\r\\n              <div class=\\\"shift_up\\\">Mileage</div>\\r\\n              <div class=\\\"slide_num\\\">{{driver.summary.mileage_km}} km</div>\\r\\n              <ion-label *ngIf=\\\"checkMileageStatus()\\\">\\r\\n                <h6 *ngFor=\\\"let vehicle of driver.summary.most_recent_drive_by_vehicle_type | keyvalue\\\">\\r\\n                  {{vehicle.key}} : {{getMileagebyVehicleType(driver.summary.mileage_by_vehicle_type, vehicle.key)}}\\r\\n                </h6>\\r\\n              </ion-label>\\r\\n            </div>\\r\\n          </ion-card></ion-col>\\r\\n\\r\\n          <ion-col size=\\\"4\\\" class=\\\"bubble-text\\\" no-padding><ion-card no-padding>\\r\\n            <div class=\\\"ion-text-center\\\" style=\\\"width: 100%;\\\" (click)=\\\"showother()\\\">\\r\\n              <ion-icon name=\\\"clock\\\" size=\\\"large\\\"></ion-icon><br>\\r\\n              <div class=\\\"shift_up\\\">Time Driven</div>\\r\\n              <div class=\\\"slide_num\\\">{{driver.summary.duration_minutes / 60 | number : '1.0-1' }} hours</div>\\r\\n            </div>\\r\\n          </ion-card></ion-col>\\r\\n\\r\\n\\r\\n          <ion-row text-center style=\\\"padding: 0 10px\\\" *ngIf=\\\"checkDriveStatus() || checkMileageStatus() || checkOtherStatus()\\\" (click)=\\\"showother()\\\">\\r\\n            <ion-col>\\r\\n              average drive distance: <br/> {{driver.summary.mileage_km / driver.summary.drive_count | number : '1.0-1'}} km\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              average drive duration: <br/>{{driver.summary.duration_minutes / 60 / driver.summary.drive_count | number : '1.0-1'}} hours\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-row>\\r\\n        <ion-row text-center (click)=\\\"showother()\\\">\\r\\n          <ion-col text-center><ion-card padding text-center>\\r\\n            <ion-grid>\\r\\n              <ion-row><ion-col><ion-card-title text-center>\\r\\n                <strong>JIT Countdown</strong>\\r\\n              </ion-card-title></ion-col></ion-row>\\r\\n\\r\\n              <ion-row><ion-col><ion-card-subtitle>\\r\\n\\r\\n                <ion-grid><ion-row><ion-col><ion-label *ngIf=\\\"checkTimelefttoJIT(driver.summary.most_recent_drive) == false\\\" color='danger' text-center>\\r\\n                  <strong><h2>\\r\\n                    DO JIT NOW!\\r\\n                  </h2></strong>\\r\\n                </ion-label></ion-col></ion-row></ion-grid>\\r\\n\\r\\n                <ion-label>\\r\\n                  <ion-item *ngIf=\\\"checkTimelefttoJIT(driver.summary.most_recent_drive) == true\\\" text-center>\\r\\n                    <ion-grid><ion-row><ion-col><countdown [config]=\\\"{leftTime: getTimelefttoJIT(driver.summary.most_recent_drive), format: 'dd'}\\\"></countdown>\\r\\n                        <h6 style=\\\"padding-bottom: 5px\\\">days</h6></ion-col>\\r\\n                      <ion-col><countdown [config]=\\\"{leftTime: getTimelefttoJIT(driver.summary.most_recent_drive), format: 'HH'}\\\"></countdown>\\r\\n                        <h6 style=\\\"padding-bottom: 5px\\\">hrs</h6></ion-col>\\r\\n                      <ion-col><countdown [config]=\\\"{leftTime: getTimelefttoJIT(driver.summary.most_recent_drive), format: 'mm'}\\\"></countdown>\\r\\n                        <h6 style=\\\"padding-bottom: 5px\\\">mins</h6></ion-col>\\r\\n                      <ion-col><countdown [config]=\\\"{leftTime: getTimelefttoJIT(driver.summary.most_recent_drive), format: 'ss'}\\\"></countdown>\\r\\n                        <h6 style=\\\"padding-bottom: 5px\\\">sec</h6></ion-col></ion-row></ion-grid>\\r\\n                  </ion-item>\\r\\n                </ion-label>\\r\\n           </ion-card-subtitle></ion-col></ion-row></ion-grid>\\r\\n          </ion-card></ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n      <!--<ion-grid  class=\\\"ion-no-padding\\\">\\r\\n        <ion-row text-center>\\r\\n          <ion-col text-center><ion-icon name=\\\"car\\\"></ion-icon> <br> Total Drives: <br> {{driver.summary.drive_count}}</ion-col>\\r\\n          <ion-col text-center><ion-icon name=\\\"speedometer\\\"></ion-icon> <br> Total Mileage:<br> {{driver.summary.mileage_km}} KM</ion-col>\\r\\n          <ion-col text-center><ion-icon name=\\\"clock\\\"></ion-icon> <br> Time Driven: <br> {{driver.summary.duration_minutes / 60 | number : '1.0-1' }} hours</ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n      </ion-grid>-->\\r\\n\\r\\n      <ion-item *ngFor=\\\"let vehicle of driver.summary.most_recent_drive_by_vehicle_type | keyvalue\\\" (click)=\\\"showother()\\\">\\r\\n\\r\\n\\r\\n          <ion-col *ngIf=\\\"checkOtherStatus()\\\" (click)=\\\"showother()\\\">\\r\\n            <ion-label *ngIf=\\\"checkOtherStatus()\\\">\\r\\n              <h3 class=\\\"underline\\\" *ngIf=\\\"checkOperatorCurrencyValid(vehicle.key,driver.summary.most_recent_drive_by_vehicle_type[vehicle.key])\\\">{{vehicle.key}}</h3>\\r\\n            </ion-label >\\r\\n            <ion-label  color='danger' *ngIf=\\\"checkOtherStatus()\\\">\\r\\n               <h3 class=\\\"underline\\\" *ngIf=\\\"checkOperatorCurrencyInvalid(vehicle.key,driver.summary.most_recent_drive_by_vehicle_type[vehicle.key])\\\">{{vehicle.key}}</h3>\\r\\n            </ion-label>\\r\\n          \\r\\n           Last Drive: {{driver.summary.most_recent_drive_by_vehicle_type[vehicle.key] | date: \\\"dd/MM/yyyy\\\"}}\\r\\n           ({{driver.summary.most_recent_drive_by_vehicle_type[vehicle.key] | daysAgo}} days ago)</ion-col>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CommanderPage } from './commander.page';\r\nimport { DriveViewModule } from '../../drive-view/drive-view.module';\r\nimport { PipesModule } from '../../pipes/pipes.module';\r\n\r\nimport { CountdownModule } from 'ngx-countdown';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CommanderPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CountdownModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    DriveViewModule,\r\n    PipesModule,\r\n  ],\r\n  declarations: [CommanderPage]\r\n})\r\nexport class CommanderPageModule {}\r\n","export default \".div {\\n  text-align: center;\\n  border: 6px solid black; }\\n\\n.vertical-align-content > * {\\n  display: -webkit-box !important;\\n  display: flex !important;\\n  align-content: center !important;\\n  -webkit-box-align: center !important;\\n          align-items: center !important; }\\n\\n.full-width-select {\\n  width: 100%;\\n  max-width: 100%; }\\n\\n.custom-font-size {\\n  font-size: 0.8em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY29tbWFuZGVyL0M6XFxVc2Vyc1xcUnVpXFxBbmRyb2lkU3R1ZGlvUHJvamVjdHNcXEVuZ2luZWVyc0xvZ2Jvb2syL3NyY1xcYXBwXFxwYWdlc1xcY29tbWFuZGVyXFxjb21tYW5kZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQWtCO0VBQ2xCLHVCQUF1QixFQUFBOztBQUUzQjtFQUVLLCtCQUF1QjtFQUF2Qix3QkFBdUI7RUFDdkIsZ0NBQStCO0VBQy9CLG9DQUE2QjtVQUE3Qiw4QkFBNkIsRUFBQTs7QUFHbEM7RUFDRSxXQUFXO0VBQ1gsZUFBZSxFQUFBOztBQUVqQjtFQUNJLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvY29tbWFuZGVyL2NvbW1hbmRlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGl2e1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgYm9yZGVyOiA2cHggc29saWQgYmxhY2s7XHJcbn1cclxuLnZlcnRpY2FsLWFsaWduLWNvbnRlbnQgPiAqXHJcbntcclxuICAgICBkaXNwbGF5OiBmbGV4IWltcG9ydGFudDtcclxuICAgICBhbGlnbi1jb250ZW50OiBjZW50ZXIhaW1wb3J0YW50O1xyXG4gICAgIGFsaWduLWl0ZW1zOiBjZW50ZXIhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uZnVsbC13aWR0aC1zZWxlY3Qge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxufVxyXG4uY3VzdG9tLWZvbnQtc2l6ZSB7XHJcbiAgICBmb250LXNpemU6IDAuOGVtO1xyXG59Il19 */\"","import { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { Platform } from '@ionic/angular';\r\nimport { DatabaseService, User, Drive, VehicleTypes, Mtrac } from '../../services/database.service';\r\nimport { Chart } from \"chart.js\";\r\nimport { PipesModule } from '../../pipes/pipes.module';\r\nimport * as dayjs from 'dayjs';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\n\r\n\r\n@Component({\r\n  selector: 'app-commander',\r\n  templateUrl: './commander.page.html',\r\n  styleUrls: ['./commander.page.scss'],\r\n})\r\n\r\nexport class CommanderPage implements OnInit {\r\n\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    public database: DatabaseService,\r\n    private platform: Platform,\r\n    private geolocation: Geolocation,\r\n    public toastController: ToastController, ) { }\r\n\r\n  drivestatus = 9 > 10;\r\n  mileagestatus = 9 > 10;\r\n  otherstatus = 9 > 10;\r\n  drivereditstatus = 9 > 10;\r\n  successMessage = '';\r\n  errorMessage = '';\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public editDriver(driver: string) : User[] {\r\n    var drivr = this.database.current.all_drivers_of_commander;\r\n    drivr = drivr.filter( (drvr) => drvr.email == driver);\r\n    this.drivereditstatus = !this.drivereditstatus;\r\n    return drivr;\r\n  }\r\n\r\n  public showEdit() {\r\n    return this.drivereditstatus = !this.drivereditstatus;\r\n  }\r\n\r\n  public getDrvr(driver: string) : User[] {\r\n    var drivr = this.database.current.all_drivers_of_commander;\r\n    return drivr.filter( (drvr) => drvr.email == driver);\r\n  }\r\n\r\n  public getDrivers() : User[] {\r\n    var drivers = this.database.current.all_drivers_of_commander;\r\n    var drvrs = (<HTMLInputElement>document.getElementById(\"driverlist\")).value;\r\n    if (drvrs != \"ALL\") {\r\n      return drivers.filter( (driver) => driver.email == drvrs);\r\n    }\r\n    return drivers\r\n  }\r\n\r\n  public getDriver() : User {\r\n    var driver = this.database.current.all_drivers_of_commander;\r\n    var drvrs = (<HTMLInputElement>document.getElementById(\"driverlist\")).value;\r\n    return driver.filter( (driver) => driver.email == drvrs)[0];\r\n  }\r\n\r\n  async updateCertfication(driver: any) {\r\n    //console.log(driver);\r\n    var mssc = (<HTMLInputElement>document.getElementById(\"mss\")).value.toLowerCase() === 'true';\r\n    var flbc = (<HTMLInputElement>document.getElementById(\"flb\")).value.toLowerCase() === 'true';\r\n    var belrexc = (<HTMLInputElement>document.getElementById(\"belrex\")).value.toLowerCase() === 'true';\r\n    var m3gc = (<HTMLInputElement>document.getElementById(\"m3g\")).value.toLowerCase() === 'true';\r\n    driver.mss_certified = mssc;\r\n    driver.flb_certified = flbc;\r\n    driver.belrex_certified = belrexc;\r\n    driver.m3g_certified = m3gc;\r\n    try {\r\n      await this.database.write('user',driver.email,driver);\r\n      this.drivereditstatus = !this.drivereditstatus;\r\n      this.successMessage = 'the driver account has been updated.';\r\n      this.showToast(this.successMessage);\r\n    } catch(err) {\r\n        console.log(err);\r\n        this.errorMessage = err.message;\r\n        this.successMessage = '';\r\n    }\r\n  }\r\n\r\n  public checkAll() {\r\n    var drivers = (<HTMLInputElement>document.getElementById(\"driverlist\")).value;\r\n     if (this.database.current.user.is_admin == true)\r\n    { return drivers == \"ALL\"; }\r\n    return true;\r\n  }\r\n\r\n\r\n  showToast(msg) {\r\n    this.toastController.create({\r\n      message: msg,\r\n      duration: 2000,\r\n      position: 'middle'\r\n    }).then((obj) => {\r\n      obj.present();\r\n    });\r\n  }\r\n\r\n  public checkEditDriverStatus() {\r\n    if (this.database.current.user.is_admin == true)\r\n    {\r\n      return this.drivereditstatus;\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  public checkOperatorCurrencyValid(vehicletype:string, date:any){\r\n    const today = dayjs();\r\n    var period =  8;\r\n    return today.diff(date,\"day\") < period ;\r\n  }\r\n\r\n  public checkOperatorCurrencyInvalid(vehicletype:string, date:any){\r\n    const today = dayjs();\r\n    var period = 8;\r\n    return today.diff(date,\"day\") > period ;\r\n  }\r\n\r\n  public showdrives(){\r\n    this.drivestatus = !this.drivestatus;\r\n  }\r\n\r\n  public checkDriveStatus(){\r\n    return this.drivestatus;\r\n  }\r\n\r\n  public showmileage(){\r\n    this.mileagestatus = !this.mileagestatus;\r\n  }\r\n\r\n  public checkMileageStatus(){\r\n    return this.mileagestatus;\r\n  }\r\n\r\n  public showother(){\r\n    this.otherstatus = !this.otherstatus;\r\n  }\r\n\r\n  public checkOtherStatus(){\r\n    return this.otherstatus;\r\n  }\r\n\r\n  public getMileagebyVehicleType(data: any,vehicle: any) {\r\n    for (var type of VehicleTypes) {\r\n      if (type == vehicle) {\r\n        if (data[type] != null) {\r\n          return data[type] + \" km\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public getDrivesbyVehicleType(vehicle: any, drvr: any) {\r\n    for (var type of VehicleTypes) {\r\n      var drv = 0\r\n      if (type == vehicle){\r\n        var dhis = this.database.current.drive_history.filter( (drive) => { return drive.driver === drvr.email });\r\n        for (let trip of dhis) {\r\n          if (trip.vehicle_type == vehicle) {\r\n            drv += 1;\r\n          }\r\n        }\r\n      return drv;\r\n      }\r\n    }\r\n  }\r\n\r\n  public getPendingDrives() : Drive[] {\r\n    return this.database.current.drive_history.filter( (drive) => { if (this.database.current.user.email === drive.commander) {\r\n      return drive.status === 'pending';}\r\n    });\r\n  }\r\n\r\n  public getPendingMTRAC() : Mtrac[] {\r\n    return this.database.current.mtrac_history.filter( (form) => { if (this.database.current.user.email === form.commander) {\r\n      return form.status === 'pending';}\r\n    });\r\n  }\r\n\r\n  public getApprovedDrives() : Drive[] {\r\n    return this.database.current.drive_history.filter( (drive) => {\r\n      return drive.status === 'verified';\r\n    });\r\n  }\r\n\r\n  public checkTimelefttoJIT(date: any) {\r\n    const today = dayjs();\r\n    var period = 8;\r\n    var left = period - today.diff(date,\"day\");\r\n    if (left < 0){\r\n      return false };\r\n    return true;\r\n  }\r\n\r\n  public getTimelefttoJIT(date:any ) {\r\n    const today = dayjs();\r\n    var period = 7*24*60*60;\r\n    var left = period - today.diff(date,\"s\");\r\n    return left;\r\n  }\r\n\r\n  public click(drive: Drive): void {\r\n    this.database.current.drive_to_edit = drive;\r\n    console.log(`> Navigating to AddDrivePage for drive id=${drive.id}`);\r\n    this.navCtrl.navigateForward(['/add-drive']);\r\n  }\r\n\r\n public clickmtrac(form: Mtrac): void {\r\n    this.database.current.mtrac_to_edit = form;\r\n    console.log(`> Navigating to mtracPage for mtrac id=${form.id}`);\r\n    this.navCtrl.navigateForward(['/mtrac']);\r\n  }\r\n\r\n/*//  public click1(driver: User): void {\r\n    for (let user of this.database.current.all_drivers_of_commander) {\r\n      driver = user\r\n      console.log(`> Navigating to History for email=${driver.email}`)\r\n      this.navCtrl.navigateForward(['/history'])\r\n    };\r\n  }*/\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"pages-commander-commander-module-es5.js"}