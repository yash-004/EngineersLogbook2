{"version":3,"sources":["src/app/add-fuel/add-fuel.page.html","src/app/add-fuel/add-fuel.module.ts","src/app/add-fuel/add-fuel.page.scss","src/app/add-fuel/add-fuel.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header translucent>\\n  <ion-toolbar>\\n    <ion-title>Fuel Details</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n  <form class=\\\"form\\\" [formGroup]=\\\"addFuelForm\\\" (submit)=\\\"addFuel(addFuelForm.value)\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Date</ion-label>\\n            <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" formControlName=\\\"date\\\"></ion-datetime>\\n          </ion-item>\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validationMessages.date\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"addFuelForm.get('date').hasError(validation.type) && (addFuelForm.get('date').dirty || addFuelForm.get('date').touched)\\\">\\n                {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Vehicle Number</ion-label>\\n            <ion-input onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"vehicleNumber\\\"></ion-input>\\n          </ion-item>\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validationMessages.vehicleNumber\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"addFuelForm.get('vehicleNumber').hasError(validation.type) && (addFuelForm.get('vehicleNumber').dirty || addFuelForm.get('vehicleNumber').touched)\\\">\\n                {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n        </ion-col>\\n        <ion-col>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Vehicle Type</ion-label>\\n            <ion-select formControlName=\\\"vehicleType\\\" interface=\\\"popover\\\">\\n              <ion-select-option text-wrap *ngFor=\\\"let vty of getapprovedvtypes()\\\" value={{vty}}>{{vty}}</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validationMessages.vehicleType\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"addFuelForm.get('vehicleType').hasError(validation.type) && (addFuelForm.get('vehicleType').dirty || addFuelForm.get('vehicleType').touched)\\\">\\n                {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <ion-card>\\n      <ion-card-content>\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Location</ion-label>\\n          <ion-input type=\\\"text\\\" onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"location\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.location\\\">\\n            <div class=\\\"error-message\\\"\\n              *ngIf=\\\"addFuelForm.get('location').hasError(validation.type) && (addFuelForm.get('location').dirty || addFuelForm.get('location').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Time</ion-label>\\n          <ion-datetime formControlName=\\\"time\\\" displayFormat=\\\"HH:mm\\\"></ion-datetime>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.time\\\">\\n            <div class=\\\"error-message\\\"\\n              *ngIf=\\\"addFuelForm.get('time').hasError(validation.type) && (addFuelForm.get('time').dirty || addFuelForm.get('time').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">FuelTopUp</ion-label>\\n          <ion-input type=\\\"number\\\" inputmode=\\\"numeric\\\" formControlName=\\\"FuelTopUp\\\"></ion-input>\\n        </ion-item>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <div class=\\\"btn-wrapper\\\">\\n      <div *ngIf = showSubmit()>\\n        <ion-button class=\\\"submit-btn\\\" type=\\\"submit\\\" [disabled]=\\\"!addFuelForm.valid\\\" style=\\\"padding-right:10px\\\">Submit\\n        </ion-button>\\n        <ion-button (click)='onCancel()'>Cancel</ion-button>\\n      </div>\\n      <div *ngIf = !showSubmit()>\\n            <ion-button expand=\\\"block\\\" (click)='onCancel()'>OK</ion-button>\\n      </div>\\n    </div>\\n  </form>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddFuelPage } from './add-fuel.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddFuelPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AddFuelPage]\n})\nexport class AddFuelPageModule {}\n","export default \"ion-input {\\n  text-transform: uppercase;\\n  color: primary !important;\\n}\\n\\nion-card-title {\\n  --color:--ion-color-primary-contrast-rgb;\\n}\\n\\n.btn-wrapper {\\n  text-align: center;\\n}\\n\\n.input[type=number] {\\n  -moz-appearance: textfield;\\n}\\n\\n.input[type=number]::-webkit-inner-spin-button {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb2phdmUvRGVza3RvcC9FbmdpbmVlcnNMb2dib29rMi9zcmMvYXBwL2FkZC1mdWVsL2FkZC1mdWVsLnBhZ2Uuc2NzcyIsInNyYy9hcHAvYWRkLWZ1ZWwvYWRkLWZ1ZWwucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBO0VBQ0UseUJBQUE7RUFDQSx5QkFBQTtBQ0hGOztBRE1BO0VBQ0Usd0NBQUE7QUNIRjs7QURNQTtFQUNFLGtCQUFBO0FDSEY7O0FET0E7RUFFRSwwQkFBQTtBQ0xGOztBRElFO0VBQThCLGFBQUE7QUNEaEMiLCJmaWxlIjoic3JjL2FwcC9hZGQtZnVlbC9hZGQtZnVlbC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqIHtcbi8vICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7ICAvLyBkaXNhYmxlZCBpdGVtcyB3aWxsIG5vdCBiZSBncmV5IG91dC5cbn1cblxuaW9uLWlucHV0e1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogcHJpbWFyeSFpbXBvcnRhbnQ7XG59XG5cbmlvbi1jYXJkLXRpdGxle1xuICAtLWNvbG9yOi0taW9uLWNvbG9yLXByaW1hcnktY29udHJhc3QtcmdiO1xufVxuXG4uYnRuLXdyYXBwZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi8vIGRvIG5vdCBzaG93IHNwaW5uZXIgZm9yIG51bWJlciBpbnB1dHNcbi5pbnB1dFt0eXBlPW51bWJlcl0geyAgXG4gICY6Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b257IGRpc3BsYXk6IG5vbmU7IH1cbiAgLW1vei1hcHBlYXJhbmNlOnRleHRmaWVsZDtcbn0iLCJpb24taW5wdXQge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogcHJpbWFyeSAhaW1wb3J0YW50O1xufVxuXG5pb24tY2FyZC10aXRsZSB7XG4gIC0tY29sb3I6LS1pb24tY29sb3ItcHJpbWFyeS1jb250cmFzdC1yZ2I7XG59XG5cbi5idG4td3JhcHBlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmlucHV0W3R5cGU9bnVtYmVyXSB7XG4gIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xufVxuLmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59Il19 */\"","import { Component, OnInit, wtfStartTimeRange } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { DatabaseService, Fuel, VehicleTypes } from '../services/database.service';\nimport { ToastController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport * as dayjs from 'dayjs'; // Datetime utility, See http://zetcode.com/javascript/dayjs/\n\n@Component({\n  selector: 'app-add-fuel',\n  templateUrl: './add-fuel.page.html',\n  styleUrls: ['./add-fuel.page.scss'],\n})\n\nexport class AddFuelPage implements OnInit {\n\n  addFuelForm: FormGroup;\n  errorMessage = '';\n  successMessage = '';\n  toast: any;\n  today = new Date().toISOString();\n  fuel: Fuel;\n  updateStatus;\n\n\n  validationMessages = {\n    date: [\n      { type: 'required', message: 'Date is required.' }],\n    vehicleNumber: [\n      { type: 'required', message: 'Vehicle Number is required.' },\n      { type: 'minlength', message: 'Vehicle number must be at least 5 characters long.' }\n    ],\n    vehicleType: [\n      { type: 'required', message: 'Select a type of vehicle' },\n    ],\n    location: [\n      { type: 'required', message: 'Enter starting location' },\n    ],\n    time: [\n      { type: 'required', message: 'Enter current time' },\n    ],\n    FuelTopUp: [\n      { type: 'required', message: 'Enter FuelTopUp value' },\n    ],\n  };\n\n  constructor(\n    private navCtrl: NavController,\n    private formBuilder: FormBuilder,\n    public toastController: ToastController,\n    public database: DatabaseService,\n    public route: ActivatedRoute\n  ) { }\n\n  public getapprovedvtypes(): string[] {\n        var vtypes =  VehicleTypes\n        if (this.database.current.user.mss_certified != true) {\n            vtypes = vtypes.filter( vtype => vtype != 'MSS');\n        }\n        if (this.database.current.user.flb_certified != true) {\n            vtypes = vtypes.filter( vtype => vtype != 'FLB');\n        }\n        if (this.database.current.user.belrex_certified != true) {\n            vtypes = vtypes.filter( vtype => vtype != 'BELREX');\n        return vtypes\n        }\n  }\n\n  ngOnInit() {\n    // Create form group of controls\n    this.addFuelForm = this.formBuilder.group({\n      date: new FormControl(this.today, Validators.compose([Validators.required])),\n      vehicleNumber: new FormControl('', Validators.compose([Validators.minLength(5), Validators.required])),\n      vehicleType: new FormControl('', Validators.compose([Validators.required])),\n      location: new FormControl('', Validators.compose([Validators.required])),\n      time: new FormControl(this.today, Validators.compose([Validators.required])),\n      FuelTopUp: new FormControl('', Validators.compose([Validators.required])),\n    });\n  }\n\n  onCancel() {\n    this.navCtrl.pop();\n  }\n\n  showSubmit() {\n    return true;\n  }\n\n  showToast(msg) {\n    this.toastController.create({\n      message: msg,\n      duration: 2000,\n      //  showCloseButton: true,\n      //  closeButtonText: 'OK',\n      position: 'bottom'\n    }).then((obj) => {\n      obj.present();\n    });\n  }\n\n  async addFuel(value)\n  {\n    if (this.fuel == null)\n    {\n      try {\n        const time2 = dayjs(new Date(this.addFuelForm.value.time)).format('HH:mm');\n        var new_fuel: Fuel =\n        {\n          created: this.database.getTimeStamp(),\n          driver: this.database.current.user.email,\n          // Stage-1 details\n          vehicle: this.addFuelForm.value.vehicleNumber,\n          vehicle_type: this.addFuelForm.value.vehicleType,\n          date: (this.addFuelForm.value.date).split('T')[0],\n          location: this.addFuelForm.value.location,\n          time: time2,\n          fleet: this.database.current.user.fleet,\n          company: this.database.current.user.company,\n          FuelTopUp: this.addFuelForm.value.FuelTopUp,\n        };\n        let subAutoID = this.database.collection('fuel').doc().id;\n        new_fuel.id = subAutoID\n        console.log('new_fuel=${JSON.stringify(new_fuel)}');\n        await this.database.write('fuel', new_fuel.id, new_fuel);\n        this.errorMessage = '';\n        this.successMessage = 'Your Fuel has been added.';\n\n        this.showToast(this.successMessage);\n        this.navCtrl.pop();\n      } catch (err) {\n\n        this.errorMessage = `Add Fuel error: ${err}`;\n        this.successMessage = '';\n\n        this.showToast(this.errorMessage);\n        this.navCtrl.pop();\n      }\n    }\n  }\n}\n"],"sourceRoot":"webpack:///","file":"add-fuel-add-fuel-module-es5.js"}