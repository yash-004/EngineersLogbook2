{"version":3,"sources":["src/app/pages/CmdHistory/CmdHistory.page.html","src/app/pages/CmdHistory/CmdHistory.module.ts","src/app/pages/CmdHistory/CmdHistory.page.scss","src/app/pages/CmdHistory/CmdHistory.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header >\\n  <ion-toolbar>\\n    <ion-title>History</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button left routerLink=\\\"/\\\" routerDirection=\\\"root\\\" fill=\\\"clear\\\" slot=\\\"primary\\\">\\n        Logout<ion-icon name=\\\"log-out\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-card>\\n  <ion-list>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Driver</ion-label>\\n      <ion-select id=\\\"drvr\\\" interface=\\\"popover\\\" value=\\\"ALL\\\" class=\\\"full-width-select\\\">\\n        <ion-select-option value=\\\"ALL\\\">ALL</ion-select-option>\\n        <ion-select-option text-wrap *ngFor=\\\"let driver of database.current.all_drivers_of_commander\\\" value={{driver.email}} class=\\\"custom-font-size\\\">{{driver.email}}</ion-select-option>\\n      </ion-select>\\n      <ion-label position=\\\"stacked\\\">Vehicle Type</ion-label>\\n        <ion-select id=\\\"vehitype\\\" interface=\\\"popover\\\" value=\\\"ALL\\\" class=\\\"full-width-select\\\">\\n          <ion-select-option value=\\\"ALL\\\">ALL</ion-select-option>\\n          <ion-select-option text-wrap *ngFor =\\\"let vehicle of database.current.stats.most_recent_drive_by_vehicle_type | keyvalue\\\" value={{vehicle.key}} class=\\\"custom-font-size\\\">{{vehicle.key}}</ion-select-option>\\n        </ion-select>\\n    </ion-item>\\n  </ion-list>\\n</ion-card>\\n\\n<ion-content>\\n\\n  <!-- Month/date Selector (Sticky header) -->\\n\\n  <ion-item-divider sticky>\\n    <ion-grid>\\n      <ion-row class=\\\"vertical-align-content\\\">\\n        <ion-col no-padding text-center size=3>\\n            <ion-button size=\\\"small\\\" (click)=\\\"incrementFilterPeriod(-1)\\\"><ion-icon name=\\\"return-left\\\"></ion-icon></ion-button>\\n        </ion-col>\\n\\n        <ion-col no-padding text-center>\\n          <h4>{{getFilterPeriodString()}}</h4>\\n        </ion-col>\\n\\n        <ion-col no-padding text-center size=3>\\n            <ion-button size=\\\"small\\\" (click)=\\\"incrementFilterPeriod(+1)\\\"><ion-icon name=\\\"return-right\\\"></ion-icon></ion-button>\\n        </ion-col>\\n\\n      </ion-row>\\n    </ion-grid>\\n  </ion-item-divider>\\n\\n  <div style=\\\"display: block\\\">\\n    <canvas baseChart\\n                [data]=\\\"chartData\\\"\\n                [labels]=\\\"chartLabels\\\"\\n                [chartType]=\\\"chartType\\\"\\n                [colors]=\\\"chartColors\\\"\\n                (chartHover)=\\\"chartHovered($event)\\\"\\n                (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n  </div>\\n\\n  <ion-card *ngFor=\\\"let trip of getDrives()\\\">\\n    <br>\\n    <app-drive-view expandHeight='150px' expandWidth='100px' [drive]=\\\"trip\\\"></app-drive-view>\\n  </ion-card>\\n\\n<!--\\n    <ion-row >\\n      <ion-col align=\\\"center\\\">\\n      <ion-card >\\n    <ion-card-header>\\n      <ion-card-subtitle>\\n          <ion-item class=\\\"card\\\">\\n          <ion-label position=\\\"floating\\\"></ion-label>\\n          <ion-input disabled type=\\\"date\\\" name=\\\"text_drivedate\\\" color=\\\"success\\\">  </ion-input>\\n            </ion-item>\\n        </ion-card-subtitle>\\n      <ion-card-title>\\n        <ion-item class=\\\"card\\\" >\\n          <ion-label color=\\\"success\\\" position=\\\"floating\\\">VehicleType</ion-label>\\n          <ion-input color=\\\"success\\\" disabled type=\\\"number\\\" name=\\\"text_drivevehicletype\\\">  </ion-input>\\n            </ion-item>\\n    </ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-card-content>\\n\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col >\\n            <ion-item class=\\\"card\\\">\\n          <ion-label color=\\\"success\\\" position=\\\"floating\\\">Total Time Driven</ion-label>\\n          <ion-input disabled type=\\\"number\\\" name=\\\"text_driveduration\\\" color=\\\"success\\\">  </ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col>\\n            <ion-item class=\\\"card\\\">\\n          <ion-label color=\\\"success\\\" position=\\\"floating\\\">Total Mileage</ion-label>\\n          <ion-input disabled type=\\\"number\\\" name=\\\"text_drivemileage\\\" color=\\\"success\\\">  </ion-input>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n    </ion-card-content>\\n  </ion-card>\\n\\n      </ion-col>\\n    </ion-row>\\n-->\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CmdHistoryPage } from './CmdHistory.page';\nimport { DriveViewModule } from '../../drive-view/drive-view.module';\nimport { ChartsModule } from 'ng2-charts';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CmdHistoryPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    DriveViewModule,\n    ChartsModule\n  ],\n  declarations: [CmdHistoryPage\n  ]\n})\nexport class CmdHistoryPageModule {}\n","export default \".vertical-align-content > * {\\n  display: -webkit-box !important;\\n  display: flex !important;\\n  align-content: center !important;\\n  -webkit-box-align: center !important;\\n          align-items: center !important;\\n  -webkit-box-pack: center !important;\\n          justify-content: center !important;\\n}\\n\\n.full-width-select {\\n  width: 100%;\\n  max-width: 100%;\\n}\\n\\n.custom-font-size {\\n  font-size: 0.8em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95YXNoZGl4aXQvRGVza3RvcC9FbmdpbmVlcnNMb2dib29rMi9zcmMvYXBwL3BhZ2VzL0NtZEhpc3RvcnkvQ21kSGlzdG9yeS5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL0NtZEhpc3RvcnkvQ21kSGlzdG9yeS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSywrQkFBQTtFQUFBLHdCQUFBO0VBQ0EsZ0NBQUE7RUFDQSxvQ0FBQTtVQUFBLDhCQUFBO0VBQ0EsbUNBQUE7VUFBQSxrQ0FBQTtBQ0FMOztBREVBO0VBQ0UsV0FBQTtFQUNBLGVBQUE7QUNDRjs7QURDQTtFQUNJLGdCQUFBO0FDRUoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9DbWRIaXN0b3J5L0NtZEhpc3RvcnkucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnZlcnRpY2FsLWFsaWduLWNvbnRlbnQgPiAqXG57XG4gICAgIGRpc3BsYXk6IGZsZXghaW1wb3J0YW50O1xuICAgICBhbGlnbi1jb250ZW50OiBjZW50ZXIhaW1wb3J0YW50O1xuICAgICBhbGlnbi1pdGVtczogY2VudGVyIWltcG9ydGFudDsgIC8vIHZlcnRpY2FsIGFsaWdubWVudFxuICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50OyAgLy8gaG9yaXpvbnRhbCBhbGlnbm1lbnRcbn1cbi5mdWxsLXdpZHRoLXNlbGVjdCB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG4uY3VzdG9tLWZvbnQtc2l6ZSB7XG4gICAgZm9udC1zaXplOiAwLjhlbTtcbn0iLCIudmVydGljYWwtYWxpZ24tY29udGVudCA+ICoge1xuICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50O1xuICBhbGlnbi1pdGVtczogY2VudGVyICFpbXBvcnRhbnQ7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XG59XG5cbi5mdWxsLXdpZHRoLXNlbGVjdCB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbi5jdXN0b20tZm9udC1zaXplIHtcbiAgZm9udC1zaXplOiAwLjhlbTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService, Drive, VehicleTypes } from '../../services/database.service';\nimport * as dayjs from 'dayjs'; // DateTime utility, See http://zetcode.com/javascript/dayjs/\n\n@Component({\n  selector: 'app-cmd_history',\n  templateUrl: './CmdHistory.page.html',\n  styleUrls: ['./CmdHistory.page.scss'],\n})\nexport class CmdHistoryPage implements OnInit {\n\n  select_month: number = 0;\n  select_year: number = 0;\n\n  constructor(private database: DatabaseService) { }\n\n  ngOnInit() {\n    this.buildChart();\n  }\n\n  public getDrives() : Drive[] {\n\n    var drives = this.database.current.drive_history;\n    var vtype = (<HTMLInputElement>document.getElementById(\"vehitype\")).value;\n    var drvr = (<HTMLInputElement>document.getElementById(\"drvr\")).value;\n    // 4 cases\n    // if vtype = X and drvr = X\n    // if vtype = ALL and drvr = X\n    // if vtype = X and drvr = ALL\n    // if vtype = ALL and drvr = ALL\n    if (!this.select_month && !this.select_year) {\n      // if vtype = X and drvr = X\n      if (vtype != \"ALL\" && drvr != \"ALL\") {\n        var r = drives.filter( (drive) => drive.vehicle_type == vtype);\n        return r.filter( (drive) => drive.driver == drvr);\n      }\n      // if vtype = ALL and drvr = X\n      else if (vtype == \"ALL\" && drvr != \"ALL\") {\n        return drives.filter( (drive) => drive.driver == drvr);\n      }\n      // if vtype = X and drvr = ALL\n      else if (vtype != \"ALL\" && drvr == \"ALL\") {\n        return drives.filter( (drive) => drive.vehicle_type == vtype);\n      }\n      // if vtype = ALL and drvr = ALL\n      return drives\n    }\n    else {\n      // if vtype = X and drvr = X\n      if (vtype != \"ALL\" && drvr != \"ALL\") {\n        var r =drives.filter( (drive) => drive.vehicle_type == vtype);\n        var r =r.filter( (drive) => drive.driver == drvr);\n        return r.filter( (drive) => {\n          var elem = drive.date.split(\"-\");\n          return (!this.select_year||parseInt(elem[0])==this.select_year)\n            && (!this.select_month||parseInt(elem[1])==this.select_month);\n        });\n      }\n      // if vtype = ALL and drvr = X\n      else if (vtype == \"ALL\" && drvr != \"ALL\") {\n        var r =drives.filter( (drive) => drive.driver == drvr);\n        return r.filter( (drive) => {\n          var elem = drive.date.split(\"-\");\n          return (!this.select_year||parseInt(elem[0])==this.select_year)\n            && (!this.select_month||parseInt(elem[1])==this.select_month);\n        });\n      }\n      // if vtype = X and drvr = ALL\n      else if (vtype != \"ALL\" && drvr == \"ALL\") {\n        var r =drives.filter( (drive) => drive.vehicle_type == vtype);\n        return r.filter( (drive) => {\n          var elem = drive.date.split(\"-\");\n          return (!this.select_year||parseInt(elem[0])==this.select_year)\n            && (!this.select_month||parseInt(elem[1])==this.select_month);\n        });\n      }\n      // if vtype = ALL and drvr = ALL\n      return drives.filter( (drive) => {\n        var elem = drive.date.split(\"-\");\n        return (!this.select_year||parseInt(elem[0])==this.select_year)\n          && (!this.select_month||parseInt(elem[1])==this.select_month);\n      });\n    }\n  }\n\n  /*public getDrives() : Drive[] {\n\n    var drives = this.database.current.drive_history;\n\n    if (!this.select_month && !this.select_year) return drives; // No filter\n\n    return drives.filter( (drive) => {\n      var elem = drive.date.split(\"-\");\n      return (!this.select_year||parseInt(elem[0])==this.select_year) \n        && (!this.select_month||parseInt(elem[1])==this.select_month);\n    });\n  }*/\n  \n  public getFilterPeriodString(): string {\n    if (this.select_month==0 || this.select_year==0) {\n      return \"All\";\n    } else {\n      const dt = dayjs(new Date(this.select_year, this.select_month-1, 1));  // months in dayjs, Jan=0\n      return dt.format(\"MMMM, YYYY\");\n    }\n  }\n  \n  public incrementFilterPeriod(delta: number) {\n\n    const today = dayjs();\n\n    var changed: boolean = true;\n    \n    if (delta==-1) {\n      if (!this.select_month || !this.select_year) {\n        // Current month/year\n        this.select_month = today.month()+1;\n        this.select_year = today.year();\n      } else {\n        this.select_month--;\n        if (this.select_month==0) { \n          // Roll back to previous year\n          this.select_year--; \n          this.select_month = 12;\n        }\n      }\n    } else {\n      if (!this.select_month || !this.select_year) {\n        // Can't increment\n        changed = false;\n      } else {\n        // When incrementing beyond current month/year, select \"all\"\n        if (this.select_year==today.year() && (this.select_month-1)==today.month()) {\n          this.select_year = this.select_month = 0;\n        } else {\n          this.select_month++;\n          if (this.select_month==13) { \n            // Roll over to next year\n            this.select_year++; \n            this.select_month = 1;\n          }\n        }\n      }\n    }\n    if (changed) this.buildChart();\n  }\n\n  // Build Doughnut chart of mileage per VehicleType\n  public chartLabels:string[] = VehicleTypes;\n  public chartData:number[] = [ 0,0,0,0 ];\n  public chartType:string = 'doughnut';\n  public chartColors:any[] = [{backgroundColor: [\n            \"rgba(255,99,132,1)\",\n            \"rgba(54, 162, 235, 1)\",\n            \"rgba(255, 206, 86, 1)\",\n            \"rgba(75, 192, 192, 1)\",\n            \"rgba(153, 102, 255, 1)\",]}];\n\n  private buildChart(): void {\n\n    var count:number[] = Array(VehicleTypes.length).fill(0)\n    \n    this.getDrives().map( (trip) => {\n      var valid_type = false;\n      for (let i=0; i<VehicleTypes.length; i++) {\n        if (trip.vehicle_type === VehicleTypes[i]) {\n          count[i] += this.database.distance(trip);\n          valid_type = true;\n        }\n      }\n      if (!valid_type) { console.log(`### Error: Invalid vehicle type: ${trip.vehicle_type} in ${trip.id}`); }\n    });\n    \n    //console.log(`>buildChart() = ${count}`);\n    this.chartData = count;\n  }\n  \n  public chartClicked(e:any):void {\n    //console.log(e);\n  }\n  public chartHovered(e:any):void {\n    //console.log(e);\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"pages-CmdHistory-CmdHistory-module-es5.js"}