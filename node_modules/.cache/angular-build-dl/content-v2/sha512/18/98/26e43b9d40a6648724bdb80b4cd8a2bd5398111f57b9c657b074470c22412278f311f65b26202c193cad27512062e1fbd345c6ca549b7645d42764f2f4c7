{"version":3,"sources":["src/app/pages/commander/commander.page.html","src/app/pages/commander/commander.module.ts","src/app/pages/commander/commander.page.scss","src/app/pages/commander/commander.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Commander</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button left routerLink=\\\"/\\\" routerDirection=\\\"root\\\" fill=\\\"clear\\\" slot=\\\"primary\\\">\\n        Logout<ion-icon name=\\\"log-out\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <!-- Notifications -->\\n  <ion-item class=\\\"headers\\\" text-center><ion-label style=\\\"margin-bottom: 0;\\\"><h1> Notifications </h1></ion-label></ion-item>\\n\\n  <ion-card *ngFor=\\\"let drive of getPendingDrives()\\\" padding>\\n\\n    <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\">\\n      <!--ion-fab-button size=\\\"small\\\" (click)=\\\"click(drive)\\\">View</ion-fab-button-->\\n      <ion-fab-button size=\\\"small\\\" (click)=\\\"click(drive)\\\"><ion-icon name='share-alt'></ion-icon></ion-fab-button>\\n      <!--ion-button fill=\\\"outline\\\" size=\\\"small\\\" (click)=\\\"click(drive)\\\">View</ion-button-->\\n    </ion-fab>\\n\\n    <ion-card-subtitle color='danger'><strong>Pending review</strong></ion-card-subtitle>\\n    <ion-card-title>{{drive.date}}</ion-card-title>\\n\\n    <ion-card-content no-padding>\\n      Your drive on <b>{{drive.date}}</b> with <b>{{drive.driver}}</b> from\\n      <b>{{drive.start_location}}</b> (<b>{{drive.start_time}}</b>) to \\n      <b>{{drive.end_location}}</b> (<b>{{drive.end_time}}</b>)\\n      is pending review.\\n    </ion-card-content>\\n\\n  </ion-card>\\n  <ion-card *ngFor=\\\"let form of getPendingMTRAC()\\\" padding>\\n    <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\">\\n      <!--ion-fab-button size=\\\"small\\\" (click)=\\\"click(drive)\\\">View</ion-fab-button-->\\n      <ion-fab-button size=\\\"small\\\" (click)=\\\"clickmtrac(form)\\\"><ion-icon name='share-alt'></ion-icon></ion-fab-button>\\n      <!--ion-button fill=\\\"outline\\\" size=\\\"small\\\" (click)=\\\"click(drive)\\\">View</ion-button-->\\n    </ion-fab>\\n    <ion-card-title>Complete MT-RAC</ion-card-title>\\n  </ion-card>\\n\\n\\n\\n  <ion-item class=\\\"headers\\\" text-center><ion-label style=\\\"margin-bottom: 0;\\\"><h1> Operators </h1></ion-label></ion-item>\\n\\n  <ion-card>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Driver</ion-label>\\n        <ion-select id=\\\"driverlist\\\" interface=\\\"popover\\\" class=\\\"full-width-select\\\" value=\\\"ALL\\\">\\n          <ion-select-option value=\\\"ALL\\\">ALL</ion-select-option>\\n          <ion-select-option text-wrap *ngFor=\\\"let driver of database.current.all_drivers_of_commander\\\" value={{driver.email}} class=\\\"custom-font-size\\\">{{driver.email}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n    </ion-list>\\n  </ion-card>\\n  <ion-card *ngFor=\\\"let driver of getDrivers()\\\">\\n    <ion-card-header>\\n      <ion-card-subtitle><ion-icon name=\\\"person\\\" text-center (click)=\\\"showother()\\\"></ion-icon> <strong> {{driver.name}} ({{driver.email}})</strong></ion-card-subtitle>\\n      <ion-card-subtitle (click)=\\\"showother()\\\">Last drive: {{driver.summary.most_recent_drive | date: \\\"dd/MM/yyyy hh:mm\\\"}}, {{driver.summary.most_recent_drive | daysAgo}} days ago</ion-card-subtitle>\\n      <ion-label position=\\\"stacked\\\" *ngIf=\\\"checkAll()==true\\\"><h2>Certifications</h2></ion-label>\\n      <ion-button *ngIf=\\\"checkAll()==false\\\" (click)=\\\"showEdit()\\\">Certifications <ion-icon name=\\\"settings\\\"></ion-icon></ion-button>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <ion-label color=\\\"success\\\"> OUV </ion-label>\\n          </ion-col>\\n          <ion-col offset-4>\\n            <ion-label color=\\\"success\\\"> 5TON </ion-label>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <ion-label *ngIf=\\\"driver.mss_certified == true\\\" color=\\\"success\\\" > MSS </ion-label>\\n          </ion-col>\\n          <ion-col offset-4 >\\n            <ion-label *ngIf=\\\"driver.flb_certified == true\\\" color=\\\"success\\\"> FLB </ion-label>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <ion-label *ngIf=\\\"driver.belrex_certified == true\\\" color=\\\"success\\\"> BELREX </ion-label>\\n          </ion-col>\\n          <ion-col offset-4>\\n            <ion-label>  </ion-label>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <ion-card *ngIf=\\\"checkEditDriverStatus()==true\\\">\\n        <ion-list>\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\">MSS</ion-label>\\n            <ion-select id=\\\"mss\\\" interface=\\\"popover\\\" value={{driver.mss_certified}}>\\n              <ion-select-option value=\\\"true\\\">Certified</ion-select-option>\\n              <ion-select-option value=\\\"false\\\">Not Certified</ion-select-option>\\n            </ion-select>\\n            <ion-label position=\\\"stacked\\\">FLB</ion-label>\\n            <ion-select id=\\\"flb\\\" interface=\\\"popover\\\" value={{driver.flb_certified}}>\\n              <ion-select-option value=\\\"true\\\">Certified</ion-select-option>\\n              <ion-select-option value=\\\"false\\\">Not Certified</ion-select-option>\\n            </ion-select>\\n            <ion-label position=\\\"stacked\\\">BELREX</ion-label>\\n            <ion-select id=\\\"belrex\\\" interface=\\\"popover\\\" value={{driver.belrex_certified}}>\\n              <ion-select-option value=\\\"true\\\">Certified</ion-select-option>\\n              <ion-select-option value=\\\"false\\\">Not Certified</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n        </ion-list>\\n        <ion-button (click)=\\\"updateCertfication(getDriver())\\\">save changes</ion-button>\\n      </ion-card>\\n    </ion-card-header>\\n\\n\\n\\n\\n    <ion-card-content>\\n      <ion-grid class=\\\"table\\\" no-padding>\\n\\n        <ion-row>\\n          <ion-col size=\\\"4\\\" class=\\\"bubble-text\\\" no-padding><ion-card no-padding (click)=\\\"showdrives()\\\">\\n            <div class=\\\"ion-text-center\\\" style=\\\"width: 100%;\\\">\\n              <ion-icon name=\\\"car\\\" size=\\\"large\\\" ></ion-icon><br>\\n              <div class=\\\"shift_up\\\">Drives</div>\\n              <div class=\\\"slide_num\\\">{{driver.summary.drive_count}}</div>\\n              <ion-label *ngIf=\\\"checkDriveStatus()\\\">\\n                <h6 *ngFor=\\\"let vehicle of driver.summary.most_recent_drive_by_vehicle_type | keyvalue\\\">\\n                  {{vehicle.key}} : {{getDrivesbyVehicleType(vehicle.key, driver)}}\\n                </h6>\\n              </ion-label>\\n            </div>\\n          </ion-card></ion-col>\\n\\n          <ion-col size=\\\"4\\\" class=\\\"bubble-text\\\" no-padding><ion-card no-padding (click)=\\\"showmileage()\\\">\\n            <div class=\\\"ion-text-center\\\" style=\\\"width: 100%;\\\">\\n              <ion-icon name=\\\"speedometer\\\" size=\\\"large\\\"></ion-icon><br>\\n              <div class=\\\"shift_up\\\">Mileage</div>\\n              <div class=\\\"slide_num\\\">{{driver.summary.mileage_km}} km</div>\\n              <ion-label *ngIf=\\\"checkMileageStatus()\\\">\\n                <h6 *ngFor=\\\"let vehicle of driver.summary.most_recent_drive_by_vehicle_type | keyvalue\\\">\\n                  {{vehicle.key}} : {{getMileagebyVehicleType(driver.summary.mileage_by_vehicle_type, vehicle.key)}}\\n                </h6>\\n              </ion-label>\\n            </div>\\n          </ion-card></ion-col>\\n\\n          <ion-col size=\\\"4\\\" class=\\\"bubble-text\\\" no-padding><ion-card no-padding>\\n            <div class=\\\"ion-text-center\\\" style=\\\"width: 100%;\\\" (click)=\\\"showother()\\\">\\n              <ion-icon name=\\\"clock\\\" size=\\\"large\\\"></ion-icon><br>\\n              <div class=\\\"shift_up\\\">Time Driven</div>\\n              <div class=\\\"slide_num\\\">{{driver.summary.duration_minutes / 60 | number : '1.0-1' }} hours</div>\\n            </div>\\n          </ion-card></ion-col>\\n\\n\\n          <ion-row text-center style=\\\"padding: 0 10px\\\" *ngIf=\\\"checkDriveStatus() || checkMileageStatus() || checkOtherStatus()\\\" (click)=\\\"showother()\\\">\\n            <ion-col>\\n              average drive distance: <br/> {{driver.summary.mileage_km / driver.summary.drive_count | number : '1.0-1'}} km\\n            </ion-col>\\n            <ion-col>\\n              average drive duration: <br/>{{driver.summary.duration_minutes / 60 / driver.summary.drive_count | number : '1.0-1'}} hours\\n            </ion-col>\\n          </ion-row>\\n        </ion-row>\\n        <ion-row text-center (click)=\\\"showother()\\\">\\n          <ion-col text-center><ion-card padding text-center>\\n            <ion-grid>\\n              <ion-row><ion-col><ion-card-title text-center>\\n                <strong>JIT Countdown</strong>\\n              </ion-card-title></ion-col></ion-row>\\n\\n              <ion-row><ion-col><ion-card-subtitle>\\n\\n                <ion-grid><ion-row><ion-col><ion-label *ngIf=\\\"checkTimelefttoJIT(driver.summary.most_recent_drive) == false\\\" color='danger' text-center>\\n                  <strong><h2>\\n                    DO JIT NOW!\\n                  </h2></strong>\\n                </ion-label></ion-col></ion-row></ion-grid>\\n\\n                <ion-label>\\n                  <ion-item *ngIf=\\\"checkTimelefttoJIT(driver.summary.most_recent_drive) == true\\\" text-center>\\n                    <ion-grid><ion-row><ion-col><countdown [config]=\\\"{leftTime: getTimelefttoJIT(driver.summary.most_recent_drive), format: 'dd'}\\\"></countdown>\\n                        <h6 style=\\\"padding-bottom: 5px\\\">days</h6></ion-col>\\n                      <ion-col><countdown [config]=\\\"{leftTime: getTimelefttoJIT(driver.summary.most_recent_drive), format: 'HH'}\\\"></countdown>\\n                        <h6 style=\\\"padding-bottom: 5px\\\">hrs</h6></ion-col>\\n                      <ion-col><countdown [config]=\\\"{leftTime: getTimelefttoJIT(driver.summary.most_recent_drive), format: 'mm'}\\\"></countdown>\\n                        <h6 style=\\\"padding-bottom: 5px\\\">mins</h6></ion-col>\\n                      <ion-col><countdown [config]=\\\"{leftTime: getTimelefttoJIT(driver.summary.most_recent_drive), format: 'ss'}\\\"></countdown>\\n                        <h6 style=\\\"padding-bottom: 5px\\\">sec</h6></ion-col></ion-row></ion-grid>\\n                  </ion-item>\\n                </ion-label>\\n           </ion-card-subtitle></ion-col></ion-row></ion-grid>\\n          </ion-card></ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <!--<ion-grid  class=\\\"ion-no-padding\\\">\\n        <ion-row text-center>\\n          <ion-col text-center><ion-icon name=\\\"car\\\"></ion-icon> <br> Total Drives: <br> {{driver.summary.drive_count}}</ion-col>\\n          <ion-col text-center><ion-icon name=\\\"speedometer\\\"></ion-icon> <br> Total Mileage:<br> {{driver.summary.mileage_km}} KM</ion-col>\\n          <ion-col text-center><ion-icon name=\\\"clock\\\"></ion-icon> <br> Time Driven: <br> {{driver.summary.duration_minutes / 60 | number : '1.0-1' }} hours</ion-col>\\n        </ion-row>\\n\\n      </ion-grid>-->\\n\\n      <ion-item *ngFor=\\\"let vehicle of driver.summary.most_recent_drive_by_vehicle_type | keyvalue\\\" (click)=\\\"showother()\\\">\\n\\n\\n          <ion-col *ngIf=\\\"checkOtherStatus()\\\" (click)=\\\"showother()\\\">\\n            <ion-label *ngIf=\\\"checkOtherStatus()\\\">\\n              <h3 class=\\\"underline\\\" *ngIf=\\\"checkOperatorCurrencyValid(vehicle.key,driver.summary.most_recent_drive_by_vehicle_type[vehicle.key])\\\">{{vehicle.key}}</h3>\\n            </ion-label >\\n            <ion-label  color='danger' *ngIf=\\\"checkOtherStatus()\\\">\\n               <h3 class=\\\"underline\\\" *ngIf=\\\"checkOperatorCurrencyInvalid(vehicle.key,driver.summary.most_recent_drive_by_vehicle_type[vehicle.key])\\\">{{vehicle.key}}</h3>\\n            </ion-label>\\n          \\n           Last Drive: {{driver.summary.most_recent_drive_by_vehicle_type[vehicle.key] | date: \\\"dd/MM/yyyy\\\"}}\\n           ({{driver.summary.most_recent_drive_by_vehicle_type[vehicle.key] | daysAgo}} days ago)</ion-col>\\n      </ion-item>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CommanderPage } from './commander.page';\nimport { DriveViewModule } from '../../drive-view/drive-view.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { CountdownModule } from 'ngx-countdown';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CommanderPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CountdownModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    DriveViewModule,\n    PipesModule,\n  ],\n  declarations: [CommanderPage]\n})\nexport class CommanderPageModule {}\n","export default \".div {\\n  text-align: center;\\n  border: 6px solid black;\\n}\\n\\n.vertical-align-content > * {\\n  display: -webkit-box !important;\\n  display: flex !important;\\n  align-content: center !important;\\n  -webkit-box-align: center !important;\\n          align-items: center !important;\\n}\\n\\n.full-width-select {\\n  width: 100%;\\n  max-width: 100%;\\n}\\n\\n.custom-font-size {\\n  font-size: 0.8em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95YXNoZGl4aXQvRG93bmxvYWRzL0VuZ2luZWVyc0xvZ2Jvb2syL3NyYy9hcHAvcGFnZXMvY29tbWFuZGVyL2NvbW1hbmRlci5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2NvbW1hbmRlci9jb21tYW5kZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7RUFDQSx1QkFBQTtBQ0NKOztBRENBO0VBRUssK0JBQUE7RUFBQSx3QkFBQTtFQUNBLGdDQUFBO0VBQ0Esb0NBQUE7VUFBQSw4QkFBQTtBQ0NMOztBREVBO0VBQ0UsV0FBQTtFQUNBLGVBQUE7QUNDRjs7QURDQTtFQUNJLGdCQUFBO0FDRUoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9jb21tYW5kZXIvY29tbWFuZGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kaXZ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlcjogNnB4IHNvbGlkIGJsYWNrO1xufVxuLnZlcnRpY2FsLWFsaWduLWNvbnRlbnQgPiAqXG57XG4gICAgIGRpc3BsYXk6IGZsZXghaW1wb3J0YW50O1xuICAgICBhbGlnbi1jb250ZW50OiBjZW50ZXIhaW1wb3J0YW50O1xuICAgICBhbGlnbi1pdGVtczogY2VudGVyIWltcG9ydGFudDtcbn1cblxuLmZ1bGwtd2lkdGgtc2VsZWN0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbi5jdXN0b20tZm9udC1zaXplIHtcbiAgICBmb250LXNpemU6IDAuOGVtO1xufSIsIi5kaXYge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJvcmRlcjogNnB4IHNvbGlkIGJsYWNrO1xufVxuXG4udmVydGljYWwtYWxpZ24tY29udGVudCA+ICoge1xuICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50O1xuICBhbGlnbi1pdGVtczogY2VudGVyICFpbXBvcnRhbnQ7XG59XG5cbi5mdWxsLXdpZHRoLXNlbGVjdCB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbi5jdXN0b20tZm9udC1zaXplIHtcbiAgZm9udC1zaXplOiAwLjhlbTtcbn0iXX0= */\"","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { Platform } from '@ionic/angular';\nimport { DatabaseService, User, Drive, VehicleTypes, Mtrac } from '../../services/database.service';\nimport { Chart } from \"chart.js\";\nimport { PipesModule } from '../../pipes/pipes.module';\nimport * as dayjs from 'dayjs';\nimport { ToastController } from '@ionic/angular';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\n\n\n@Component({\n  selector: 'app-commander',\n  templateUrl: './commander.page.html',\n  styleUrls: ['./commander.page.scss'],\n})\n\nexport class CommanderPage implements OnInit {\n\n  constructor(\n    private navCtrl: NavController,\n    public database: DatabaseService,\n    private platform: Platform,\n    private geolocation: Geolocation,\n    public toastController: ToastController, ) { }\n\n  drivestatus = 9 > 10;\n  mileagestatus = 9 > 10;\n  otherstatus = 9 > 10;\n  drivereditstatus = 9 > 10;\n  successMessage = '';\n  errorMessage = '';\n\n  ngOnInit() {\n  }\n\n  public editDriver(driver: string) : User[] {\n    var drivr = this.database.current.all_drivers_of_commander;\n    drivr = drivr.filter( (drvr) => drvr.email == driver);\n    this.drivereditstatus = !this.drivereditstatus;\n    return drivr;\n  }\n\n  public showEdit() {\n    return this.drivereditstatus = !this.drivereditstatus;\n  }\n\n  public getDrvr(driver: string) : User[] {\n    var drivr = this.database.current.all_drivers_of_commander;\n    return drivr.filter( (drvr) => drvr.email == driver);\n  }\n\n  public getDrivers() : User[] {\n    var drivers = this.database.current.all_drivers_of_commander;\n    var drvrs = (<HTMLInputElement>document.getElementById(\"driverlist\")).value;\n    if (drvrs != \"ALL\") {\n      return drivers.filter( (driver) => driver.email == drvrs);\n    }\n    return drivers\n  }\n\n  public getDriver() : User {\n    var driver = this.database.current.all_drivers_of_commander;\n    var drvrs = (<HTMLInputElement>document.getElementById(\"driverlist\")).value;\n    return driver.filter( (driver) => driver.email == drvrs)[0];\n  }\n\n  async updateCertfication(driver: any) {\n    //console.log(driver);\n    var mssc = (<HTMLInputElement>document.getElementById(\"mss\")).value.toLowerCase() === 'true';\n    var flbc = (<HTMLInputElement>document.getElementById(\"flb\")).value.toLowerCase() === 'true';\n    var belrexc = (<HTMLInputElement>document.getElementById(\"belrex\")).value.toLowerCase() === 'true';\n    driver.mss_certified = mssc;\n    driver.flb_certified = flbc;\n    driver.belrex_certified = belrexc;\n    try {\n      await this.database.write('user',driver.email,driver);\n      this.drivereditstatus = !this.drivereditstatus;\n      this.successMessage = 'the driver account has been updated.';\n      this.showToast(this.successMessage);\n    } catch(err) {\n        console.log(err);\n        this.errorMessage = err.message;\n        this.successMessage = '';\n    }\n  }\n\n  public checkAll() {\n    var drivers = (<HTMLInputElement>document.getElementById(\"driverlist\")).value;\n    return drivers == \"ALL\";\n  }\n\n\n  showToast(msg) {\n    this.toastController.create({\n      message: msg,\n      duration: 2000,\n      position: 'middle'\n    }).then((obj) => {\n      obj.present();\n    });\n  }\n\n  public checkEditDriverStatus() {\n    return this.drivereditstatus;\n  }\n  \n  public checkOperatorCurrencyValid(vehicletype:string, date:any){\n    const today = dayjs();\n    var period =  8;\n    return today.diff(date,\"day\") < period ;\n  }\n\n  public checkOperatorCurrencyInvalid(vehicletype:string, date:any){\n    const today = dayjs();\n    var period = 8;\n    return today.diff(date,\"day\") > period ;\n  }\n\n  public showdrives(){\n    this.drivestatus = !this.drivestatus;\n  }\n\n  public checkDriveStatus(){\n    return this.drivestatus;\n  }\n\n  public showmileage(){\n    this.mileagestatus = !this.mileagestatus;\n  }\n\n  public checkMileageStatus(){\n    return this.mileagestatus;\n  }\n\n  public showother(){\n    this.otherstatus = !this.otherstatus;\n  }\n\n  public checkOtherStatus(){\n    return this.otherstatus;\n  }\n\n  public getMileagebyVehicleType(data: any,vehicle: any) {\n    for (var type of VehicleTypes) {\n      if (type == vehicle) {\n        if (data[type] != null) {\n          return data[type] + \" km\";\n        }\n      }\n    }\n  }\n\n  public getDrivesbyVehicleType(vehicle: any, drvr: any) {\n    for (var type of VehicleTypes) {\n      var drv = 0\n      if (type == vehicle){\n        var dhis = this.database.current.drive_history.filter( (drive) => { return drive.driver === drvr.email });\n        for (let trip of dhis) {\n          if (trip.vehicle_type == vehicle) {\n            drv += 1;\n          }\n        }\n      return drv;\n      }\n    }\n  }\n\n  public getPendingDrives() : Drive[] {\n    return this.database.current.drive_history.filter( (drive) => { if (this.database.current.user.email === drive.commander) {\n      return drive.status === 'pending';}\n    });\n  }\n\n  public getPendingMTRAC() : Mtrac[] {\n    return this.database.current.mtrac_history.filter( (form) => { if (this.database.current.user.email === form.commander) {\n      return form.status === 'pending';}\n    });\n  }\n\n  public getApprovedDrives() : Drive[] {\n    return this.database.current.drive_history.filter( (drive) => {\n      return drive.status === 'verified';\n    });\n  }\n\n  public checkTimelefttoJIT(date: any) {\n    const today = dayjs();\n    var period = 8;\n    var left = period - today.diff(date,\"day\");\n    if (left < 0){\n      return false };\n    return true;\n  }\n\n  public getTimelefttoJIT(date:any ) {\n    const today = dayjs();\n    var period = 7*24*60*60;\n    var left = period - today.diff(date,\"s\");\n    return left;\n  }\n\n  public click(drive: Drive): void {\n    this.database.current.drive_to_edit = drive;\n    console.log(`> Navigating to AddDrivePage for drive id=${drive.id}`);\n    this.navCtrl.navigateForward(['/add-drive']);\n  }\n\n public clickmtrac(form: Mtrac): void {\n    this.database.current.mtrac_to_edit = form;\n    console.log(`> Navigating to mtracPage for mtrac id=${form.id}`);\n    this.navCtrl.navigateForward(['/mtrac']);\n  }\n\n/*//  public click1(driver: User): void {\n    for (let user of this.database.current.all_drivers_of_commander) {\n      driver = user\n      console.log(`> Navigating to History for email=${driver.email}`)\n      this.navCtrl.navigateForward(['/history'])\n    };\n  }*/\n\n}\n"],"sourceRoot":"webpack:///","file":"pages-commander-commander-module-es5.js"}