{"version":3,"sources":["./src/app/signup/signup.page.html","./src/app/signup/signup.module.ts","./src/app/signup/signup.page.scss","./src/app/signup/signup.page.ts"],"names":[],"mappings":"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","file":"signup-signup-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Signup</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content no-padding>\\n\\n  <form class=\\\"form\\\" [formGroup]=\\\"validationsForm\\\"  (ngSubmit)=\\\"tryRegister(validationsForm.value)\\\">\\n    \\n    <!-- Name ------------------->\\n\\n    <ion-item no-padding>\\n      <ion-label position=\\\"floating\\\">Name</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validationMessages.name\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('name').hasError(validation.type) && (validationsForm.get('name').dirty || validationsForm.get('name').touched)\\\">\\n        {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <!-- Email ------------------->\\n\\n    <ion-item no-padding>\\n      <ion-label  position=\\\"floating\\\">Email</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validationMessages.email\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('email').hasError(validation.type) && (validationsForm.get('email').dirty || validationsForm.get('email').touched)\\\">\\n        {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <!-- Unit ------------------->\\n\\n    <ion-item no-padding>\\n      <ion-label position=\\\"floating\\\">Unit</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"unit\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validationMessages.unit\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('unit').hasError(validation.type) && (validationsForm.get('unit').dirty || validationsForm.get('unit').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <!-- Company/Platoon ------------------->\\n\\n    <ion-item no-padding>\\n      <ion-label position=\\\"floating\\\">Company</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"company\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validationMessages.company\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('company').hasError(validation.type) && (validationsForm.get('company').dirty || validationsForm.get('company').touched)\\\">\\n        {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    \\n    <!-- Password ------------------->\\n\\n    <ion-item no-padding>\\n      <ion-label  position=\\\"floating\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validationMessages.password\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('password').hasError(validation.type) && (validationsForm.get('password').dirty || validationsForm.get('password').touched)\\\">\\n        {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n       \\n    <ion-item no-padding>\\n      <ion-label position=\\\"floating\\\">Confirm Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validationMessages.confirmPassword\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('confirmPassword').hasError(validation.type) && (validationsForm.get('confirmPassword').dirty || validationsForm.get('confirmPassword').touched)\\\">\\n        {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <!-- Licence ------------------->\\n    \\n    <ion-item no-padding>\\n      <ion-label position=\\\"floating\\\">License Number</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"licenseNum\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validationMessages.licenseNum\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('licenseNum').hasError(validation.type) && (validationsForm.get('licenseNum').dirty || validationsForm.get('licenseNum').touched)\\\">\\n        {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    \\n    <ion-item no-padding>\\n      <ion-label floating >License Type</ion-label>\\n      <ion-select formControlName=\\\"licenseType\\\">\\n        <ion-select-option value=\\\"A\\\">A</ion-select-option>\\n        <ion-select-option value=\\\"B\\\">B</ion-select-option>\\n        <ion-select-option value=\\\"C\\\">C</ion-select-option>\\n        <ion-select-option value=\\\"D\\\">D</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <!-- Commander or Driver ------------------->\\n\\n    <ion-item no-padding>\\n      <ion-label floating >Commander or Driver?</ion-label>\\n      <ion-select formControlName=\\\"isCommander\\\">\\n        <ion-select-option value=\\\"true\\\">Commander</ion-select-option>\\n        <ion-select-option value=\\\"false\\\">Driver</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n        \\n    <!-- Submit Button ------------------->  \\n    <BR><BR>\\n    <ion-button expand=\\\"block\\\" class=\\\"submit-btn\\\" type=\\\"submit\\\"  [disabled]=\\\"!validationsForm.valid\\\">Sign up</ion-button>\\n    <label class=\\\"error-message\\\">{{errorMessage}}</label>\\n    <label class=\\\"success-message\\\">{{successMessage}}</label>\\n\\n    <!-- <ion-button expand=\\\"block\\\" routerLink=\\\"/tabs\\\" fill=\\\"outline\\\">Sign up</ion-button>  --> \\n\\n    <!-- Cancel Button ------------------->\\n    <ion-button expand=\\\"block\\\" routerLink=\\\"/\\\" fill=\\\"outline\\\">Cancel</ion-button>\\n\\n  </form>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SignupPage]\n})\nexport class SignupPageModule {}\n","export default \"ion-content {\\n  --padding-start: 10%;\\n  --padding-end: 10%;\\n  --padding-top: 5px;\\n}\\nion-content .error-message {\\n  color: red;\\n  font-size: 0.8em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb2phdmUvRGVza3RvcC9FbmdpbmVlcnNMb2dib29rMi9zcmMvYXBwL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIiwic3JjL2FwcC9zaWdudXAvc2lnbnVwLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVFLG9CQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtBQ0FGO0FERUU7RUFDRSxVQUFBO0VBQ0EsZ0JBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xuXG4gIC0tcGFkZGluZy1zdGFydDogMTAlO1xuICAtLXBhZGRpbmctZW5kOiAxMCU7XG4gIC0tcGFkZGluZy10b3A6IDVweDtcblxuICAuZXJyb3ItbWVzc2FnZSB7XG4gICAgY29sb3I6IHJlZDtcbiAgICBmb250LXNpemU6IDAuOGVtO1xuICB9XG59XG4iLCJpb24tY29udGVudCB7XG4gIC0tcGFkZGluZy1zdGFydDogMTAlO1xuICAtLXBhZGRpbmctZW5kOiAxMCU7XG4gIC0tcGFkZGluZy10b3A6IDVweDtcbn1cbmlvbi1jb250ZW50IC5lcnJvci1tZXNzYWdlIHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAwLjhlbTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { NavController } from '@ionic/angular';\nimport { DatabaseService, User } from '../services/database.service';\nimport { ToastController } from '@ionic/angular';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.scss'],\n})\nexport class SignupPage implements OnInit {\n\n  validationsForm: FormGroup;\n  errorMessage = '';\n  successMessage = '';\n  toast: any;\n\n  validationMessages = {\n   name: [\n     { type: 'required', message: 'Name is required.' }],\n   email: [\n     { type: 'required', message: 'Email is required.' },\n     { type: 'pattern', message: 'Enter a valid email.' }\n   ],\n   unit: [\n     { type: 'required', message: 'Unit is required 30SCE or TPT.' },\n     { type: 'minlength', message: 'Unit must be at least 3 characters long.' }\n   ],\n   company: [\n     { type: 'required', message: 'Company is required A/B/C/ME or West.' },\n     { type: 'maxlength', message: 'Company must be less than 5 characters long. Alpha-A Bravo-B Charlie-C' }\n   ],\n   password: [\n     { type: 'required', message: 'Password is required.' },\n     { type: 'minlength', message: 'Password must be at least 6 characters long.' }\n   ],\n   confirmPassword: [\n    { type: 'required', message: 'You need to confirm your password.' },\n  ],\n   licenseNum: [\n    { type: 'required', message: 'License Number is required.' },\n    { type: 'minlength', message: 'License Number must be at least 5 characters long.' }\n  ]\n };\n\n  constructor(\n    private navCtrl: NavController,\n    private authService: AuthenticationService,\n    private database: DatabaseService,\n    private formBuilder: FormBuilder,\n    public toastController: ToastController\n  ) {}\n\n  ngOnInit(){\n    this.validationsForm = this.formBuilder.group({\n      name: new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      unit: new FormControl('', Validators.compose([\n        Validators.minLength(3),\n        Validators.required\n      ])),\n      company: new FormControl('', Validators.compose([\n        Validators.maxLength(4),\n        Validators.required\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.minLength(6),\n        Validators.required\n      ])),\n      confirmPassword: new FormControl('', Validators.required),\n      licenseNum: new FormControl('', Validators.compose([\n        Validators.minLength(6),\n        Validators.required\n      ])),\n      licenseType: new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      isCommander: new FormControl('', Validators.compose([\n        Validators.required\n      ]))\n    });\n  }\n\n  async tryRegister(value){\n  \n    //console.log(`tryRegister: ${JSON.stringify(value)}`);\n    if (this.validationsForm.get('password').value !== this.validationsForm.get('confirmPassword').value) {\n      this.errorMessage = 'Password do not match';\n    }\n    else {\n      try {\n        const res = await this.authService.registerUser(value);\n        //console.log(`success: ${JSON.stringify(res)}`);\n        var new_user: User = {\n          name: value.name.toUpperCase(),\n          email: value.email,\n          fleet: value.unit.toUpperCase(),\n          company: value.company.toUpperCase(),\n          licence_num: value.licenseNum,\n          licence_type: value.licenseType,\n          created: this.database.getTimeStamp(),\n          mss_certified: false,\n          flb_certified: false,\n          belrex_certified: false,\n          is_driver: value.isCommander.toLowerCase() === 'false',\n          is_commander: value.isCommander.toLowerCase() === 'true',\n          location: {lat: 0, lng: 0}\n        };\n        await this.database.write('user',res.user.email,new_user);\n        this.errorMessage = '';\n        this.successMessage = 'Your account has been created. Please log in.';\n        this.showToast(this.successMessage);\n        \n      } catch(err) {\n        console.log(err);\n        this.errorMessage = err.message;\n        this.successMessage = '';\n      }\n    }\n  }\n\n  goLoginPage() {\n    this.navCtrl.navigateBack('');\n  }\n\n  showToast(msg) {\n    this.toastController.create({\n      message: msg,\n      duration: 2000,\n      showCloseButton: true,\n      closeButtonText: 'OK',\n      position: 'middle'\n    }).then((obj) => {\n      obj.present();\n      this.navCtrl.navigateBack('');\n    });\n  }\n \n}\n"],"sourceRoot":"webpack:///"}