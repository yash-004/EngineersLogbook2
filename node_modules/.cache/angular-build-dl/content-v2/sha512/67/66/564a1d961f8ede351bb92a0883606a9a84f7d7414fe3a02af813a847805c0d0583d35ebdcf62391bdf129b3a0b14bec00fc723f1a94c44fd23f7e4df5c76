{"version":3,"sources":["./src/app/home/home.page.html","./src/app/home/home.module.ts","./src/app/home/home.page.scss","./src/app/home/home.page.ts","./src/app/services/anime.js","./src/app/services/messaging.service.ts"],"names":[],"mappings":"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A;;AAEA;AACA;;AAEA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,cAAc,mEAAmE;AACjF;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,yBAAyB,OAAO;AAChC;;AAEA;AACA;AACA;AACA,6BAA6B,EAAE,UAAU,EAAE,UAAU,EAAE;AACvD;AACA;AACA;AACA,mBAAmB,EAAE,GAAG,EAAE,GAAG,EAAE;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,EAAE;AACtD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO,mDAAmD;AAC1D,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,EAAE,GAAG,EAAE;AACpC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;AACA,qBAAqB,mCAAmC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;;AAEA,4BAA4B;;AAE5B;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C,OAAO;AACP,oCAAoC,KAAK;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,8EAA8E,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,KAAK;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,wCAAwC,KAAK;AAC7C;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB,oBAAoB,EAAE;AACtE;AACA,0GAA0G;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;;;;;;;;;;ACh+ByC;AACC;AACU;AACT;AAK5C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAE3B,YACU,QAAkB,EAClB,QAAyB,EACzB,GAAQ,CAAE,2BAA2B;;QAFrC,aAAQ,GAAR,QAAQ,CAAU;QAClB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,QAAG,GAAH,GAAG,CAAK;IACd,CAAC;IAEE,IAAI,CAAC,KAAa;QAEvB,oDAAoD;QACpD,0CAA0C;QAE1C,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE;YAE/B,OAAO,CAAC,GAAG,CAAC,iDAAiD,KAAK,EAAE,CAAC,CAAC;YAEtE,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAE/B,OAAO,CAAC,GAAG,CAAC,0BAA0B,KAAK,EAAE,CAAC,CAAC;gBAE/C,MAAM,GAAG,GAAG;oBACV,KAAK;oBACL,MAAM,EAAE,KAAK;iBACd,CAAC;gBAEF,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAC,KAAK,EAAC,GAAG,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBAC1C,OAAO,CAAC,GAAG,CAAC,2BAA2B,KAAK,EAAE,CAAC,CAAC;gBAChD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAEzC,IAAI,IAAI,CAAC,SAAS,EAAE;oBAClB,OAAO,CAAC,GAAG,CAAC,kCAAkC,IAAI,EAAE,CAAC,CAAC;oBAChE,iEAAiE;iBACxD;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,wCAAwC,IAAI,EAAE,CAAC,CAAC;oBACtE,iEAAiE;iBACxD;YACH,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;SAC1C;IACH,CAAC;CACF;;YA7CqB,uDAAQ;YACR,iEAAe;YACpB,yDAAG,CAAE,2BAA2B;;;AALpC,gBAAgB;IAH5B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAIoB,uDAAQ;QACR,iEAAe;QACpB,yDAAG,CAAE,2BAA2B;;GALpC,gBAAgB,CAgD5B;AAhD4B","file":"home-home-module-es2015.js","sourcesContent":["export default \"<ion-content padding id='login-content'>\\n\\n  <form class=\\\"form\\\" [formGroup]=\\\"validationsForm\\\"  (ngSubmit)=\\\"loginUser(validationsForm.value)\\\">\\n    <ion-item class=\\\"textfield\\\" no-padding id='email'>\\n      <ion-label class=\\\"textfield\\\" position=\\\"floating\\\">Email</ion-label>\\n      <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" name=\\\"email\\\"></ion-input>\\n    </ion-item>\\n\\n    <!--div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validationMessages.email\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('email').hasError(validation.type) && (validationsForm.get('email').dirty || validationsForm.get('email').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div-->\\n\\n    <ion-item class=\\\"textfield\\\" fill=\\\"outline\\\" no-padding id='password'>\\n      <ion-label class=\\\"textfield\\\" position=\\\"floating\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" required ></ion-input>\\n    </ion-item>\\n\\n    <!--div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validationMessages.password\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('password').hasError(validation.type) && (validationsForm.get('password').dirty || validationsForm.get('password').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div-->\\n\\n    <label class=\\\"error-message\\\">{{errorMessage}}</label>\\n\\n    <ion-button class=\\\"submit-btn\\\" type=\\\"submit\\\" fill=\\\"solid\\\" expand=\\\"block\\\" [disabled]=\\\"!validationsForm.valid\\\" >Login</ion-button>\\n\\n  </form>\\n  <ion-button class='signup-btn' fill=\\\"outline\\\" routerLink=\\\"/signup\\\" expand=\\\"block\\\">Sign up</ion-button>\\n\\n<!--\\n  <ion-button class='offline-btn' fill=\\\"outline\\\" routerLink=\\\"/offline\\\" expand=\\\"block\\\">Offline Mode</ion-button>\\n-->\\n\\n      <ion-list>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-icon slot=\\\"start\\\" name=\\\"moon\\\"></ion-icon>\\n          <ion-label>\\n            Toggle Dark Theme\\n          </ion-label>\\n          <ion-toggle [(ngModel)]=\\\"toggle_dark_mode\\\" id=\\\"themeToggle\\\" slot=\\\"end\\\"></ion-toggle>\\n        </ion-item>\\n      </ion-list>\\n\\n  <ion-item class=\\\"align-items: center\\\">\\n    <ion-row class=\\\"align-items: center\\\">\\n      <ion-label color=\\\"success\\\"> <img src=\\\"assets/30SCE.png\\\"> 30 SCE </ion-label>\\n    </ion-row>\\n  </ion-item>\\n\\n  <!-- FOR DEBUGGING ONLY -->\\n\\n  <!--<div id='debug-stuff' style=\\\"position:relative; top:5em;\\\" *ngIf=\\\"debugging_mode\\\">\\n    <ion-button size='small' fill=\\\"outline\\\" (click)=\\\"debug('driver')\\\" clear>Debug Driver</ion-button>\\n    <ion-button size='small' fill=\\\"outline\\\" (click)=\\\"debug('commander')\\\" clear>Debug Commander</ion-button>\\n    <ion-button size='small' fill=\\\"outline\\\" (click)=\\\"debug('admin')\\\" clear>Debug Admin</ion-button>\\n    &lt;!&ndash;ion-button (click)=\\\"changeTheme('autumn')\\\">Autumn</ion-button>\\n    <ion-button (click)=\\\"changeTheme('night')\\\">Dark</ion-button>\\n    <ion-button (click)=\\\"changeTheme('neon')\\\">Neon</ion-button> &ndash;&gt;\\n  </div>-->\\n\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","export default \"ion-content {\\n  --padding-start: 10%;\\n  --padding-end: 10%;\\n  --padding-top: 10%;\\n}\\nion-content .rounded {\\n  border-radius: 5px;\\n}\\nion-content .textfield {\\n  --background: transparent;\\n}\\nion-content .error-message {\\n  color: red;\\n  font-size: 0.8em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb2phdmUvRGVza3RvcC9FbmdpbmVlcnNMb2dib29rMi9zcmMvYXBwL2hvbWUvaG9tZS5wYWdlLnNjc3MiLCJzcmMvYXBwL2hvbWUvaG9tZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFJRSxvQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7QUNIRjtBRFVFO0VBR0Usa0JBQUE7QUNSSjtBRFVFO0VBQ0UseUJBQUE7QUNSSjtBRFVFO0VBQ0UsVUFBQTtFQUNBLGdCQUFBO0FDUkoiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pb24tY29udGVudCB7XG5cbi8vICBvcGFjaXR5OiAwOyAgIC8vIGFuaW1lanMgd2lsbCBmYWRlIHRoaXMgaW5cbiAgXG4gIC0tcGFkZGluZy1zdGFydDogMTAlO1xuICAtLXBhZGRpbmctZW5kOiAxMCU7XG4gIC0tcGFkZGluZy10b3A6IDEwJTtcblxuICAvLyBodHRwczovL3d3dy5jc3NtYXRpYy5jb20vZ3JhZGllbnQtZ2VuZXJhdG9yXG4gIC8vYmFja2dyb3VuZDogLW1vei1saW5lYXItZ3JhZGllbnQobGVmdCwgcmdiYSgzMyw1Myw5LDEpMCUsICByZ2JhKDEwNCwxMzMsODEsMSkgIDEwMCUpO1xuICAvLy0taW9uLWJhY2tncm91bmQtY29sb3I6IG5vbmU7XG4gIC8vLS1pb24tdGV4dC1jb2xvcjojMDAwMDAwO1xuICAgIFxuICAucm91bmRlZCB7XG4gICAgLW1vei1ib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICB9XG4gIC50ZXh0ZmllbGQge1xuICAgIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIH1cbiAgLmVycm9yLW1lc3NhZ2Uge1xuICAgIGNvbG9yOiByZWQ7XG4gICAgZm9udC1zaXplOiAwLjhlbTtcbiAgfVxufVxuIiwiaW9uLWNvbnRlbnQge1xuICAtLXBhZGRpbmctc3RhcnQ6IDEwJTtcbiAgLS1wYWRkaW5nLWVuZDogMTAlO1xuICAtLXBhZGRpbmctdG9wOiAxMCU7XG59XG5pb24tY29udGVudCAucm91bmRlZCB7XG4gIC1tb3otYm9yZGVyLXJhZGl1czogNXB4O1xuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuaW9uLWNvbnRlbnQgLnRleHRmaWVsZCB7XG4gIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5pb24tY29udGVudCAuZXJyb3ItbWVzc2FnZSB7XG4gIGNvbG9yOiByZWQ7XG4gIGZvbnQtc2l6ZTogMC44ZW07XG59Il19 */\"","import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl} from '@angular/forms';\nimport { NavController, LoadingController } from '@ionic/angular';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { DatabaseService } from '../services/database.service';\nimport { MessagingService } from '../services/messaging.service';\n//import { ThemeService } from '../services/theme.service';\nimport { environment } from '../../environments/environment';\nimport { Storage } from '@ionic/storage';\nimport * as anime from '../services/anime.js'  // For splash animation\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n  validationsForm: FormGroup;\n  errorMessage = '';\n\n  validationMessages = {\n    email: [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Invalid email.' }\n    ],\n\n    // TODO: Validate password security at sign-up page only\n    password: [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 6 characters long.' }\n    ]\n  };\n\n  constructor(\n\n    private navCtrl: NavController,\n    private authService: AuthenticationService,\n    private database: DatabaseService,\n    private messaging: MessagingService,\n    private formBuilder: FormBuilder,\n    private loadingCtrl: LoadingController,\n    private storage: Storage\n    //,private theme: ThemeService\n\n  ) {\n    //this.animate();\n  }    \n\n  private loading;\n  public debugging_mode = true;\n  public toggle_dark_mode = false;\n  \n  ngOnInit() {\n\n    this.debugging_mode = !environment.production;  // --prod\n    \n    this.validationsForm = this.formBuilder.group({\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n\n      password: new FormControl('', Validators.compose([\n        Validators.minLength(6),\n        Validators.required\n      ]))\n    });\n    \n    // Restore used user/password\n    this.storage.get('email').then(value => {\n      this.validationsForm.get('email').setValue(value);\n    });\n    this.storage.get('password').then(value => {\n      this.validationsForm.get('password').setValue(value);\n    });\n\n    // Query for the toggle that is used to change between themes\n    // Note: \"dark\" colors are defined in theme/variables.scss\n    const toggle:any = document.querySelector('#themeToggle');\n    toggle.addEventListener('ionChange', (ev:any) => {\n      document.body.classList.toggle('dark', ev.detail.checked);\n      this.storage.set('dark', ev.detail.checked);\n    });\n\n    this.storage.get('dark').then(value => {\n      document.body.classList.toggle('dark', value);\n      this.toggle_dark_mode = value; // This will also set ngModel for ion-toggle\n    });\n  }\n\n  async loginUser(input){\n\n    console.log(`> Attempting login: ${input.email}`);\n\n    // Loading spinner overlay\n    this.loading = await this.loadingCtrl.create({\n      message: \"Authenticating...\"\n    });\n    this.loading.present();\n    \n    try { \n\n      // Authenticate user\n      var res = await this.authService.loginUser(input);\n      console.log(`> Firebase authentication is successful: ${res.user.email}`);\n\n      // Init database, retrieve user/drives info    \n      this.setLoadingText(\"Reading database...\");\n      await this.database.init(res.user.email);\n      console.log(`> Finished loading user: ${res.user.email}`);\n\n      // Init cloud messaging/notifications\n      this.setLoadingText(\"Initializing cloud messaging...\");\n      await this.messaging.init(res.user.email);\n\n      this.setLoadingText(\"Login success.\");\n      setTimeout(() => {this.loading.dismiss();},2000);\n\n      // Done initialization\n      if (this.database.current.user.is_commander) {\n        this.navCtrl.navigateForward('/tabs/commander');\n      } else {\n        this.navCtrl.navigateForward('/tabs/summary');\n      }\n      this.errorMessage = '';\n\n      // On successful login, save it      \n      this.storage.set('email', input.email);\n      this.storage.set('password', input.password);\n\n    } catch(err) {\n    \n      this.loading.dismiss();\n      this.errorMessage = `Login failed. ${err}`;\n    }\n    //this.validationsForm.reset();\n  }\n\n  private setLoadingText(text:string) {\n    const elem = document.querySelector(\n      \"div.loading-wrapper div.loading-content\");\n    if (elem) elem.innerHTML = text;\n  }\n\n  private debug(who) {\n    if (who === 'driver') {\n      this.validationsForm.get('email').setValue('tan97@gmail.com');\n      this.validationsForm.get('password').setValue('123456');\n    } else\n    if (who === 'commander') {\n      this.validationsForm.get('email').setValue('lee55@gmail.com');\n      this.validationsForm.get('password').setValue('123456');\n    } else\n    if (who === 'admin') {   \n      this.validationsForm.get('email').setValue('superuser@gmail.com');\n      this.validationsForm.get('password').setValue('123456');\n    }\n  }\n  private animate() {\n    // Only start animation when background image has finished loading\n    document.body.classList.add('js-loading');\n    window.addEventListener(\"load\", () => \n    {\n      document.body.classList.remove('js-loading');\n      console.log(\"Inside window::load\");\n\n      anime.timeline({loop: false})\n      .add({\n        targets: '#login-content',\n        opacity: [0,1],\n        duration: 3000,\n        easing: \"easeOutExpo\",\n      }).add({\n        targets: '#email',\n        opacity: [0,1],\n        translateY: [\"50em\",0],\n        duration: 800,\n        easing: \"easeOutBack\",\n        offset: '-=3000'\n      }).add({\n        targets: '#password',\n        opacity: [0,1],\n        translateY: [\"50em\",0],\n        duration: 800,\n        easing: \"easeOutBack\",\n        offset: '-=2500'\n      }).add({\n        targets: '.submit-btn',\n        opacity: [0,1],\n        translateY: [\"50em\",0],\n        duration: 800,\n        easing: \"easeOutBack\",\n        offset: '-=2250'\n      }).add({\n        targets: '.signup-btn',\n        opacity: [0,1],\n        translateY: [\"50em\",0],\n        duration: 800,\n        easing: \"easeOutBack\",\n        offset: '-=2000'\n      }).add({\n        targets: '#debug-stuff',\n        opacity: [0,1],\n        duration: 800,\n        easing: \"easeOutBack\",\n        offset: '-=1000'\n      });\n    });\n  }\n}\n","/**\n * http://animejs.com\n * JavaScript animation engine\n * @version v2.2.0\n * @author Julian Garnier\n * @copyright ©2017 Julian Garnier\n * Released under the MIT license\n**/\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.anime = factory();\n  }\n}(this, () => {\n\n  // Defaults\n\n  const defaultInstanceSettings = {\n    update: undefined,\n    begin: undefined,\n    run: undefined,\n    complete: undefined,\n    loop: 1,\n    direction: 'normal',\n    autoplay: true,\n    offset: 0\n  }\n\n  const defaultTweenSettings = {\n    duration: 1000,\n    delay: 0,\n    easing: 'easeOutElastic',\n    elasticity: 500,\n    round: 0\n  }\n\n  const validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skewX', 'skewY', 'perspective'];\n  let transformString;\n\n  // Utils\n\n  function stringContains(str, text) {\n    return str.indexOf(text) > -1;\n  }\n\n  const is = {\n    arr: a => Array.isArray(a),\n    obj: a => stringContains(Object.prototype.toString.call(a), 'Object'),\n    pth: a => is.obj(a) && a.hasOwnProperty('totalLength'),\n    svg: a => a instanceof SVGElement,\n    dom: a => a.nodeType || is.svg(a),\n    str: a => typeof a === 'string',\n    fnc: a => typeof a === 'function',\n    und: a => typeof a === 'undefined',\n    hex: a => /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a),\n    rgb: a => /^rgb/.test(a),\n    hsl: a => /^hsl/.test(a),\n    col: a => (is.hex(a) || is.rgb(a) || is.hsl(a))\n  }\n\n  // BezierEasing https://github.com/gre/bezier-easing\n\n  const bezier = (() => {\n\n    const kSplineTableSize = 11;\n    const kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1 };\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1 };\n    function C (aA1)      { return 3.0 * aA1 };\n\n    function calcBezier (aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT };\n    function getSlope (aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1) };\n\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\n      let currentX, currentT, i = 0;\n      do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) { aB = currentT } else { aA = currentT };\n      } while (Math.abs(currentX) > 0.0000001 && ++i < 10);\n      return currentT;\n    }\n\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\n      for (let i = 0; i < 4; ++i) {\n        const currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) return aGuessT;\n        const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n      }\n      return aGuessT;\n    }\n\n    function bezier(mX1, mY1, mX2, mY2) {\n\n      if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) return;\n      let sampleValues = new Float32Array(kSplineTableSize);\n\n      if (mX1 !== mY1 || mX2 !== mY2) {\n        for (let i = 0; i < kSplineTableSize; ++i) {\n          sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n        }\n      }\n\n      function getTForX(aX) {\n\n        let intervalStart = 0.0;\n        let currentSample = 1;\n        const lastSample = kSplineTableSize - 1;\n\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n          intervalStart += kSampleStepSize;\n        }\n\n        --currentSample;\n\n        const dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        const guessForT = intervalStart + dist * kSampleStepSize;\n        const initialSlope = getSlope(guessForT, mX1, mX2);\n\n        if (initialSlope >= 0.001) {\n          return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        } else if (initialSlope === 0.0) {\n          return guessForT;\n        } else {\n          return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n\n      }\n\n      return x => {\n        if (mX1 === mY1 && mX2 === mY2) return x;\n        if (x === 0) return 0;\n        if (x === 1) return 1;\n        return calcBezier(getTForX(x), mY1, mY2);\n      }\n\n    }\n\n    return bezier;\n\n  })();\n\n  const easings = (() => {\n\n    const names = ['Quad', 'Cubic', 'Quart', 'Quint', 'Sine', 'Expo', 'Circ', 'Back', 'Elastic'];\n\n    // Elastic easing adapted from jQueryUI http://api.jqueryui.com/easings/\n\n    function elastic(t, p) {\n      return t === 0 || t === 1 ? t :\n      -Math.pow(2, 10 * (t - 1)) * Math.sin((((t - 1) - (p / (Math.PI * 2.0) * Math.asin(1))) * (Math.PI * 2)) / p );\n    }\n\n    // Approximated Penner equations http://matthewlein.com/ceaser/\n\n    const equations = {\n      In: [\n        [0.550, 0.085, 0.680, 0.530], /* InQuad */\n        [0.550, 0.055, 0.675, 0.190], /* InCubic */\n        [0.895, 0.030, 0.685, 0.220], /* InQuart */\n        [0.755, 0.050, 0.855, 0.060], /* InQuint */\n        [0.470, 0.000, 0.745, 0.715], /* InSine */\n        [0.950, 0.050, 0.795, 0.035], /* InExpo */\n        [0.600, 0.040, 0.980, 0.335], /* InCirc */\n        [0.600, -0.280, 0.735, 0.045], /* InBack */\n        elastic /* InElastic */\n      ], Out: [\n        [0.250, 0.460, 0.450, 0.940], /* OutQuad */\n        [0.215, 0.610, 0.355, 1.000], /* OutCubic */\n        [0.165, 0.840, 0.440, 1.000], /* OutQuart */\n        [0.230, 1.000, 0.320, 1.000], /* OutQuint */\n        [0.390, 0.575, 0.565, 1.000], /* OutSine */\n        [0.190, 1.000, 0.220, 1.000], /* OutExpo */\n        [0.075, 0.820, 0.165, 1.000], /* OutCirc */\n        [0.175, 0.885, 0.320, 1.275], /* OutBack */\n        (t, f) => 1 - elastic(1 - t, f) /* OutElastic */\n      ], InOut: [\n        [0.455, 0.030, 0.515, 0.955], /* InOutQuad */\n        [0.645, 0.045, 0.355, 1.000], /* InOutCubic */\n        [0.770, 0.000, 0.175, 1.000], /* InOutQuart */\n        [0.860, 0.000, 0.070, 1.000], /* InOutQuint */\n        [0.445, 0.050, 0.550, 0.950], /* InOutSine */\n        [1.000, 0.000, 0.000, 1.000], /* InOutExpo */\n        [0.785, 0.135, 0.150, 0.860], /* InOutCirc */\n        [0.680, -0.550, 0.265, 1.550], /* InOutBack */\n        (t, f) => t < .5 ? elastic(t * 2, f) / 2 : 1 - elastic(t * -2 + 2, f) / 2 /* InOutElastic */\n      ]\n    }\n\n    let functions = {\n      linear: bezier(0.250, 0.250, 0.750, 0.750)\n    }\n\n    for (let type in equations) {\n      equations[type].forEach((f, i) => {\n        functions['ease'+type+names[i]] = is.fnc(f) ? f : bezier.apply(this, f);\n      });\n    }\n\n    return functions;\n\n  })();\n\n  // Strings\n\n  function stringToHyphens(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n\n  function selectString(str) {\n    if (is.col(str)) return;\n    try {\n      let nodes = document.querySelectorAll(str);\n      return nodes;\n    } catch(e) {\n      return;\n    }\n  }\n\n  // Arrays\n\n  function filterArray(arr, callback) {\n    const len = arr.length;\n    const thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n    let result = [];\n    for (let i = 0; i < len; i++) {\n      if (i in arr) {\n        const val = arr[i];\n        if (callback.call(thisArg, val, i, arr)) {\n          result.push(val);\n        }\n      }\n    }\n    return result;\n  }\n\n  function flattenArray(arr) {\n    return arr.reduce((a, b) => a.concat(is.arr(b) ? flattenArray(b) : b), []);\n  }\n\n  function toArray(o) {\n    if (is.arr(o)) return o;\n    if (is.str(o)) o = selectString(o) || o;\n    if (o instanceof NodeList || o instanceof HTMLCollection) return [].slice.call(o);\n    return [o];\n  }\n\n  function arrayContains(arr, val) {\n    return arr.some(a => a === val);\n  }\n\n  // Objects\n\n  function cloneObject(o) {\n    let clone = {};\n    for (let p in o) clone[p] = o[p];\n    return clone;\n  }\n\n  function replaceObjectProps(o1, o2) {\n    let o = cloneObject(o1);\n    for (let p in o1) o[p] = o2.hasOwnProperty(p) ? o2[p] : o1[p];\n    return o;\n  }\n\n  function mergeObjects(o1, o2) {\n    let o = cloneObject(o1);\n    for (let p in o2) o[p] = is.und(o1[p]) ? o2[p] : o1[p];\n    return o;\n  }\n\n  // Colors\n\n  function rgbToRgba(rgbValue) {\n    const rgb = /rgb\\((\\d+,\\s*[\\d]+,\\s*[\\d]+)\\)/g.exec(rgbValue);\n    return rgb ? `rgba(${rgb[1]},1)` : rgbValue;\n  }\n\n  function hexToRgba(hexValue) {\n    const rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    const hex = hexValue.replace(rgx, (m, r, g, b) => r + r + g + g + b + b );\n    const rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    const r = parseInt(rgb[1], 16);\n    const g = parseInt(rgb[2], 16);\n    const b = parseInt(rgb[3], 16);\n    return `rgba(${r},${g},${b},1)`;\n  }\n\n  function hslToRgba(hslValue) {\n    const hsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(hslValue) || /hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*([\\d.]+)\\)/g.exec(hslValue);\n    const h = parseInt(hsl[1]) / 360;\n    const s = parseInt(hsl[2]) / 100;\n    const l = parseInt(hsl[3]) / 100;\n    const a = hsl[4] || 1;\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1/6) return p + (q - p) * 6 * t;\n      if (t < 1/2) return q;\n      if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n      return p;\n    }\n    let r, g, b;\n    if (s == 0) {\n      r = g = b = l;\n    } else {\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      const p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1/3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1/3);\n    }\n    return `rgba(${r * 255},${g * 255},${b * 255},${a})`;\n  }\n\n  function colorToRgb(val) {\n    if (is.rgb(val)) return rgbToRgba(val);\n    if (is.hex(val)) return hexToRgba(val);\n    if (is.hsl(val)) return hslToRgba(val);\n  }\n\n  // Units\n\n  function getUnit(val) {\n    const split = /([\\+\\-]?[0-9#\\.]+)(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(val);\n    if (split) return split[2];\n  }\n\n  function getTransformUnit(propName) {\n    if (stringContains(propName, 'translate') || propName === 'perspective') return 'px';\n    if (stringContains(propName, 'rotate') || stringContains(propName, 'skew')) return 'deg';\n  }\n\n  // Values\n\n  function minMaxValue(val, min, max) {\n    return Math.min(Math.max(val, min), max);\n  }\n\n  function getFunctionValue(val, animatable) {\n    if (!is.fnc(val)) return val;\n    return val(animatable.target, animatable.id, animatable.total);\n  }\n\n  function getCSSValue(el, prop) {\n    if (prop in el.style) {\n      return getComputedStyle(el).getPropertyValue(stringToHyphens(prop)) || '0';\n    }\n  }\n\n  function getAnimationType(el, prop) {\n    if (is.dom(el) && arrayContains(validTransforms, prop)) return 'transform';\n    if (is.dom(el) && (el.getAttribute(prop) || (is.svg(el) && el[prop]))) return 'attribute';\n    if (is.dom(el) && (prop !== 'transform' && getCSSValue(el, prop))) return 'css';\n    if (el[prop] != null) return 'object';\n  }\n\n  function getTransformValue(el, propName) {\n    const defaultUnit = getTransformUnit(propName);\n    const defaultVal = stringContains(propName, 'scale') ? 1 : 0 + defaultUnit;\n    const str = el.style.transform;\n    if (!str) return defaultVal;\n    let match = [];\n    let props = [];\n    let values = [];\n    const rgx = /(\\w+)\\((.+?)\\)/g;\n    while (match = rgx.exec(str)) {\n      props.push(match[1]);\n      values.push(match[2]);\n    }\n    const value = filterArray(values, (val, i) => props[i] === propName);\n    return value.length ? value[0] : defaultVal;\n  }\n\n  function getOriginalTargetValue(target, propName) {\n    switch (getAnimationType(target, propName)) {\n      case 'transform': return getTransformValue(target, propName);\n      case 'css': return getCSSValue(target, propName);\n      case 'attribute': return target.getAttribute(propName);\n    }\n    return target[propName] || 0;\n  }\n\n  function getRelativeValue(to, from) {\n    const operator = /^(\\*=|\\+=|-=)/.exec(to);\n    if (!operator) return to;\n    const u = getUnit(to) || 0;\n    const x = parseFloat(from);\n    const y = parseFloat(to.replace(operator[0], ''));\n    switch (operator[0][0]) {\n      case '+': return x + y + u;\n      case '-': return x - y + u;\n      case '*': return x * y + u;\n    }\n  }\n\n  function validateValue(val, unit) {\n    if (is.col(val)) return colorToRgb(val);\n    const originalUnit = getUnit(val);\n    const unitLess = originalUnit ? val.substr(0, val.length - originalUnit.length) : val;\n    return unit && !/\\s/g.test(val) ? unitLess + unit : unitLess;\n  }\n\n  // getTotalLength() equivalent for circle, rect, polyline, polygon and line shapes. \n  // adapted from https://gist.github.com/SebLambla/3e0550c496c236709744\n\n  function getDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2)); \n  }\n\n  function getCircleLength(el) {\n    return 2 * Math.PI * el.getAttribute('r');\n  }\n\n  function getRectLength(el) {\n    return (el.getAttribute('width') * 2) + (el.getAttribute('height') * 2);\n  }\n\n  function getLineLength(el) {\n    return getDistance(\n      {x: el.getAttribute('x1'), y: el.getAttribute('y1')}, \n      {x: el.getAttribute('x2'), y: el.getAttribute('y2')}\n    );\n  }\n\n  function getPolylineLength(el) {\n    const points = el.points;\n    let totalLength = 0;\n    let previousPos;\n    for (let i = 0 ; i < points.numberOfItems; i++) {\n      const currentPos = points.getItem(i);\n      if (i > 0) totalLength += getDistance(previousPos, currentPos);\n      previousPos = currentPos;\n    }\n    return totalLength;\n  }\n\n  function getPolygonLength(el) {\n    const points = el.points;\n    return getPolylineLength(el) + getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0));\n  }\n\n  // Path animation\n\n  function getTotalLength(el) {\n    if (el.getTotalLength) return el.getTotalLength();\n    switch(el.tagName.toLowerCase()) {\n      case 'circle': return getCircleLength(el);\n      case 'rect': return getRectLength(el);\n      case 'line': return getLineLength(el);\n      case 'polyline': return getPolylineLength(el);\n      case 'polygon': return getPolygonLength(el);\n    }\n  }\n\n  function setDashoffset(el) {\n    const pathLength = getTotalLength(el);\n    el.setAttribute('stroke-dasharray', pathLength);\n    return pathLength;\n  }\n\n  // Motion path\n\n  function getPath(path, percent) {\n    const el = is.str(path) ? selectString(path)[0] : path;\n    const p = percent || 100;\n    return function(prop) {\n      return {\n        el: el,\n        property: prop,\n        totalLength: getTotalLength(el) * (p / 100)\n      }\n    }\n  }\n\n  function getPathProgress(path, progress) {\n    function point(offset = 0) {\n      const l = progress + offset >= 1 ? progress + offset : 0;\n      return path.el.getPointAtLength(l);\n    }\n    const p = point();\n    const p0 = point(-1);\n    const p1 = point(+1);\n    switch (path.property) {\n      case 'x': return p.x;\n      case 'y': return p.y;\n      case 'angle': return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI;\n    }\n  }\n\n  // Decompose value\n\n  function decomposeValue(val, unit) {\n    const rgx = /-?\\d*\\.?\\d+/g;\n    const value = validateValue((is.pth(val) ? val.totalLength : val), unit) + '';\n    return {\n      original: value,\n      numbers: value.match(rgx) ? value.match(rgx).map(Number) : [0],\n      strings: (is.str(val) || unit) ? value.split(rgx) : []\n    }\n  }\n\n  // Animatables\n\n  function parseTargets(targets) {\n    const targetsArray = targets ? (flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets))) : [];\n    return filterArray(targetsArray, (item, pos, self) => self.indexOf(item) === pos);\n  }\n\n  function getAnimatables(targets) {\n    const parsed = parseTargets(targets);\n    return parsed.map((t, i) => {\n      return {target: t, id: i, total: parsed.length};\n    });\n  }\n\n  // Properties\n\n  function normalizePropertyTweens(prop, tweenSettings) {\n    let settings = cloneObject(tweenSettings);\n    if (is.arr(prop)) {\n      const l = prop.length;\n      const isFromTo = (l === 2 && !is.obj(prop[0]));\n      if (!isFromTo) {\n        // Duration divided by the number of tweens\n        if (!is.fnc(tweenSettings.duration)) settings.duration = tweenSettings.duration / l;\n      } else {\n        // Transform [from, to] values shorthand to a valid tween value\n        prop = {value: prop};\n      }\n    }\n    return toArray(prop).map((v, i) => {\n      // Default delay value should be applied only on the first tween\n      const delay = !i ? tweenSettings.delay : 0;\n      // Use path object as a tween value\n      let obj = is.obj(v) && !is.pth(v) ? v : {value: v};\n      // Set default delay value\n      if (is.und(obj.delay)) obj.delay = delay;\n      return obj;\n    }).map(k => mergeObjects(k, settings));\n  }\n\n  function getProperties(instanceSettings, tweenSettings, params) {\n    let properties = [];\n    const settings = mergeObjects(instanceSettings, tweenSettings);\n    for (let p in params) {\n      if (!settings.hasOwnProperty(p) && p !== 'targets') {\n        properties.push({\n          name: p,\n          offset: settings['offset'],\n          tweens: normalizePropertyTweens(params[p], tweenSettings)\n        });\n      }\n    }\n    return properties;\n  }\n\n  // Tweens\n\n  function normalizeTweenValues(tween, animatable) {\n    let t = {};\n    for (let p in tween) {\n      let value = getFunctionValue(tween[p], animatable);\n      if (is.arr(value)) {\n        value = value.map(v => getFunctionValue(v, animatable));\n        if (value.length === 1) value = value[0];\n      }\n      t[p] = value;\n    }\n    t.duration = parseFloat(t.duration);\n    t.delay = parseFloat(t.delay);\n    return t;\n  }\n\n  function normalizeEasing(val) {\n    return is.arr(val) ? bezier.apply(this, val) : easings[val];\n  }\n\n  function normalizeTweens(prop, animatable) {\n    let previousTween;\n    return prop.tweens.map(t => {\n      let tween = normalizeTweenValues(t, animatable);\n      const tweenValue = tween.value;\n      const originalValue = getOriginalTargetValue(animatable.target, prop.name);\n      const previousValue = previousTween ? previousTween.to.original : originalValue;\n      const from = is.arr(tweenValue) ? tweenValue[0] : previousValue;\n      const to = getRelativeValue(is.arr(tweenValue) ? tweenValue[1] : tweenValue, from);\n      const unit = getUnit(to) || getUnit(from) || getUnit(originalValue);\n      tween.from = decomposeValue(from, unit);\n      tween.to = decomposeValue(to, unit);\n      tween.start = previousTween ? previousTween.end : prop.offset;\n      tween.end = tween.start + tween.delay + tween.duration;\n      tween.easing = normalizeEasing(tween.easing);\n      tween.elasticity = (1000 - minMaxValue(tween.elasticity, 1, 999)) / 1000;\n      tween.isPath = is.pth(tweenValue);\n      tween.isColor = is.col(tween.from.original);\n      if (tween.isColor) tween.round = 1;\n      previousTween = tween;\n      return tween;\n    });\n  }\n\n  // Tween progress\n\n  const setTweenProgress = {\n    css: (t, p, v) => t.style[p] = v,\n    attribute: (t, p, v) => t.setAttribute(p, v),\n    object: (t, p, v) => t[p] = v,\n    transform: (t, p, v, transforms, id) => {\n      if (!transforms[id]) transforms[id] = [];\n      transforms[id].push(`${p}(${v})`);\n    }\n  }\n\n  // Animations\n\n  function createAnimation(animatable, prop) {\n    const animType = getAnimationType(animatable.target, prop.name);\n    if (animType) {\n      const tweens = normalizeTweens(prop, animatable);\n      return {\n        type: animType,\n        property: prop.name,\n        animatable: animatable,\n        tweens: tweens,\n        duration: tweens[tweens.length - 1].end,\n        delay: tweens[0].delay\n      }\n    }\n  }\n\n  function getAnimations(animatables, properties) {\n    return filterArray(flattenArray(animatables.map(animatable => {\n      return properties.map(prop => {\n        return createAnimation(animatable, prop);\n      });\n    })), a => !is.und(a));\n  }\n\n  // Create Instance\n\n  function getInstanceTimings(type, animations, instanceSettings, tweenSettings) {\n    const isDelay = (type === 'delay');\n    if (animations.length) {\n      return (isDelay ? Math.min : Math.max).apply(Math, animations.map(anim => anim[type]));\n    } else {\n      return isDelay ? tweenSettings.delay : instanceSettings.offset + tweenSettings.delay + tweenSettings.duration;\n    }\n  }\n\n  function createNewInstance(params) {\n    const instanceSettings = replaceObjectProps(defaultInstanceSettings, params);\n    const tweenSettings = replaceObjectProps(defaultTweenSettings, params);\n    const animatables = getAnimatables(params.targets);\n    const properties = getProperties(instanceSettings, tweenSettings, params);\n    const animations = getAnimations(animatables, properties);\n    return mergeObjects(instanceSettings, {\n      children: [],\n      animatables: animatables,\n      animations: animations,\n      duration: getInstanceTimings('duration', animations, instanceSettings, tweenSettings),\n      delay: getInstanceTimings('delay', animations, instanceSettings, tweenSettings)\n    });\n  }\n\n  // Core\n\n  let activeInstances = [];\n  let raf = 0;\n\n  const engine = (() => {\n    function play() { raf = requestAnimationFrame(step); };\n    function step(t) {\n      const activeLength = activeInstances.length;\n      if (activeLength) {\n        let i = 0;\n        while (i < activeLength) {\n          if (activeInstances[i]) activeInstances[i].tick(t);\n          i++;\n        }\n        play();\n      } else {\n        cancelAnimationFrame(raf);\n        raf = 0;\n      }\n    }\n    return play;\n  })();\n\n\n  // Public Instance\n\n  function anime(params = {}) {\n\n    let now, startTime, lastTime = 0;\n\n    let resolve = null;\n\n    function makePromise() {\n      return window.Promise && new Promise(_resolve => resolve = _resolve);\n    }\n\n    let promise = makePromise();\n\n    let instance = createNewInstance(params);\n\n    function toggleInstanceDirection() {\n      instance.reversed = !instance.reversed;\n    }\n\n    function adjustTime(time) {\n      return instance.reversed ? instance.duration - time : time;\n    }\n\n    function syncInstanceChildren(time) {\n      const children = instance.children;\n      const childrenLength = children.length;\n      if (time >= instance.currentTime) {\n        for (let i = 0; i < childrenLength; i++) children[i].seek(time);\n      } else {\n        for (let i = childrenLength; i--;) children[i].seek(time);\n      }\n    }\n\n    function setAnimationsProgress(insTime) {\n      let i = 0;\n      let transforms = {};\n      const animations = instance.animations;\n      const animationsLength = animations.length;\n      while (i < animationsLength) {\n        const anim = animations[i];\n        const animatable = anim.animatable;\n        const tweens = anim.tweens;\n        const tweenLength = tweens.length - 1;\n        let tween = tweens[tweenLength];\n        // Only check for keyframes if there is more than one tween\n        if (tweenLength) tween = filterArray(tweens, t => (insTime < t.end))[0] || tween;\n        const elapsed = minMaxValue(insTime - tween.start - tween.delay, 0, tween.duration) / tween.duration;\n        const eased = isNaN(elapsed) ? 1 : tween.easing(elapsed, tween.elasticity);\n        const strings = tween.to.strings;\n        const round = tween.round;\n        let numbers = [];\n        let progress;\n        const toNumbersLength = tween.to.numbers.length;\n        for (let n = 0; n < toNumbersLength; n++) {\n          let value;\n          const toNumber = tween.to.numbers[n];\n          const fromNumber = tween.from.numbers[n];\n          if (!tween.isPath) {\n            value = fromNumber + (eased * (toNumber - fromNumber));\n          } else {\n            value = getPathProgress(tween.value, eased * toNumber);\n          }\n          if (round) {\n            if (!(tween.isColor && n > 2)) {\n              value = Math.round(value * round) / round;\n            }\n          }\n          numbers.push(value);\n        }\n        // Manual Array.reduce for better performances\n        const stringsLength = strings.length;\n        if (!stringsLength) {\n          progress = numbers[0];\n        } else {\n          progress = strings[0];\n          for (let s = 0; s < stringsLength; s++) {\n            const a = strings[s];\n            const b = strings[s + 1];\n            const n = numbers[s];\n            if (!isNaN(n)) {\n              if (!b) {\n                progress += n + ' ';\n              } else {\n                progress += n + b;\n              }\n            }\n          }\n        }\n        setTweenProgress[anim.type](animatable.target, anim.property, progress, transforms, animatable.id);\n        anim.currentValue = progress;\n        i++;\n      }\n      const transformsLength = Object.keys(transforms).length;\n      if (transformsLength) {\n        for (let id = 0; id < transformsLength; id++) {\n          if (!transformString) {\n            const t = 'transform';\n            transformString = (getCSSValue(document.body, t) ? t : `-webkit-${t}`);\n          }\n          instance.animatables[id].target.style[transformString] = transforms[id].join(' ');\n        }\n      }\n      instance.currentTime = insTime;\n      instance.progress = (insTime / instance.duration) * 100;\n    }\n\n    function setCallback(cb) {\n      if (instance[cb]) instance[cb](instance);\n    }\n\n    function countIteration() {\n      if (instance.remaining && instance.remaining !== true) {\n        instance.remaining--;\n      }\n    }\n\n    function setInstanceProgress(engineTime) {\n      const insDuration = instance.duration;\n      const insOffset = instance.offset;\n      const insStart = insOffset + instance.delay;\n      const insCurrentTime = instance.currentTime;\n      const insReversed = instance.reversed;\n      const insTime = adjustTime(engineTime);\n      if (instance.children.length) syncInstanceChildren(insTime);\n      if (insTime >= insStart || !insDuration) {\n        if (!instance.began) {\n          instance.began = true;\n          setCallback('begin');\n        }\n        setCallback('run');\n      }\n      if (insTime > insOffset && insTime < insDuration) {\n        setAnimationsProgress(insTime);\n      } else {\n        if (insTime <= insOffset && insCurrentTime !== 0) {\n          setAnimationsProgress(0);\n          if (insReversed) countIteration();\n        }\n        if ((insTime >= insDuration && insCurrentTime !== insDuration) || !insDuration) {\n          setAnimationsProgress(insDuration);\n          if (!insReversed) countIteration();\n        }\n      }\n      setCallback('update');\n      if (engineTime >= insDuration) {\n        if (instance.remaining) {\n          startTime = now;\n          if (instance.direction === 'alternate') toggleInstanceDirection();\n        } else {\n          instance.pause();\n          if (!instance.completed) {\n            instance.completed = true;\n            setCallback('complete');\n            if ('Promise' in window) {\n              resolve();\n              promise = makePromise();\n            }\n          }\n        }\n        lastTime = 0;\n      }\n    }\n\n    instance.reset = function() {\n      const direction = instance.direction;\n      const loops = instance.loop;\n      instance.currentTime = 0;\n      instance.progress = 0;\n      instance.paused = true;\n      instance.began = false;\n      instance.completed = false;\n      instance.reversed = direction === 'reverse';\n      instance.remaining = direction === 'alternate' && loops === 1 ? 2 : loops;\n      setAnimationsProgress(0);\n      for (let i = instance.children.length; i--; ){\n        instance.children[i].reset();\n      }\n    }\n\n    instance.tick = function(t) {\n      now = t;\n      if (!startTime) startTime = now;\n      const engineTime = (lastTime + now - startTime) * anime.speed;\n      setInstanceProgress(engineTime);\n    }\n\n    instance.seek = function(time) {\n      setInstanceProgress(adjustTime(time));\n    }\n\n    instance.pause = function() {\n      const i = activeInstances.indexOf(instance);\n      if (i > -1) activeInstances.splice(i, 1);\n      instance.paused = true;\n    }\n\n    instance.play = function() {\n      if (!instance.paused) return;\n      instance.paused = false;\n      startTime = 0;\n      lastTime = adjustTime(instance.currentTime);\n      activeInstances.push(instance);\n      if (!raf) engine();\n    }\n\n    instance.reverse = function() {\n      toggleInstanceDirection();\n      startTime = 0;\n      lastTime = adjustTime(instance.currentTime);\n    }\n\n    instance.restart = function() {\n      instance.pause();\n      instance.reset();\n      instance.play();\n    }\n\n    instance.finished = promise;\n\n    instance.reset();\n\n    if (instance.autoplay) instance.play();\n\n    return instance;\n\n  }\n\n  // Remove targets from animation\n\n  function removeTargets(targets) {\n    const targetsArray = parseTargets(targets);\n    for (let i = activeInstances.length; i--;) {\n      const instance = activeInstances[i];\n      const animations = instance.animations;\n      for (let a = animations.length; a--;) {\n        if (arrayContains(targetsArray, animations[a].animatable.target)) {\n          animations.splice(a, 1);\n          if (!animations.length) instance.pause();\n        }\n      }\n    }\n  }\n\n  // Timeline\n\n  function timeline(params) {\n    let tl = anime(params);\n    tl.pause();\n    tl.duration = 0;\n    tl.add = function(instancesParams) {\n      tl.children.forEach(i => { i.began = true; i.completed = true; });\n      toArray(instancesParams).forEach(instanceParams => {\n        let insParams = mergeObjects(instanceParams, replaceObjectProps(defaultTweenSettings, params || {}));\n        insParams.targets = insParams.targets || params.targets;\n        const tlDuration = tl.duration;\n        const insOffset = insParams.offset;\n        insParams.autoplay = false;\n        insParams.direction = tl.direction;\n        insParams.offset = is.und(insOffset) ? tlDuration : getRelativeValue(insOffset, tlDuration);\n        tl.began = true;\n        tl.completed = true;\n        tl.seek(insParams.offset);\n        const ins = anime(insParams);\n        ins.began = true;\n        ins.completed = true;\n        if (ins.duration > tlDuration) tl.duration = ins.duration;\n        tl.children.push(ins);\n      });\n      tl.seek(0);\n      tl.reset();\n      if (tl.autoplay) tl.restart();\n      return tl;\n    }\n    return tl;\n  }\n\n  anime.version = '2.2.0';\n  anime.speed = 1;\n  anime.running = activeInstances;\n  anime.remove = removeTargets;\n  anime.getValue = getOriginalTargetValue;\n  anime.path = getPath;\n  anime.setDashoffset = setDashoffset;\n  anime.bezier = bezier;\n  anime.easings = easings;\n  anime.timeline = timeline;\n  anime.random = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\n  return anime;\n\n}));\n","import { Platform } from '@ionic/angular';\nimport { Injectable } from '@angular/core';\nimport { DatabaseService } from './database.service';\nimport { FCM } from '@ionic-native/fcm/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagingService {\n\n  constructor(\n    private platform: Platform,\n    private database: DatabaseService,\n    private fcm: FCM  // Firebase Cloud Messaging\n  ) { }\n\n  public init(email: string) {\n\n    // Setup Firebase Cloud Messaging -- token handling,\n    // notifications in foreground/background.\n\n    if (this.platform.is('cordova')) {\n\n      console.log(`> FCM: Initializing cloud messaging services: ${email}`);\n      \n      this.fcm.getToken().then(token => {\n      \n        console.log(`> FCM: Token received: ${token}`);\n\n        const doc = {\n          token,\n          userId: email\n        };\n        \n        this.database.write('devices',email,doc);\n      });\n      \n      this.fcm.onTokenRefresh().subscribe(token => {\n        console.log(`> FCM: Token refreshed: ${token}`);\n        console.log(token);\n      });\n\n      this.fcm.onNotification().subscribe(data => {\n      \n        if (data.wasTapped) {\n          console.log(`> FCM: Received in background: ${data}`);\n//          this.router.navigate([data.landing_page, data.key3]);\n        } else {\n          console.log(`> FCM: Received token in foreground: ${data}`);\n//          this.router.navigate([data.landing_page, data.key3]);\n        }\n      });\n\n      console.log(`> FCM: initialization ok.`);\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}