{"version":3,"sources":["./src/app/pages/commander/commander.page.html","./src/app/pages/commander/commander.module.ts","./src/app/pages/commander/commander.page.scss","./src/app/pages/commander/commander.page.ts"],"names":[],"mappings":"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","file":"pages-commander-commander-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Commander</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button left routerLink=\\\"/\\\" routerDirection=\\\"root\\\" fill=\\\"clear\\\" slot=\\\"primary\\\">\\n        Logout<ion-icon name=\\\"log-out\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <!-- Notifications -->\\n  <ion-item class=\\\"headers\\\" text-center><ion-label style=\\\"margin-bottom: 0;\\\"><h1> Notifications </h1></ion-label></ion-item>\\n\\n  <ion-card *ngFor=\\\"let drive of getPendingDrives()\\\" padding>\\n\\n    <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\">\\n      <!--ion-fab-button size=\\\"small\\\" (click)=\\\"click(drive)\\\">View</ion-fab-button-->\\n      <ion-fab-button size=\\\"small\\\" (click)=\\\"click(drive)\\\"><ion-icon name='share-alt'></ion-icon></ion-fab-button>\\n      <!--ion-button fill=\\\"outline\\\" size=\\\"small\\\" (click)=\\\"click(drive)\\\">View</ion-button-->\\n    </ion-fab>\\n\\n    <ion-card-subtitle color='danger'><strong>Pending review</strong></ion-card-subtitle>\\n    <ion-card-title>{{drive.date}}</ion-card-title>\\n\\n    <ion-card-content no-padding>\\n      Your drive on <b>{{drive.date}}</b> with <b>{{drive.driver}}</b> from\\n      <b>{{drive.start_location}}</b> (<b>{{drive.start_time}}</b>) to \\n      <b>{{drive.end_location}}</b> (<b>{{drive.end_time}}</b>)\\n      is pending review.\\n    </ion-card-content>\\n\\n  </ion-card>\\n  <ion-card *ngFor=\\\"let form of getPendingMTRAC()\\\" padding>\\n    <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\">\\n      <!--ion-fab-button size=\\\"small\\\" (click)=\\\"click(drive)\\\">View</ion-fab-button-->\\n      <ion-fab-button size=\\\"small\\\" (click)=\\\"clickmtrac(form)\\\"><ion-icon name='share-alt'></ion-icon></ion-fab-button>\\n      <!--ion-button fill=\\\"outline\\\" size=\\\"small\\\" (click)=\\\"click(drive)\\\">View</ion-button-->\\n    </ion-fab>\\n    <ion-card-title>Complete MT-RAC</ion-card-title>\\n  </ion-card>\\n\\n\\n\\n  <ion-item class=\\\"headers\\\" text-center><ion-label style=\\\"margin-bottom: 0;\\\"><h1> Operators </h1></ion-label></ion-item>\\n\\n  <ion-card>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Driver</ion-label>\\n        <ion-select id=\\\"driverlist\\\" interface=\\\"popover\\\" class=\\\"full-width-select\\\" value=\\\"ALL\\\">\\n          <ion-select-option value=\\\"ALL\\\">ALL</ion-select-option>\\n          <ion-select-option text-wrap *ngFor=\\\"let driver of database.current.all_drivers_of_commander\\\" value={{driver.email}} class=\\\"custom-font-size\\\">{{driver.email}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n    </ion-list>\\n  </ion-card>\\n  <ion-card *ngFor=\\\"let driver of getDrivers()\\\">\\n    <ion-card-header>\\n      <ion-card-subtitle><ion-icon name=\\\"person\\\" text-center (click)=\\\"showother()\\\"></ion-icon> <strong> {{driver.name}} ({{driver.email}})</strong></ion-card-subtitle>\\n      <ion-card-subtitle (click)=\\\"showother()\\\">Last drive: {{driver.summary.most_recent_drive | date: \\\"dd/MM/yyyy hh:mm\\\"}}, {{driver.summary.most_recent_drive | daysAgo}} days ago</ion-card-subtitle>\\n      <ion-label position=\\\"stacked\\\" *ngIf=\\\"checkAll()==true\\\"><h2>Certifications</h2></ion-label>\\n      <ion-button *ngIf=\\\"checkAll()==false\\\" (click)=\\\"showEdit()\\\">Certifications <ion-icon name=\\\"settings\\\"></ion-icon></ion-button>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <ion-label color=\\\"success\\\"> OUV </ion-label>\\n          </ion-col>\\n          <ion-col offset-4>\\n            <ion-label color=\\\"success\\\"> 5TON </ion-label>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <ion-label *ngIf=\\\"driver.mss_certified == true\\\" color=\\\"success\\\" > MSS </ion-label>\\n          </ion-col>\\n          <ion-col offset-4 >\\n            <ion-label *ngIf=\\\"driver.flb_certified == true\\\" color=\\\"success\\\"> FLB </ion-label>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <ion-label *ngIf=\\\"driver.belrex_certified == true\\\" color=\\\"success\\\"> BELREX </ion-label>\\n          </ion-col>\\n          <ion-col offset-4>\\n            <ion-label>  </ion-label>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <ion-card *ngIf=\\\"checkEditDriverStatus()==true\\\">\\n        <ion-list>\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\">MSS</ion-label>\\n            <ion-select id=\\\"mss\\\" interface=\\\"popover\\\" value={{driver.mss_certified}}>\\n              <ion-select-option value=\\\"true\\\">Certified</ion-select-option>\\n              <ion-select-option value=\\\"false\\\">Not Certified</ion-select-option>\\n            </ion-select>\\n            <ion-label position=\\\"stacked\\\">FLB</ion-label>\\n            <ion-select id=\\\"flb\\\" interface=\\\"popover\\\" value={{driver.flb_certified}}>\\n              <ion-select-option value=\\\"true\\\">Certified</ion-select-option>\\n              <ion-select-option value=\\\"false\\\">Not Certified</ion-select-option>\\n            </ion-select>\\n            <ion-label position=\\\"stacked\\\">BELREX</ion-label>\\n            <ion-select id=\\\"belrex\\\" interface=\\\"popover\\\" value={{driver.belrex_certified}}>\\n              <ion-select-option value=\\\"true\\\">Certified</ion-select-option>\\n              <ion-select-option value=\\\"false\\\">Not Certified</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n        </ion-list>\\n        <ion-button (click)=\\\"updateCertfication(getDriver())\\\">save changes</ion-button>\\n      </ion-card>\\n    </ion-card-header>\\n\\n\\n\\n\\n    <ion-card-content>\\n      <ion-grid class=\\\"table\\\" no-padding>\\n\\n        <ion-row>\\n          <ion-col size=\\\"4\\\" class=\\\"bubble-text\\\" no-padding><ion-card no-padding (click)=\\\"showdrives()\\\">\\n            <div class=\\\"ion-text-center\\\" style=\\\"width: 100%;\\\">\\n              <ion-icon name=\\\"car\\\" size=\\\"large\\\" ></ion-icon><br>\\n              <div class=\\\"shift_up\\\">Drives</div>\\n              <div class=\\\"slide_num\\\">{{driver.summary.drive_count}}</div>\\n              <ion-label *ngIf=\\\"checkDriveStatus()\\\">\\n                <h6 *ngFor=\\\"let vehicle of driver.summary.most_recent_drive_by_vehicle_type | keyvalue\\\">\\n                  {{vehicle.key}} : {{getDrivesbyVehicleType(vehicle.key, driver)}}\\n                </h6>\\n              </ion-label>\\n            </div>\\n          </ion-card></ion-col>\\n\\n          <ion-col size=\\\"4\\\" class=\\\"bubble-text\\\" no-padding><ion-card no-padding (click)=\\\"showmileage()\\\">\\n            <div class=\\\"ion-text-center\\\" style=\\\"width: 100%;\\\">\\n              <ion-icon name=\\\"speedometer\\\" size=\\\"large\\\"></ion-icon><br>\\n              <div class=\\\"shift_up\\\">Mileage</div>\\n              <div class=\\\"slide_num\\\">{{driver.summary.mileage_km}} km</div>\\n              <ion-label *ngIf=\\\"checkMileageStatus()\\\">\\n                <h6 *ngFor=\\\"let vehicle of driver.summary.most_recent_drive_by_vehicle_type | keyvalue\\\">\\n                  {{vehicle.key}} : {{getMileagebyVehicleType(driver.summary.mileage_by_vehicle_type, vehicle.key)}}\\n                </h6>\\n              </ion-label>\\n            </div>\\n          </ion-card></ion-col>\\n\\n          <ion-col size=\\\"4\\\" class=\\\"bubble-text\\\" no-padding><ion-card no-padding>\\n            <div class=\\\"ion-text-center\\\" style=\\\"width: 100%;\\\" (click)=\\\"showother()\\\">\\n              <ion-icon name=\\\"clock\\\" size=\\\"large\\\"></ion-icon><br>\\n              <div class=\\\"shift_up\\\">Time Driven</div>\\n              <div class=\\\"slide_num\\\">{{driver.summary.duration_minutes / 60 | number : '1.0-1' }} hours</div>\\n            </div>\\n          </ion-card></ion-col>\\n\\n\\n          <ion-row text-center style=\\\"padding: 0 10px\\\" *ngIf=\\\"checkDriveStatus() || checkMileageStatus() || checkOtherStatus()\\\" (click)=\\\"showother()\\\">\\n            <ion-col>\\n              average drive distance: <br/> {{driver.summary.mileage_km / driver.summary.drive_count | number : '1.0-1'}} km\\n            </ion-col>\\n            <ion-col>\\n              average drive duration: <br/>{{driver.summary.duration_minutes / 60 / driver.summary.drive_count | number : '1.0-1'}} hours\\n            </ion-col>\\n          </ion-row>\\n\\n          <ion-row text-center (click)=\\\"showother()\\\">\\n            <ion-col text-center><ion-card text-center>\\n              <ion-card-title text-center>\\n                <strong>JIT Countdown</strong>\\n              </ion-card-title>\\n              <ion-card-subtitle><strong>\\n                <ion-label color='danger' text-center>\\n                  <h2 *ngIf=\\\"checkTimelefttoJIT(driver.summary.most_recent_drive) == false\\\" style=\\\"padding: 0 100px\\\" text-center>\\n                    JIT REQUIRED!\\n                  </h2>\\n                </ion-label>\\n                <ion-label>\\n                  <ion-item *ngIf=\\\"checkTimelefttoJIT(driver.summary.most_recent_drive) == true\\\" style=\\\"padding: 0 55px\\\" text-center>\\n                    <countdown [config]=\\\"{leftTime: getTimelefttoJIT(driver.summary.most_recent_drive), format: 'dd'}\\\"></countdown>\\n                    <h6 style=\\\"padding-bottom: 5px\\\">days&ensp;</h6>\\n                    <countdown [config]=\\\"{leftTime: getTimelefttoJIT(driver.summary.most_recent_drive), format: 'HH'}\\\"></countdown>\\n                    <h6 style=\\\"padding-bottom: 5px\\\">hrs&ensp;</h6>\\n                    <countdown [config]=\\\"{leftTime: getTimelefttoJIT(driver.summary.most_recent_drive), format: 'mm'}\\\"></countdown>\\n                    <h6 style=\\\"padding-bottom: 5px\\\">mins&ensp;</h6>\\n                    <countdown [config]=\\\"{leftTime: getTimelefttoJIT(driver.summary.most_recent_drive), format: 'ss'}\\\"></countdown>\\n                    <h6 style=\\\"padding-bottom: 5px\\\">sec&ensp;</h6>\\n                  </ion-item>\\n                </ion-label>\\n              </strong></ion-card-subtitle>\\n            </ion-card></ion-col>\\n          </ion-row>\\n        </ion-row>\\n      </ion-grid>\\n      <!--<ion-grid  class=\\\"ion-no-padding\\\">\\n        <ion-row text-center>\\n          <ion-col text-center><ion-icon name=\\\"car\\\"></ion-icon> <br> Total Drives: <br> {{driver.summary.drive_count}}</ion-col>\\n          <ion-col text-center><ion-icon name=\\\"speedometer\\\"></ion-icon> <br> Total Mileage:<br> {{driver.summary.mileage_km}} KM</ion-col>\\n          <ion-col text-center><ion-icon name=\\\"clock\\\"></ion-icon> <br> Time Driven: <br> {{driver.summary.duration_minutes / 60 | number : '1.0-1' }} hours</ion-col>\\n        </ion-row>\\n\\n      </ion-grid>-->\\n\\n      <ion-item *ngFor=\\\"let vehicle of driver.summary.most_recent_drive_by_vehicle_type | keyvalue\\\" (click)=\\\"showother()\\\">\\n\\n\\n          <ion-col *ngIf=\\\"checkOtherStatus()\\\" (click)=\\\"showother()\\\">\\n            <ion-label *ngIf=\\\"checkOtherStatus()\\\">\\n              <h3 class=\\\"underline\\\" *ngIf=\\\"checkOperatorCurrencyValid(vehicle.key,driver.summary.most_recent_drive_by_vehicle_type[vehicle.key])\\\">{{vehicle.key}}</h3>\\n            </ion-label >\\n            <ion-label  color='danger' *ngIf=\\\"checkOtherStatus()\\\">\\n               <h3 class=\\\"underline\\\" *ngIf=\\\"checkOperatorCurrencyInvalid(vehicle.key,driver.summary.most_recent_drive_by_vehicle_type[vehicle.key])\\\">{{vehicle.key}}</h3>\\n            </ion-label>\\n          \\n           Last Drive: {{driver.summary.most_recent_drive_by_vehicle_type[vehicle.key] | date: \\\"dd/MM/yyyy\\\"}}\\n           ({{driver.summary.most_recent_drive_by_vehicle_type[vehicle.key] | daysAgo}} days ago)</ion-col>\\n      </ion-item>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CommanderPage } from './commander.page';\nimport { DriveViewModule } from '../../drive-view/drive-view.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { CountdownModule } from 'ngx-countdown';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CommanderPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CountdownModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    DriveViewModule,\n    PipesModule,\n  ],\n  declarations: [CommanderPage]\n})\nexport class CommanderPageModule {}\n","export default \".div {\\n  text-align: center;\\n  border: 6px solid black;\\n}\\n\\n.vertical-align-content > * {\\n  display: -webkit-box !important;\\n  display: flex !important;\\n  align-content: center !important;\\n  -webkit-box-align: center !important;\\n          align-items: center !important;\\n}\\n\\n.full-width-select {\\n  width: 100%;\\n  max-width: 100%;\\n}\\n\\n.custom-font-size {\\n  font-size: 0.8em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95YXNoZGl4aXQvRG93bmxvYWRzL0VuZ2luZWVyc0xvZ2Jvb2syL3NyYy9hcHAvcGFnZXMvY29tbWFuZGVyL2NvbW1hbmRlci5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2NvbW1hbmRlci9jb21tYW5kZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7RUFDQSx1QkFBQTtBQ0NKOztBRENBO0VBRUssK0JBQUE7RUFBQSx3QkFBQTtFQUNBLGdDQUFBO0VBQ0Esb0NBQUE7VUFBQSw4QkFBQTtBQ0NMOztBREVBO0VBQ0UsV0FBQTtFQUNBLGVBQUE7QUNDRjs7QURDQTtFQUNJLGdCQUFBO0FDRUoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9jb21tYW5kZXIvY29tbWFuZGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kaXZ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlcjogNnB4IHNvbGlkIGJsYWNrO1xufVxuLnZlcnRpY2FsLWFsaWduLWNvbnRlbnQgPiAqXG57XG4gICAgIGRpc3BsYXk6IGZsZXghaW1wb3J0YW50O1xuICAgICBhbGlnbi1jb250ZW50OiBjZW50ZXIhaW1wb3J0YW50O1xuICAgICBhbGlnbi1pdGVtczogY2VudGVyIWltcG9ydGFudDtcbn1cblxuLmZ1bGwtd2lkdGgtc2VsZWN0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbi5jdXN0b20tZm9udC1zaXplIHtcbiAgICBmb250LXNpemU6IDAuOGVtO1xufSIsIi5kaXYge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJvcmRlcjogNnB4IHNvbGlkIGJsYWNrO1xufVxuXG4udmVydGljYWwtYWxpZ24tY29udGVudCA+ICoge1xuICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50O1xuICBhbGlnbi1pdGVtczogY2VudGVyICFpbXBvcnRhbnQ7XG59XG5cbi5mdWxsLXdpZHRoLXNlbGVjdCB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbi5jdXN0b20tZm9udC1zaXplIHtcbiAgZm9udC1zaXplOiAwLjhlbTtcbn0iXX0= */\"","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { Platform } from '@ionic/angular';\nimport { DatabaseService, User, Drive, VehicleTypes, Mtrac } from '../../services/database.service';\nimport { Chart } from \"chart.js\";\nimport { PipesModule } from '../../pipes/pipes.module';\nimport * as dayjs from 'dayjs';\nimport { ToastController } from '@ionic/angular';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\n\n\n@Component({\n  selector: 'app-commander',\n  templateUrl: './commander.page.html',\n  styleUrls: ['./commander.page.scss'],\n})\n\nexport class CommanderPage implements OnInit {\n\n  constructor(\n    private navCtrl: NavController,\n    public database: DatabaseService,\n    private platform: Platform,\n    private geolocation: Geolocation,\n    public toastController: ToastController, ) { }\n\n  drivestatus = 9 > 10;\n  mileagestatus = 9 > 10;\n  otherstatus = 9 > 10;\n  drivereditstatus = 9 > 10;\n  successMessage = '';\n  errorMessage = '';\n\n  ngOnInit() {\n  }\n\n  public editDriver(driver: string) : User[] {\n    var drivr = this.database.current.all_drivers_of_commander;\n    drivr = drivr.filter( (drvr) => drvr.email == driver);\n    this.drivereditstatus = !this.drivereditstatus;\n    return drivr;\n  }\n\n  public showEdit() {\n    return this.drivereditstatus = !this.drivereditstatus;\n  }\n\n  public getDrvr(driver: string) : User[] {\n    var drivr = this.database.current.all_drivers_of_commander;\n    return drivr.filter( (drvr) => drvr.email == driver);\n  }\n\n  public getDrivers() : User[] {\n    var drivers = this.database.current.all_drivers_of_commander;\n    var drvrs = (<HTMLInputElement>document.getElementById(\"driverlist\")).value;\n    if (drvrs != \"ALL\") {\n      return drivers.filter( (driver) => driver.email == drvrs);\n    }\n    return drivers\n  }\n\n  public getDriver() : User {\n    var driver = this.database.current.all_drivers_of_commander;\n    var drvrs = (<HTMLInputElement>document.getElementById(\"driverlist\")).value;\n    return driver.filter( (driver) => driver.email == drvrs)[0];\n  }\n\n  async updateCertfication(driver: any) {\n    //console.log(driver);\n    var mssc = (<HTMLInputElement>document.getElementById(\"mss\")).value.toLowerCase() === 'true';\n    var flbc = (<HTMLInputElement>document.getElementById(\"flb\")).value.toLowerCase() === 'true';\n    var belrexc = (<HTMLInputElement>document.getElementById(\"belrex\")).value.toLowerCase() === 'true';\n    driver.mss_certified = mssc;\n    driver.flb_certified = flbc;\n    driver.belrex_certified = belrexc;\n    try {\n      await this.database.write('user',driver.email,driver);\n      this.drivereditstatus = !this.drivereditstatus;\n      this.successMessage = 'the driver account has been updated.';\n      this.showToast(this.successMessage);\n    } catch(err) {\n        console.log(err);\n        this.errorMessage = err.message;\n        this.successMessage = '';\n    }\n  }\n\n  public checkAll() {\n    var drivers = (<HTMLInputElement>document.getElementById(\"driverlist\")).value;\n    return drivers == \"ALL\";\n  }\n\n\n  showToast(msg) {\n    this.toastController.create({\n      message: msg,\n      duration: 2000,\n      showCloseButton: true,\n      closeButtonText: 'OK',\n      position: 'middle'\n    }).then((obj) => {\n      obj.present();\n    });\n  }\n\n  public checkEditDriverStatus() {\n    return this.drivereditstatus;\n  }\n  \n  public checkOperatorCurrencyValid(vehicletype:string, date:any){\n    const today = dayjs();\n    var period =  8;\n    return today.diff(date,\"day\") < period ;\n  }\n\n  public checkOperatorCurrencyInvalid(vehicletype:string, date:any){\n    const today = dayjs();\n    var period = 8;\n    return today.diff(date,\"day\") > period ;\n  }\n\n  public showdrives(){\n    this.drivestatus = !this.drivestatus;\n  }\n\n  public checkDriveStatus(){\n    return this.drivestatus;\n  }\n\n  public showmileage(){\n    this.mileagestatus = !this.mileagestatus;\n  }\n\n  public checkMileageStatus(){\n    return this.mileagestatus;\n  }\n\n  public showother(){\n    this.otherstatus = !this.otherstatus;\n  }\n\n  public checkOtherStatus(){\n    return this.otherstatus;\n  }\n\n  public getMileagebyVehicleType(data: any,vehicle: any) {\n    for (var type of VehicleTypes) {\n      if (type == vehicle) {\n        if (data[type] != null) {\n          return data[type] + \" km\";\n        }\n      }\n    }\n  }\n\n  public getDrivesbyVehicleType(vehicle: any, drvr: any) {\n    for (var type of VehicleTypes) {\n      var drv = 0\n      if (type == vehicle){\n        var dhis = this.database.current.drive_history.filter( (drive) => { return drive.driver === drvr.email });\n        for (let trip of dhis) {\n          if (trip.vehicle_type == vehicle) {\n            drv += 1;\n          }\n        }\n      return drv;\n      }\n    }\n  }\n\n  public getPendingDrives() : Drive[] {\n    return this.database.current.drive_history.filter( (drive) => { if (this.database.current.user.email === drive.commander) {\n      return drive.status === 'pending';}\n    });\n  }\n\n  public getPendingMTRAC() : Mtrac[] {\n    return this.database.current.mtrac_history.filter( (form) => { if (this.database.current.user.email === form.commander) {\n      return form.status === 'pending';}\n    });\n  }\n\n  public getApprovedDrives() : Drive[] {\n    return this.database.current.drive_history.filter( (drive) => {\n      return drive.status === 'verified';\n    });\n  }\n\n  public checkTimelefttoJIT(date: any) {\n    const today = dayjs();\n    var period = 8;\n    var left = period - today.diff(date,\"day\");\n    if (left < 0){\n      return false };\n    return true;\n  }\n\n  public getTimelefttoJIT(date:any ) {\n    const today = dayjs();\n    var period = 7*24*60*60;\n    var left = period - today.diff(date,\"s\");\n    return left;\n  }\n\n  public click(drive: Drive): void {\n    this.database.current.drive_to_edit = drive;\n    console.log(`> Navigating to AddDrivePage for drive id=${drive.id}`);\n    this.navCtrl.navigateForward(['/add-drive']);\n  }\n\n public clickmtrac(form: Mtrac): void {\n    this.database.current.mtrac_to_edit = form;\n    console.log(`> Navigating to mtracPage for mtrac id=${form.id}`);\n    this.navCtrl.navigateForward(['/mtrac']);\n  }\n\n/*//  public click1(driver: User): void {\n    for (let user of this.database.current.all_drivers_of_commander) {\n      driver = user\n      console.log(`> Navigating to History for email=${driver.email}`)\n      this.navCtrl.navigateForward(['/history'])\n    };\n  }*/\n\n}\n"],"sourceRoot":"webpack:///"}