{"version":3,"sources":["src/app/mtrac/mtrac.page.html","src/app/mtrac/mtrac.module.ts","src/app/mtrac/mtrac.page.scss","src/app/mtrac/mtrac.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header translucent>\\n  <ion-toolbar>\\n    <div>\\n      <h1 style=\\\"margin-left: 10px;\\\"><strong>MT RISK ASSESSMENT CHECKLIST (MT-RAC)</strong></h1>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div>\\n    <h5 style=\\\"text-align:right; margin-right: 10px;\\\"><strong><u>SAF 1200</u></strong></h5>\\n    <h5 style=\\\"text-align:center;\\\"><strong><u>MT RISK ASSESSMENT CHECKLIST (MT-RAC)</u></strong></h5>\\n    <h6 style=\\\"margin-left: 10px;\\\"><strong><u>ABOUT THE MT RAC FORM</u></strong><br></h6>\\n    <h6 style=\\\"margin-left: 10px;\\\">It enables the drivers / riders to assess the risk level involved in their driving / riding detail. It allows the drivers / riders to make an informed decision as to whether to carry on with the detail.</h6>\\n  </div>\\n    <ion-item lines=\\\"none\\\" no-padding>\\n    <ion-grid style=\\\"margin-left: 5px;\\\">\\n      <ion-row class=\\\"cell-class\\\">\\n        <ion-col size=\\\"2\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>FACTORS</strong></h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>MEANING</strong></h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row align-items-center class=\\\"cell-class\\\">\\n        <ion-col size=\\\"2\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\">MAN</h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px\\\">\\n          <div>\\n            <h6 style=\\\"text-align:left\\\">This refers to the driver / rider and in particular his driving / riding experience and accident record.<br>How well he has rested before the detail is also important.</h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row align-items-center class=\\\"cell-class\\\">\\n        <ion-col size=\\\"2\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\">MACHINE</h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px\\\">\\n          <div>\\n            <h6 style=\\\"text-align:left\\\">This refers to the condition of the vehicle / motorcycle, which they are handling on the road.<br>A faulty vehicle / motorcycle will heighten the risk level.</h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row align-items-center class=\\\"cell-class\\\">\\n        <ion-col size=\\\"2\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\">MISSION</h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px\\\">\\n          <div>\\n            <h6 style=\\\"text-align:left\\\">This type of transport detail will have an effect on the risk level.<br>An administrative detail will have less risk than a training detail, which requires them to drive / ride in difficult cross-country terrain.</h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row align-items-center class=\\\"cell-class\\\">\\n        <ion-col size=\\\"2\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\">MEDIUM</h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px\\\">\\n          <div>\\n            <h6 style=\\\"text-align:left\\\">This refers mainly to the road conditions under which the driver / rider operates.<br>Their prevailing conditions will have a direct effect on the driver / rider.</h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row align-items-center class=\\\"cell-class\\\">\\n        <ion-col size=\\\"2\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\">MANAGEMENT</h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px\\\">\\n          <div>\\n            <h6 style=\\\"text-align:left\\\">Close supervision of the driver / rider will contribute to risk minimisation.<br>Assignment of Vehicle Commander of a high rank will have a psychological effect on the driver to do better.</h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-item>\\n\\n  <ion-item lines=\\\"none\\\" no-padding>\\n    <ion-grid style=\\\"margin-left: 5px;\\\">\\n      <ion-row>\\n        <ion-col class=\\\"cell-class\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>RISK LEVEL</strong></h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row align-items-center class=\\\"cell-class\\\">\\n        <ion-col>\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>LOW RISK</strong></h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>MEDIUM RISK</strong></h6>\\n          </div>\\n        </ion-col>\\n        <ion-col>\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>HIGH RISK</strong></h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row align-items-center class=\\\"cell-class\\\">\\n        <ion-col>\\n          <div>\\n            <h6 style=\\\"text-align:center\\\">Normal operational risk.</h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\">Above normal operational risk level.<br>Increase supervision, briefing and exercise caution, Mission may be suspended till conditions are better.</h6>\\n          </div>\\n        </ion-col>\\n        <ion-col>\\n          <div>\\n            <h6 style=\\\"text-align:center\\\">Do not proceed with mission unless approved by higher authorities.<br><strong>All high risk factors must be mitigated.</strong></h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-item>\\n\\n  <ion-item lines=\\\"none\\\" no-padding>\\n    <ion-grid style=\\\"margin-left: 5px;\\\">\\n      <ion-row class=\\\"cell-class\\\">\\n        <ion-col>\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>List of Common Vehicle Defects</strong></h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row class=\\\"cell-class\\\">\\n        <ion-col class=\\\"cell-class\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>Major Defects</strong></h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>Minor Defects</strong></h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row class=\\\"cell-class\\\">\\n        <ion-col class=\\\"cell-class\\\">\\n          <div>\\n            <h6 style=\\\"text-align:left\\\">- Emitting black or white smoke<br>\\n              - Exhaust silencer leaking<br>\\n              - Speedometer not working<br>\\n              - Horn not working<br>\\n              - Signal Indicator not working<br>\\n              - Brake light not working<br>\\n              - Headlights not working<br>\\n              - Tail lights not working<br>\\n              - No Mirrors / <strong>Loose mirror</strong> / <strong>Blurred mirror</strong><br>\\n              - Windscreen shattered / crack<br>\\n              - Wiper not working<br>\\n              - Unusual noise or vibration from engine<br>\\n              - Brakes not effective<br>\\n              - Engine oil level below the minimum level, exceed maximum level<br>\\n              - Bald tyre<br>\\n              - Door not closing properly<br>\\n              - Radiator water leaking<br>\\n              - Speed Warning Device not working<br>\\n              - Unserviceable Front/Rear (Safety Belt)<br>\\n              - Unserviceable Safety strap<br>\\n              - Pintle securing pin missing (Not fit for towing)</h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\">\\n          <div>\\n            <h6 style=\\\"text-align:left\\\">- Weak batteries<br>\\n              - Battery water too low<br>\\n              - Temperature gauge and other panel gauges not working<br>\\n              - Incorrect tyre pressure<br>\\n              - Vehicle body dented<br>\\n              - Superstructure damaged or broken<br>\\n              - Canopy torn<br>\\n              - Tailboard strap missing<br>\\n              - No self-centering (Steering system)<br>\\n              - Steering free-play too much<br>\\n              - Fan belt worn or slacked<br>\\n              - Weak suspension coil spring<br>\\n              - Towing pin missing (Not fit for towing)<br>\\n              - Pintle securing pin missing (Not fit for towing) to major fault</h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-item>\\n  <div>\\n    <h6 style=\\\"margin-left: 10px;\\\"><strong><u>Briefing and ensuring notes for TO/ DV/ LOA Drivers</u></strong><br></h6>\\n\\n    <h6 style=\\\"margin-left: 10px;\\\"><ol type=\\\"a\\\">\\n      <li>Check and ensure seating capacity, if exceeds (Please do not proceed on with the detail)</li>\\n      <li>Brief troops to engage seat belt throughout the journey</li>\\n      <li>Assist the troops in engaging the safety straps. Safety straps are to be engaged throughout the journey.</li>\\n      <li>Brief \\\"no smoking / sleeping on vehicle\\\" throughout the journey</li>\\n      <li>Nobody is to move while the vehicle is on the move</li>\\n      <li>No sitting on the tailboard at all times</li>\\n    </ol></h6>\\n\\n    <h6 style=\\\"margin-left: 10px;\\\"><strong>* For any matters please seek vehicle commander's assistance</strong><br></h6>\\n  </div>\\n  <div>\\n    <h5 style=\\\"text-align:right; margin-right: 10px;\\\"><strong><u>SAF 1200</u></strong></h5>\\n    <h5 style=\\\"text-align:center;\\\"><strong><u>MT RISK ASSESSMENT CHECKLIST (MT-RAC)</u></strong></h5>\\n    <ion-grid style=\\\"margin-left: 5px;\\\"><ion-row class=\\\"cell-class\\\">\\n      <h6 style=\\\"margin-left: 10px;\\\">The MT-RAC form is an assessment of the 5-M Risk Factors and identified high risk factors are to be mitigated. All SAF Drivers are to fill up the MT-RAC form, and completed forms are to be kept by the MT Node for 3 working days or in the event of an accident, until the investigation is completed. A MT-RAC form is to be completed for every transport detail, or when there is a change in the conditions or nature of detail. For exercises/training, a MT-RAC is prepared at the start of each exercise, and updated  if there is a change in conditions.</h6>\\n    </ion-row></ion-grid></div>\\n\\n  <form class=\\\"form\\\" [formGroup]=\\\"mtracForm\\\" (submit)=\\\"addmtrac(mtracForm.value)\\\">\\n  <ion-card><ion-card-content>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label  position=\\\"floating\\\">driving area</ion-label>\\n      <ion-select [ngStyle]=\\\"{'color': 'black'}\\\" formControlName=\\\"incamp\\\" interface=\\\"popover\\\" value=true>\\n        <ion-select-option [ngStyle]=\\\"{'color': 'black'}\\\" text-wrap value=true>In Camp</ion-select-option>\\n        <ion-select-option [ngStyle]=\\\"{'color': 'black'}\\\" text-wrap value=false *ngIf=\\\"gettime()\\\">Out of Camp</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label  position=\\\"floating\\\" >From</ion-label>\\n      <ion-input [ngStyle]=\\\"{'color': 'black'}\\\" type=\\\"text\\\" onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"startLocation\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label  position=\\\"floating\\\">To</ion-label>\\n      <ion-input [ngStyle]=\\\"{'color': 'black'}\\\" type=\\\"text\\\" onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"endLocation\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-col><ion-item>\\n        <ion-label  position=\\\"floating\\\" >Vehicle Number</ion-label>\\n        <ion-input [ngStyle]=\\\"{'color': 'black'}\\\" onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"vehicleNumber\\\"></ion-input>\\n      </ion-item>\\n      <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.vehicleNumber\\\">\\n          <div class=\\\"error-message\\\" *ngIf=\\\"mtracForm.get('vehicleNumber').hasError(validation.type) && (mtracForm.get('vehicleNumber').dirty || mtracForm.get('vehicleNumber').touched)\\\">\\n            {{ validation.message }}\\n          </div>\\n        </ng-container>\\n      </div>\\n      </ion-col></ion-item>\\n  </ion-card-content></ion-card>\\n\\n  <ion-card>\\n    <ion-card-title text-center>MAN FACTORS</ion-card-title>\\n    <ion-card-content>\\n\\n      <ion-col><ion-item>\\n        <ion-label ><strong>Driving Experience</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\"  formControlName=\\\"licenseType\\\" interface=\\\"popover\\\" text-left>\\n          <ion-select-option text-wrap value=\\\"L\\\">CAT A, B</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"M\\\">CAT C</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"H\\\">CAT D</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"N\\\">Have never been trained and familiarized in the vehicle that you will be driving</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.licenseType\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('licenseType').hasError(validation.type) && (mtracForm.get('licenseType').dirty || mtracForm.get('licenseType').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n      <ion-col><ion-item>\\n        <ion-label ><strong>Vehicle Type</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\"  formControlName=\\\"vehicleType\\\" interface=\\\"popover\\\" text-wrap>\\n          <ion-select-option text-wrap value=\\\"L\\\">Same as last detail / Different (GP Car/Pickup)</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"M\\\">Different (MUV/OUV/JEEP)</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"H\\\">Different (Coach/3Ton/5Ton/7Ton)</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.vehicleType\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('vehicleType').hasError(validation.type) && (mtracForm.get('vehicleType').dirty || mtracForm.get('vehicleType').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n      <ion-col><ion-item>\\n        <ion-label ><strong>Fatigue/Length of Rest</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\" formControlName=\\\"rest\\\" interface=\\\"popover\\\" text-wrap>\\n          <ion-select-option text-wrap value=\\\"L\\\">More than 6 hours</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"M\\\">Less than 6 hours (Home/Camp)</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"H\\\">Less than 6 hours (Field)</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.rest\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('rest').hasError(validation.type) && (mtracForm.get('rest').dirty || mtracForm.get('rest').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n      <ion-col><ion-item>\\n        <ion-label ><strong>My Health</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\" formControlName=\\\"health\\\" interface=\\\"popover\\\" text-wrap>\\n          <ion-select-option text-wrap value=\\\"L\\\">Good</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"M\\\">Fair (Just recovered from illness < 1 day)</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"N\\\">Poor (Still ill or Attend C) / Still under medication that causes drowsiness</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.health\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('health').hasError(validation.type) && (mtracForm.get('health').dirty || mtracForm.get('health').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n    </ion-card-content></ion-card>\\n\\n  <ion-card>\\n    <ion-card-title text-center>MEDIUM FACTORS</ion-card-title>\\n    <ion-card-content>\\n      <ion-col><ion-item>\\n        <ion-label ><strong>Weather</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\" formControlName=\\\"weather\\\" interface=\\\"popover\\\" text-wrap>\\n          <ion-select-option text-wrap value=\\\"L\\\">Dry</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"M\\\">Wet</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"H\\\">Heavy showers</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.weather\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('weather').hasError(validation.type) && (mtracForm.get('weather').dirty || mtracForm.get('weather').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n      <ion-col><ion-item>\\n        <ion-label ><strong>Route Familiarity</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\" formControlName=\\\"route\\\" interface=\\\"popover\\\" text-wrap>\\n          <ion-select-option text-wrap value=\\\"L\\\">Familiar</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"H\\\">Not Familiar</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.route\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('route').hasError(validation.type) && (mtracForm.get('route').dirty || mtracForm.get('route').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n    </ion-card-content></ion-card>\\n\\n  <ion-card>\\n    <ion-card-title text-center>MISSION FACTORS</ion-card-title>\\n    <ion-card-content>\\n      <ion-col><ion-item>\\n        <ion-label ><strong>Detail Type</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\" formControlName=\\\"detailType\\\" interface=\\\"popover\\\" text-wrap>\\n          <ion-select-option text-wrap value=\\\"L\\\">Admin</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"M\\\">Training/Special mission oriented towing vehicle/gun</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"H\\\">Occasional towing trailer/vehicle/gun</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.detailType\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('detailType').hasError(validation.type) && (mtracForm.get('detailType').dirty || mtracForm.get('detailType').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n    </ion-card-content></ion-card>\\n\\n  <ion-card>\\n    <ion-card-title text-center>MANAGEMENT FACTORS</ion-card-title>\\n    <ion-card-content>\\n      <ion-col><ion-item>\\n        <ion-label ><strong>Without Vehicle Commander</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\" formControlName=\\\"vc\\\" interface=\\\"popover\\\" text-wrap>\\n          <ion-select-option text-wrap value=\\\"L\\\">CAT A, B</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"M\\\">CAT C</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"N\\\">CAT D</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.vc\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('vc').hasError(validation.type) && (mtracForm.get('vc').dirty || mtracForm.get('vc').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n    </ion-card-content></ion-card>\\n\\n  <ion-card>\\n    <ion-card-title text-center>MACHINE FACTORS</ion-card-title>\\n    <ion-card-content>\\n      <ion-col><ion-item>\\n        <ion-label ><strong>Vehicle Serviceability</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\" formControlName=\\\"vehicleServiceability\\\" interface=\\\"popover\\\" text-wrap>\\n          <ion-select-option text-wrap value=\\\"L\\\">No fault</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"H\\\">Minor fault</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"N\\\">Major fault</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.vehicleServiceability\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('vehicleServiceability').hasError(validation.type) && (mtracForm.get('vehicleServiceability').dirty || mtracForm.get('vehicleServiceability').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n    </ion-card-content></ion-card>\\n\\n    <ion-card>\\n      <ion-card-title text-center>OVERALL RISK LEVEL</ion-card-title>\\n      <ion-card-content>\\n        <ion-item *ngIf=\\\"!getoverallrisk()\\\" color=\\\"danger\\\" text-center>\\n          <ion-label >\\n            NO MOVE\\n          </ion-label>\\n        </ion-item>\\n        <ion-item *ngIf=\\\"getoverallrisk()=='HIGH'\\\" color=\\\"danger\\\" text-center>\\n          <ion-label >\\n            {{getoverallrisk()}}\\n          </ion-label>\\n        </ion-item>\\n        <ion-item *ngIf=\\\"getoverallrisk()=='MEDIUM'\\\" color=\\\"warning\\\" text-center>\\n          <ion-label >\\n            {{getoverallrisk()}}\\n          </ion-label>\\n        </ion-item>\\n        <ion-item  *ngIf=\\\"getoverallrisk()=='LOW'\\\" color=\\\"success\\\" text-center>\\n          <ion-label>\\n            {{getoverallrisk()}}\\n          </ion-label>\\n        </ion-item>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <div>\\n      <h6 style=\\\"text-align:center;\\\"><strong>SAF DRIVERS<sup>1</sup> AND VEHICLE COMMANDERS ARE RESPONSIBLE FOR THE TROOPS AND CARGO TRANSPORTED. THEY ARE TO PERFORM THE FOLLOWING ACTIONS AND BRIEFING. (PLEASE TICK ACCORDINGLY ON THE CHECKLIST)</strong></h6>\\n    </div>\\n\\n    <ion-item lines=\\\"none\\\" no-padding style=\\\"ion-item-background: white\\\">\\n      <ion-grid style=\\\"margin-left: 5px;\\\">\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\"><strong>Description</strong></h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px; text-align:center;\\\">\\n            <div>\\n              <h6 style=\\\"text-align:center\\\"><strong>Driver</strong></h6>\\n            </div>\\n          </ion-col>\\n          <ion-col>\\n            <div>\\n              <h6 style=\\\"text-align:center\\\"><strong>Veh Com</strong></h6>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Ensure that the driver is licensed to operate the vehicle</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"invalid-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"invalid-div\\\">\\n              <h5 style=\\\"text-align:center\\\"><strong>-</strong></h5>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"license\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Ensure that driver does not exceed the vehicle or road speed limit</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"invalid-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"invalid-div\\\">\\n              <h5 style=\\\"text-align:center\\\"><strong>-</strong></h5>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"speedlimit\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Warn the driver of any obstacles, hazards or dangers</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"invalid-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"invalid-div\\\">\\n              <h5 style=\\\"text-align:center\\\"><strong>-</strong></h5>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"danger\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Warn the driver during reversing or movement towards congested or narrow spaces</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"invalid-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"invalid-div\\\">\\n              <h5 style=\\\"text-align:center\\\"><strong>-</strong></h5>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"reverse\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Brief and ensure troops secure their seat belts before movement of vehicle</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"seatbeltdriver\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"seatbeltcommander\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Check and ensure seating or loading capacity of the vehicle is not exceeded</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"seatingdriver\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"seatingcommander\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Check and ensure safety straps in place and tailboard of vehicle is closed</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"safetystrapdriver\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"safetystrapcommander\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Brief troops on no smoking/sleeping on the vehicle before movement of vehicle</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"smokingdriver\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"smokingcommander\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Secure load before movement</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"loaddriver\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"loadcommander\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Brief and ensure troops secure their seat belts before movement of vehicle</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"seatbelttroopsdriver\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"seatbelttroopscommander\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">If vehicle involved in an accident to contact parent unit, POLICE and SAF PROVOST UNIT to inform about accident</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"accidentdriver\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"accidentcommander\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Ensure that MT RAC form is completed and duly counter-signed</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"mtraccompletedriver\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"mtraccompletecommander\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Ensure that driver has completed the checks listed above</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"invalid-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"invalid-div\\\">\\n              <h5 style=\\\"text-align:center\\\"><strong>-</strong></h5>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"checklistcomplete\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n\\n<!--\\n\\n    <div class=\\\"btn-wrapper\\\">\\n      <div *ngIf = showSubmit()>\\n        <ion-button class=\\\"submit-btn\\\" type=\\\"submit\\\" routerLink=\\\"/add-drive\\\" [disabled]=\\\"!mtracForm.valid\\\" style=\\\"padding-right:10px\\\">Submit\\n        </ion-button>\\n        <ion-button (click)='onCancel()'>Cancel</ion-button>\\n      </div>\\n      <div *ngIf = !showSubmit()>\\n        <ion-button expand=\\\"block\\\" (click)='onCancel()'>OK</ion-button>\\n      </div>\\n    </div>\\n\\n-->\\n  </form>\\n  <ion-item>\\n    <ion-label text-wrap>I acknowledge that I, {{this.database.current.user.name}}, have read through, understood, and checked through the MT Risk Assessment (MT-RAC) Checklist on {{getcdt()}}.</ion-label>\\n    <ion-checkbox slot=\\\"start\\\" name=\\\"mtrac\\\" (ionChange)=\\\"setcheckboxstatus()\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n  </ion-item>\\n  <div class=\\\"btn-wrapper\\\">\\n    <div *ngIf=getcheckboxstatus()>\\n      <ion-button style=\\\"padding-right:10px\\\" routerLink=\\\"/add-drive\\\" [disabled]=\\\"!mtracForm.valid || getoverallrisk()==false\\\">Continue</ion-button>\\n      <ion-button (click)='onCancel()' routerLink=\\\"/tabs/summary\\\" >Cancel</ion-button>\\n    </div>\\n    <div *ngIf = !getcheckboxstatus()>\\n      <ion-button expand=\\\"block\\\" (click)='onCancel()' routerLink=\\\"/tabs/summary\\\" >Cancel</ion-button>\\n    </div>\\n  </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { mtracPage } from './mtrac.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: mtracPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [mtracPage]\n})\nexport class mtracPageModule {}\n","export default \"* {\\n  --ion-text-color: black;\\n}\\n\\nion-toolbar {\\n  --background:#FFFF66;\\n}\\n\\nion-content {\\n  --ion-background-color:#FFFF66;\\n  --color:black;\\n  --ion-text-color: black;\\n}\\n\\nion-card {\\n  --background:#FFFF66;\\n}\\n\\nion-item {\\n  --background:#FFFF66;\\n  height: auto;\\n  min-height: auto;\\n}\\n\\nion-grid {\\n  --background:#FFFF66;\\n}\\n\\nion-input {\\n  text-transform: uppercase;\\n  color: primary !important;\\n}\\n\\nion-card-title {\\n  --color:black;\\n}\\n\\nion-select {\\n  --placeholder-color:black;\\n  --color:black;\\n  --padding-start: 0px;\\n  --inner-padding-end: 0px;\\n  min-width: auto;\\n  max-width: 70%;\\n  height: auto;\\n  min-height: auto;\\n  max-height: 100%;\\n}\\n\\nlabel {\\n  color: black;\\n}\\n\\n.btn-wrapper {\\n  text-align: center;\\n}\\n\\n.input[type=number] {\\n  -moz-appearance: textfield;\\n}\\n\\n.input[type=number]::-webkit-inner-spin-button {\\n  display: none;\\n}\\n\\n.toolbar-title {\\n  text-overflow: inherit;\\n  white-space: normal;\\n  text-align: left;\\n  font-size: 1.3em;\\n}\\n\\n.cell-class {\\n  border-color: black;\\n  border-width: 0.01em;\\n  border-style: solid;\\n}\\n\\n.invalid-class {\\n  border-color: black;\\n  border-width: 0.01em;\\n  border-style: solid;\\n  background: #c9c966;\\n}\\n\\n.row {\\n  height: 100%;\\n}\\n\\n.col {\\n  height: 100%;\\n  border: solid black;\\n}\\n\\n.sc-ion-popover-md-h {\\n  min-width: auto;\\n  min-height: auto;\\n  max-width: 100%;\\n  height: 50%;\\n}\\n\\n.popover-content.sc-ion-popover-md {\\n  position: inherit;\\n  min-width: auto;\\n  max-width: 100%;\\n  height: auto;\\n  min-height: auto;\\n  max-height: 100%;\\n}\\n\\ndiv {\\n  color: black;\\n}\\n\\n.invalid-div {\\n  color: black;\\n  background-color: #c9c966;\\n}\\n\\n.checkbox-div {\\n  background-color: #FFFF66;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb2phdmUvRGVza3RvcC9FbmdpbmVlcnNMb2dib29rMi9zcmMvYXBwL210cmFjL210cmFjLnBhZ2Uuc2NzcyIsInNyYy9hcHAvbXRyYWMvbXRyYWMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksdUJBQUE7QUNBSjs7QURHQTtFQUNJLG9CQUFBO0FDQUo7O0FER0E7RUFDRSw4QkFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtBQ0FGOztBREdBO0VBQ0Usb0JBQUE7QUNBRjs7QURHQTtFQUNFLG9CQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0FDQUY7O0FER0E7RUFDRSxvQkFBQTtBQ0FGOztBREdBO0VBQ0UseUJBQUE7RUFDQSx5QkFBQTtBQ0FGOztBREdBO0VBQ0UsYUFBQTtBQ0FGOztBREdBO0VBQ0UseUJBQUE7RUFDQSxhQUFBO0VBQ0Esb0JBQUE7RUFDQSx3QkFBQTtFQUNBLGVBQUE7RUFDQSxjQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUNBRjs7QURHQTtFQUNFLFlBQUE7QUNBRjs7QURHQTtFQUNFLGtCQUFBO0FDQUY7O0FESUE7RUFFRSwwQkFBQTtBQ0ZGOztBRENFO0VBQThCLGFBQUE7QUNFaEM7O0FERUE7RUFDRyxzQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtBQ0NIOztBREVBO0VBQ0UsbUJBQUE7RUFDQSxvQkFBQTtFQUNBLG1CQUFBO0FDQ0Y7O0FERUE7RUFDRSxtQkFBQTtFQUNBLG9CQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtBQ0NGOztBREVBO0VBRUUsWUFBQTtBQ0FGOztBREdBO0VBQ0UsWUFBQTtFQUNBLG1CQUFBO0FDQUY7O0FER0E7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsV0FBQTtBQ0FKOztBREdBO0VBQ0ksaUJBQUE7RUFDQSxlQUFBO0VBQ0EsZUFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FDQUo7O0FER0E7RUFDSSxZQUFBO0FDQUo7O0FER0E7RUFDSSxZQUFBO0VBQ0EseUJBQUE7QUNBSjs7QURHQTtFQUNJLHlCQUFBO0FDQUoiLCJmaWxlIjoic3JjL2FwcC9tdHJhYy9tdHJhYy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqIHtcbi8vICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7ICAvLyBkaXNhYmxlZCBpdGVtcyB3aWxsIG5vdCBiZSBncmV5IG91dC5cbiAgICAtLWlvbi10ZXh0LWNvbG9yOiBibGFjaztcbn1cblxuaW9uLXRvb2xiYXJ7XG4gICAgLS1iYWNrZ3JvdW5kOiNGRkZGNjY7XG59XG5cbmlvbi1jb250ZW50e1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiNGRkZGNjY7XG4gIC0tY29sb3I6YmxhY2s7XG4gIC0taW9uLXRleHQtY29sb3I6IGJsYWNrO1xufVxuXG5pb24tY2FyZHtcbiAgLS1iYWNrZ3JvdW5kOiNGRkZGNjY7XG59XG5cbmlvbi1pdGVte1xuICAtLWJhY2tncm91bmQ6I0ZGRkY2NjtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtaW4taGVpZ2h0OiBhdXRvO1xufVxuXG5pb24tZ3JpZHtcbiAgLS1iYWNrZ3JvdW5kOiNGRkZGNjY7XG59XG5cbmlvbi1pbnB1dHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6IHByaW1hcnkhaW1wb3J0YW50O1xufVxuXG5pb24tY2FyZC10aXRsZXtcbiAgLS1jb2xvcjpibGFjaztcbn1cblxuaW9uLXNlbGVjdHtcbiAgLS1wbGFjZWhvbGRlci1jb2xvcjpibGFjaztcbiAgLS1jb2xvcjpibGFjaztcbiAgLS1wYWRkaW5nLXN0YXJ0OiAwcHg7XG4gIC0taW5uZXItcGFkZGluZy1lbmQ6IDBweDtcbiAgbWluLXdpZHRoOiBhdXRvO1xuICBtYXgtd2lkdGg6IDcwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtaW4taGVpZ2h0OiBhdXRvO1xuICBtYXgtaGVpZ2h0OiAxMDAlO1xufVxuXG5sYWJlbHtcbiAgY29sb3I6YmxhY2s7XG59XG5cbi5idG4td3JhcHBlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLy8gZG8gbm90IHNob3cgc3Bpbm5lciBmb3IgbnVtYmVyIGlucHV0c1xuLmlucHV0W3R5cGU9bnVtYmVyXSB7ICBcbiAgJjo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbnsgZGlzcGxheTogbm9uZTsgfVxuICAtbW96LWFwcGVhcmFuY2U6dGV4dGZpZWxkO1xufVxuXG4udG9vbGJhci10aXRsZSB7XG4gICB0ZXh0LW92ZXJmbG93OiBpbmhlcml0O1xuICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICBmb250LXNpemU6MS4zZW07XG59XG5cbi5jZWxsLWNsYXNzIHtcbiAgYm9yZGVyLWNvbG9yOiBibGFjaztcbiAgYm9yZGVyLXdpZHRoOiAuMDFlbTtcbiAgYm9yZGVyLXN0eWxlOnNvbGlkO1xufVxuXG4uaW52YWxpZC1jbGFzcyB7XG4gIGJvcmRlci1jb2xvcjogYmxhY2s7XG4gIGJvcmRlci13aWR0aDogLjAxZW07XG4gIGJvcmRlci1zdHlsZTpzb2xpZDtcbiAgYmFja2dyb3VuZDojYzljOTY2O1xufVxuXG4ucm93IHtcbiAgLy8gRm9yY2UgZ3JpZCB0byBmaWxsIGhlaWdodCBvZiBjb250ZW50IGFzIHRoaXMgaXMgbm90IHNldCBieSBkZWZhdWx0XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmNvbHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBib3JkZXI6IHNvbGlkIGJsYWNrO1xufVxuXG4uc2MtaW9uLXBvcG92ZXItbWQtaCB7XG4gICAgbWluLXdpZHRoOiBhdXRvO1xuICAgIG1pbi1oZWlnaHQ6IGF1dG87XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNTAlO1xufVxuXG4ucG9wb3Zlci1jb250ZW50LnNjLWlvbi1wb3BvdmVyLW1kIHtcbiAgICBwb3NpdGlvbjogaW5oZXJpdDtcbiAgICBtaW4td2lkdGg6IGF1dG87XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtaW4taGVpZ2h0OiBhdXRvO1xuICAgIG1heC1oZWlnaHQ6IDEwMCU7XG59XG5cbmRpdntcbiAgICBjb2xvcjogYmxhY2s7XG59XG5cbi5pbnZhbGlkLWRpdntcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2M5Yzk2Njtcbn1cblxuLmNoZWNrYm94LWRpdntcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRjY2O1xufSIsIioge1xuICAtLWlvbi10ZXh0LWNvbG9yOiBibGFjaztcbn1cblxuaW9uLXRvb2xiYXIge1xuICAtLWJhY2tncm91bmQ6I0ZGRkY2Njtcbn1cblxuaW9uLWNvbnRlbnQge1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiNGRkZGNjY7XG4gIC0tY29sb3I6YmxhY2s7XG4gIC0taW9uLXRleHQtY29sb3I6IGJsYWNrO1xufVxuXG5pb24tY2FyZCB7XG4gIC0tYmFja2dyb3VuZDojRkZGRjY2O1xufVxuXG5pb24taXRlbSB7XG4gIC0tYmFja2dyb3VuZDojRkZGRjY2O1xuICBoZWlnaHQ6IGF1dG87XG4gIG1pbi1oZWlnaHQ6IGF1dG87XG59XG5cbmlvbi1ncmlkIHtcbiAgLS1iYWNrZ3JvdW5kOiNGRkZGNjY7XG59XG5cbmlvbi1pbnB1dCB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiBwcmltYXJ5ICFpbXBvcnRhbnQ7XG59XG5cbmlvbi1jYXJkLXRpdGxlIHtcbiAgLS1jb2xvcjpibGFjaztcbn1cblxuaW9uLXNlbGVjdCB7XG4gIC0tcGxhY2Vob2xkZXItY29sb3I6YmxhY2s7XG4gIC0tY29sb3I6YmxhY2s7XG4gIC0tcGFkZGluZy1zdGFydDogMHB4O1xuICAtLWlubmVyLXBhZGRpbmctZW5kOiAwcHg7XG4gIG1pbi13aWR0aDogYXV0bztcbiAgbWF4LXdpZHRoOiA3MCU7XG4gIGhlaWdodDogYXV0bztcbiAgbWluLWhlaWdodDogYXV0bztcbiAgbWF4LWhlaWdodDogMTAwJTtcbn1cblxubGFiZWwge1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5idG4td3JhcHBlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmlucHV0W3R5cGU9bnVtYmVyXSB7XG4gIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xufVxuLmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi50b29sYmFyLXRpdGxlIHtcbiAgdGV4dC1vdmVyZmxvdzogaW5oZXJpdDtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZm9udC1zaXplOiAxLjNlbTtcbn1cblxuLmNlbGwtY2xhc3Mge1xuICBib3JkZXItY29sb3I6IGJsYWNrO1xuICBib3JkZXItd2lkdGg6IDAuMDFlbTtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbn1cblxuLmludmFsaWQtY2xhc3Mge1xuICBib3JkZXItY29sb3I6IGJsYWNrO1xuICBib3JkZXItd2lkdGg6IDAuMDFlbTtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYmFja2dyb3VuZDogI2M5Yzk2Njtcbn1cblxuLnJvdyB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmNvbCB7XG4gIGhlaWdodDogMTAwJTtcbiAgYm9yZGVyOiBzb2xpZCBibGFjaztcbn1cblxuLnNjLWlvbi1wb3BvdmVyLW1kLWgge1xuICBtaW4td2lkdGg6IGF1dG87XG4gIG1pbi1oZWlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA1MCU7XG59XG5cbi5wb3BvdmVyLWNvbnRlbnQuc2MtaW9uLXBvcG92ZXItbWQge1xuICBwb3NpdGlvbjogaW5oZXJpdDtcbiAgbWluLXdpZHRoOiBhdXRvO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgbWluLWhlaWdodDogYXV0bztcbiAgbWF4LWhlaWdodDogMTAwJTtcbn1cblxuZGl2IHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4uaW52YWxpZC1kaXYge1xuICBjb2xvcjogYmxhY2s7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjOWM5NjY7XG59XG5cbi5jaGVja2JveC1kaXYge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRjY2O1xufSJdfQ== */\"","import { Component, OnInit, wtfStartTimeRange } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { DatabaseService, VehicleTypes } from '../services/database.service';\nimport { ToastController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport * as dayjs from 'dayjs'; // Datetime utility, See http://zetcode.com/javascript/dayjs/\n\n@Component({\n  selector: 'app-mtrac',\n  templateUrl: './mtrac.page.html',\n  styleUrls: ['./mtrac.page.scss'],\n})\n\nexport class mtracPage implements OnInit {\n\n  mtracForm: FormGroup;\n  errorMessage = '';\n  successMessage = '';\n  toast: any;\n  today = new Date().toISOString();\n  updateStatus;\n  checkboxstatus = false;\n\n  validationMessages = {\n    vehicleNumber: [\n        { type: 'required', message: 'Vehicle Number is required.' },\n        { type: 'minlength', message: 'Vehicle number must be at least 5 characters long.' }],\n    licenseType: [\n        { type: 'required', message: 'choose license type' },],\n    rest: [\n        { type: 'required', message: 'choose rest' },],\n    health: [\n        { type: 'required', message: 'choose health' },],\n    weather: [\n        { type: 'required', message: 'choose weather' },],\n    route: [\n        { type: 'required', message: 'choose route' },],\n    detailType: [\n        { type: 'required', message: 'choose detail type' },],\n    vc: [\n        { type: 'required', message: 'choose vc' },],\n    vehicleServiceability: [\n        { type: 'required', message: 'choose vehicle serviceability' },],\n    startLocation: [\n        { type: 'required', message: 'enter start location' },],\n    endLocation: [\n        { type: 'required', message: 'enter end location' },],\n    incamp: [\n        { type: 'required', message: 'enter end location' },],\n};\n\n  constructor(\n    private navCtrl: NavController,\n    private formBuilder: FormBuilder,\n    public toastController: ToastController,\n    public database: DatabaseService,\n    public route: ActivatedRoute\n  ) { }\n\n    ngOnInit() {\n      this.mtracForm = this.formBuilder.group({\n        vehicleNumber: new FormControl('', Validators.compose([Validators.minLength(5), Validators.required])),\n        licenseType: new FormControl('', Validators.compose([Validators.required])),\n        vehicleType: new FormControl('', Validators.compose([Validators.required])),\n        rest: new FormControl('', Validators.compose([Validators.required])),\n        health: new FormControl('', Validators.compose([Validators.required])),\n        weather: new FormControl('', Validators.compose([Validators.required])),\n        route: new FormControl('', Validators.compose([Validators.required])),\n        detailType: new FormControl('', Validators.compose([Validators.required])),\n        vc: new FormControl('', Validators.compose([Validators.required])),\n        vehicleServiceability: new FormControl('', Validators.compose([Validators.required])),\n        incamp: new FormControl('', Validators.compose([Validators.required])),\n        startLocation: new FormControl('', Validators.compose([Validators.required])),\n        endLocation: new FormControl('', Validators.compose([Validators.required])),\n    });\n  }\n\n  public setcheckboxstatus(){\n    this.checkboxstatus =! this.checkboxstatus;\n  }\n\n  public getcheckboxstatus(){\n    return this.checkboxstatus;\n  }\n\n  gettime() {\n    var cd = new Date(); // for now\n    var nmtmoringstart = new Date();\n    nmtmoringstart.setHours(7,30,0);\n    var nmtmoringend = new Date();\n    nmtmoringend.setHours(9,30,0);\n    var nmtnightstart = new Date();\n    nmtnightstart.setHours(17,30,0);\n    var nmtnightend = new Date();\n    nmtnightend.setHours(19,30,0);\n    if (cd >= nmtmoringstart && cd < nmtmoringend){\n      return false;\n    }\n    if (cd >= nmtnightstart && cd < nmtnightend){\n      return false;\n    }\n    return true;\n  }\n\n  getcdt() {\n    var cd = new Date(); // for now\n    var cdt = cd.getDate() + \"/\"\n                + (cd.getMonth()+1)  + \"/\"\n                + cd.getFullYear() + \" @ \"\n                + this.timenow();\n    return cdt\n    }\n\n  timenow() {\n    var ct = new Date(); // for now\n    var r = \"\";\n    if (ct.getHours() < 10) {\n        r += 0;\n        r += ct.getHours();\n    }\n    else {\n        r += ct.getHours();\n    }\n    r += \":\";\n    if (ct.getMinutes() < 10) {\n        r += 0;\n        r += ct.getMinutes();\n    }\n    else {\n        r += ct.getMinutes();\n    }\n    return r;\n  }\n\n  public getapprovedvtypes(): string[] {\n        var vtypes =  VehicleTypes\n        if (this.database.current.user.mss_certified != true) {\n            vtypes = vtypes.filter( vtype => vtype != 'MSS');\n        }\n        if (this.database.current.user.flb_certified != true) {\n            vtypes = vtypes.filter( vtype => vtype != 'FLB');\n        }\n        if (this.database.current.user.belrex_certified != true) {\n            vtypes = vtypes.filter( vtype => vtype != 'BELREX');\n        return vtypes\n        }\n  }\n\n  onCancel() {\n    this.navCtrl.pop();\n  }\n\n  showSubmit() {\n    return true;\n  }\n\n  showToast(msg) {\n    this.toastController.create({\n      message: msg,\n      duration: 2000,\n      //  showCloseButton: true,\n      //  closeButtonText: 'OK',\n      position: 'bottom'\n    }).then((obj) => {\n      obj.present();\n    });\n  }\n\n  getoverallrisk() {\n    var licenseType = this.mtracForm.value.licenseType;\n    var vehicleType = this.mtracForm.value.vehicleType;\n    var rest = this.mtracForm.value.rest;\n    var health = this.mtracForm.value.health;\n    var weather = this.mtracForm.value.weather;\n    var route = this.mtracForm.value.route;\n    var detailType = this.mtracForm.value.detailType;\n    var vc = this.mtracForm.value.vc;\n    var vehicleServiceability = this.mtracForm.value.vehicleServiceability;\n    if (licenseType==\"N\" || health==\"N\" || vc==\"N\" || vehicleServiceability==\"N\" || !this.mtracForm.valid) {\n        return false;\n    }\n    else if (licenseType==\"H\" || vehicleType==\"H\" || rest==\"H\" || health==\"H\" || weather==\"H\" || route==\"H\" || detailType==\"H\" || vc==\"H\" || vehicleServiceability==\"H\") {\n        return \"HIGH\";\n    }\n    else if (licenseType==\"M\" || vehicleType==\"M\" || rest==\"M\" || health==\"M\" || weather==\"M\" || route==\"M\" || detailType==\"M\" || vc==\"M\" || vehicleServiceability==\"M\") {\n        return \"MEDIUM\";\n    }\n    else if (licenseType==\"L\" || vehicleType==\"L\" || rest==\"L\" || health==\"L\" || weather==\"L\" || route==\"L\" || detailType==\"L\" || vc==\"L\" || vehicleServiceability==\"L\") {\n        return \"LOW\";\n    }\n  }\n\n  /*async addmtrac(value)\n  {\n      try {\n        const time2 = dayjs(new Date(this.mtracForm.value.time)).format('HH:mm');\n        var new_mtrac: mtrac =\n        {\n          created: this.database.getTimeStamp(),\n          driver: this.database.current.user.email,\n          // Stage-1 details\n          vehicle_number: this.mtracForm.value.vehicleNumber,\n          vehicle_type: this.mtracForm.value.vehicleType,\n          date: (this.mtracForm.value.date).split('T')[0],\n          location: this.mtracForm.value.location,\n          time: time2,\n          fleet: this.database.current.user.fleet,\n          company: this.database.current.user.company,\n          licenseType: this.mtracForm.value.licenseType,\n          vehicleType: this.mtracForm.value.vehicleType,\n          rest: this.mtracForm.value.rest,\n          health: this.mtracForm.value.health,\n          weather: this.mtracForm.value.weather,\n          route: this.mtracForm.value.route,\n          detailType: this.mtracForm.value.detailType,\n          vc: this.mtracForm.value.vc,\n          vehicleServiceability: this.mtracForm.value.vehicleServiceability,\n          incamp: this.mtracForm.value.incamp,\n        };\n        let subAutoID = this.database.collection('mtrac').doc().id;\n        new_mtrac.id = subAutoID\n        console.log('new_mtrac=${JSON.stringify(new_mtrac)}');\n        await this.database.write('mtrac', new_mtrac.id, new_mtrac);\n        this.errorMessage = '';\n        this.successMessage = 'Your mtrac has been added.';\n\n        this.showToast(this.successMessage);\n        this.navCtrl.pop();\n      } catch (err) {\n\n        this.errorMessage = `Add Fuel error: ${err}`;\n        this.successMessage = '';\n\n        this.showToast(this.errorMessage);\n        this.navCtrl.pop();\n      }\n  }*/\n\n}\n"],"sourceRoot":"webpack:///","file":"mtrac-mtrac-module-es5.js"}