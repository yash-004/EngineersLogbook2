{"version":3,"sources":["./src/app/mtrac/mtrac.page.html","./src/app/mtrac/mtrac.module.ts","./src/app/mtrac/mtrac.page.scss","./src/app/mtrac/mtrac.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,0JAA2F,wKAAwK,oBAAoB,4EAA4E,yGAAyG,6FAA6F,+SAA+S,4yGAA4yG,qeAAqe,mkBAAmkB,+nBAA+nB,6wFAA6wF,6HAA6H,gkBAAgkB,+IAA+I,oBAAoB,4EAA4E,8GAA8G,uEAAuE,20BAA20B,iBAAiB,6GAA6G,iBAAiB,6FAA6F,iBAAiB,+NAA+N,iBAAiB,0OAA0O,iBAAiB,sRAAsR,iBAAiB,qcAAqc,sBAAsB,mWAAmW,iBAAiB,60BAA60B,sBAAsB,8MAA8M,iBAAiB,ywBAAywB,sBAAsB,wNAAwN,iBAAiB,qsBAAqsB,sBAAsB,2MAA2M,iBAAiB,kwBAAkwB,sBAAsB,sVAAsV,iBAAiB,gqBAAgqB,sBAAsB,mNAAmN,iBAAiB,8kBAA8kB,sBAAsB,2VAA2V,iBAAiB,0vBAA0vB,sBAAsB,4WAA4W,iBAAiB,soBAAsoB,sBAAsB,sWAAsW,iBAAiB,ivBAAivB,sBAAsB,2gBAA2gB,kBAAkB,4KAA4K,kBAAkB,yKAAyK,kBAAkB,4IAA4I,wWAAwW,4RAA4R,mBAAmB,wnBAAwnB,+UAA+U,mZAAmZ,kVAAkV,qYAAqY,8UAA8U,gaAAga,+UAA+U,wZAAwZ,oJAAoJ,yPAAyP,yZAAyZ,mJAAmJ,wPAAwP,wZAAwZ,uJAAuJ,4PAA4P,2ZAA2Z,mJAAmJ,uPAAuP,yWAAyW,gJAAgJ,qPAAqP,wZAAwZ,0JAA0J,+PAA+P,6bAA6b,oJAAoJ,yPAAyP,0YAA0Y,yJAAyJ,8PAA8P,yYAAyY,yVAAyV,wpBAAwpB,iCAAiC,oGAAoG,UAAU,mIAAmI,iiB;;;;;;;;;;;;;;;;;;;;;;ACA/4jC;AACM;AACmB;AACX;AAEV;AAEJ;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAYF,IAAa,eAAe,GAA5B,MAAa,eAAe;CAAG;AAAlB,eAAe;IAV3B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,kEAAmB;YACnB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,qDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;AC1B5B;AAAe,mFAAoB,KAAK,oCAAoC,4BAA4B,GAAG,eAAe,mCAAmC,kBAAkB,4BAA4B,GAAG,YAAY,yBAAyB,GAAG,YAAY,yBAAyB,iBAAiB,qBAAqB,GAAG,YAAY,yBAAyB,GAAG,aAAa,8BAA8B,8BAA8B,GAAG,kBAAkB,kBAAkB,GAAG,cAAc,8BAA8B,kBAAkB,yBAAyB,6BAA6B,oBAAoB,mBAAmB,iBAAiB,qBAAqB,qBAAqB,GAAG,SAAS,iBAAiB,GAAG,gBAAgB,uBAAuB,GAAG,uBAAuB,+BAA+B,GAAG,kDAAkD,kBAAkB,GAAG,kBAAkB,2BAA2B,wBAAwB,qBAAqB,qBAAqB,GAAG,eAAe,wBAAwB,yBAAyB,wBAAwB,GAAG,kBAAkB,wBAAwB,yBAAyB,wBAAwB,wBAAwB,GAAG,QAAQ,iBAAiB,GAAG,QAAQ,iBAAiB,wBAAwB,GAAG,wBAAwB,oBAAoB,qBAAqB,oBAAoB,gBAAgB,GAAG,sCAAsC,sBAAsB,oBAAoB,oBAAoB,iBAAiB,qBAAqB,qBAAqB,GAAG,OAAO,iBAAiB,8BAA8B,GAAG,gBAAgB,iBAAiB,8BAA8B,GAAG,iBAAiB,8BAA8B,GAAG,6CAA6C,uqM;;;;;;;;;;;;;;;;;;;;;ACAjrD;AACY;AAClC;AAC8B;AAC5B;AACA;AASjD,IAAa,SAAS,GAAtB,MAAa,SAAS;IA0CpB,YACU,OAAsB,EACtB,WAAwB,EACzB,eAAgC,EAChC,QAAyB,EACzB,KAAqB;QAJpB,YAAO,GAAP,OAAO,CAAe;QACtB,gBAAW,GAAX,WAAW,CAAa;QACzB,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAiB;QACzB,UAAK,GAAL,KAAK,CAAgB;QA5C9B,iBAAY,GAAG,EAAE,CAAC;QAClB,mBAAc,GAAG,EAAE,CAAC;QAEpB,UAAK,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAEjC,mBAAc,GAAG,KAAK,CAAC;QAEvB,uBAAkB,GAAG;YACnB,IAAI,EAAE;gBACF,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,mBAAmB,EAAE;aAAC;YACvD,aAAa,EAAE;gBACX,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,6BAA6B,EAAE;gBAC5D,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,oDAAoD,EAAE;aAAC;YACzF,IAAI,EAAE;gBACF,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,oBAAoB,EAAE;aAAE;YACzD,WAAW,EAAE;gBACT,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,qBAAqB,EAAE;aAAE;YAC1D,IAAI,EAAE;gBACF,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,aAAa,EAAE;aAAE;YAClD,MAAM,EAAE;gBACJ,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,eAAe,EAAE;aAAE;YACpD,OAAO,EAAE;gBACL,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,gBAAgB,EAAE;aAAE;YACrD,KAAK,EAAE;gBACH,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,cAAc,EAAE;aAAE;YACnD,UAAU,EAAE;gBACR,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,oBAAoB,EAAE;aAAE;YACzD,EAAE,EAAE;gBACA,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE;aAAE;YAChD,qBAAqB,EAAE;gBACnB,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,+BAA+B,EAAE;aAAE;YACpE,aAAa,EAAE;gBACX,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,sBAAsB,EAAE;aAAE;YAC3D,WAAW,EAAE;gBACT,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,oBAAoB,EAAE;aAAE;SAG5D,CAAC;IAQI,CAAC;IAEH,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtG,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3E,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3E,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACpE,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtE,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvE,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrE,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1E,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClE,qBAAqB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrF,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtE,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC7E,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC5E,CAAC,CAAC;IACL,CAAC;IAEM,iBAAiB;QACtB,IAAI,CAAC,cAAc,GAAE,CAAE,IAAI,CAAC,cAAc,CAAC;IAC7C,CAAC;IAEM,iBAAiB;QACtB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,OAAO;QACL,IAAI,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC,UAAU;QAC/B,IAAI,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC;QAChC,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QAChC,IAAI,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC;QAC9B,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC7B,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,EAAE,IAAI,cAAc,IAAI,EAAE,GAAG,YAAY,EAAC;YAC5C,OAAO,KAAK,CAAC;SACd;QACD,IAAI,EAAE,IAAI,aAAa,IAAI,EAAE,GAAG,WAAW,EAAC;YAC1C,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM;QACJ,IAAI,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC,UAAU;QAC/B,IAAI,GAAG,GAAG,EAAE,CAAC,OAAO,EAAE,GAAG,GAAG;cACd,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAC,CAAC,CAAC,GAAI,GAAG;cACxB,EAAE,CAAC,WAAW,EAAE,GAAG,KAAK;cACxB,IAAI,CAAC,OAAO,EAAE,CAAC;QAC7B,OAAO,GAAG;IACV,CAAC;IAEH,OAAO;QACL,IAAI,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC,UAAU;QAC/B,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,IAAI,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE;YACpB,CAAC,IAAI,CAAC,CAAC;YACP,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;SACtB;aACI;YACD,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;SACtB;QACD,CAAC,IAAI,GAAG,CAAC;QACT,IAAI,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE,EAAE;YACtB,CAAC,IAAI,CAAC,CAAC;YACP,CAAC,IAAI,EAAE,CAAC,UAAU,EAAE,CAAC;SACxB;aACI;YACD,CAAC,IAAI,EAAE,CAAC,UAAU,EAAE,CAAC;SACxB;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IAEM,iBAAiB;QAClB,IAAI,MAAM,GAAI,uEAAY;QAC1B,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE;YAClD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAE,KAAK,CAAC,EAAE,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC;SACpD;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE;YAClD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAE,KAAK,CAAC,EAAE,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC;SACpD;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;YACrD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAE,KAAK,CAAC,EAAE,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC;YACxD,OAAO,MAAM;SACZ;IACP,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS,CAAC,GAAG;QACX,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;YAC1B,OAAO,EAAE,GAAG;YACZ,QAAQ,EAAE,IAAI;YACd,0BAA0B;YAC1B,0BAA0B;YAC1B,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACd,GAAG,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC;QACnD,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC;QACnD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;QACrC,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC;QACzC,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC;QAC3C,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC;QACvC,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC;QACjD,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC;QACjC,IAAI,qBAAqB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,qBAAqB,CAAC;QACvE,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC;QACzC,IAAI,WAAW,IAAE,GAAG,IAAI,MAAM,IAAE,GAAG,IAAI,EAAE,IAAE,GAAG,IAAI,qBAAqB,IAAE,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACnG,OAAO,KAAK,CAAC;SAChB;aACI,IAAI,WAAW,IAAE,GAAG,IAAI,WAAW,IAAE,GAAG,IAAI,IAAI,IAAE,GAAG,IAAI,MAAM,IAAE,GAAG,IAAI,OAAO,IAAE,GAAG,IAAI,KAAK,IAAE,GAAG,IAAI,UAAU,IAAE,GAAG,IAAI,EAAE,IAAE,GAAG,IAAI,qBAAqB,IAAE,GAAG,EAAE;YACjK,OAAO,MAAM,CAAC;SACjB;aACI,IAAI,WAAW,IAAE,GAAG,IAAI,WAAW,IAAE,GAAG,IAAI,IAAI,IAAE,GAAG,IAAI,MAAM,IAAE,GAAG,IAAI,OAAO,IAAE,GAAG,IAAI,KAAK,IAAE,GAAG,IAAI,UAAU,IAAE,GAAG,IAAI,EAAE,IAAE,GAAG,IAAI,qBAAqB,IAAE,GAAG,EAAE;YACjK,OAAO,QAAQ,CAAC;SACnB;aACI,IAAI,WAAW,IAAE,GAAG,IAAI,WAAW,IAAE,GAAG,IAAI,IAAI,IAAE,GAAG,IAAI,MAAM,IAAE,GAAG,IAAI,OAAO,IAAE,GAAG,IAAI,KAAK,IAAE,GAAG,IAAI,UAAU,IAAE,GAAG,IAAI,EAAE,IAAE,GAAG,IAAI,qBAAqB,IAAE,GAAG,EAAE;YACjK,OAAO,KAAK,CAAC;SAChB;IACH,CAAC;CAgDF;;YA3LoB,4DAAa;YACT,0DAAW;YACR,8DAAe;YACtB,0EAAe;YAClB,8DAAc;;AA/CnB,SAAS;IANrB,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,yMAAgC;;KAEjC,CAAC;2EA6CmB,4DAAa;QACT,0DAAW;QACR,8DAAe;QACtB,0EAAe;QAClB,8DAAc;GA/CnB,SAAS,CAsOrB;AAtOqB","file":"mtrac-mtrac-module-es2015.js","sourcesContent":["export default \"<ion-header translucent>\\n  <ion-toolbar>\\n    <div>\\n      <h1 style=\\\"margin-left: 10px;\\\"><strong>MT RISK ASSESSMENT CHECKLIST (MT-RAC)</strong></h1>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div>\\n    <h5 style=\\\"text-align:right; margin-right: 10px;\\\"><strong><u>SAF 1200</u></strong></h5>\\n    <h5 style=\\\"text-align:center;\\\"><strong><u>MT RISK ASSESSMENT CHECKLIST (MT-RAC)</u></strong></h5>\\n    <h6 style=\\\"margin-left: 10px;\\\"><strong><u>ABOUT THE MT RAC FORM</u></strong><br></h6>\\n    <h6 style=\\\"margin-left: 10px;\\\">It enables the drivers / riders to assess the risk level involved in their driving / riding detail. It allows the drivers / riders to make an informed decision as to whether to carry on with the detail.</h6>\\n  </div>\\n    <ion-item lines=\\\"none\\\" no-padding>\\n    <ion-grid style=\\\"margin-left: 5px;\\\">\\n      <ion-row class=\\\"cell-class\\\">\\n        <ion-col size=\\\"2\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>FACTORS</strong></h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>MEANING</strong></h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row align-items-center class=\\\"cell-class\\\">\\n        <ion-col size=\\\"2\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\">MAN</h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px\\\">\\n          <div>\\n            <h6 style=\\\"text-align:left\\\">This refers to the driver / rider and in particular his driving / riding experience and accident record.<br>How well he has rested before the detail is also important.</h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row align-items-center class=\\\"cell-class\\\">\\n        <ion-col size=\\\"2\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\">MACHINE</h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px\\\">\\n          <div>\\n            <h6 style=\\\"text-align:left\\\">This refers to the condition of the vehicle / motorcycle, which they are handling on the road.<br>A faulty vehicle / motorcycle will heighten the risk level.</h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row align-items-center class=\\\"cell-class\\\">\\n        <ion-col size=\\\"2\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\">MISSION</h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px\\\">\\n          <div>\\n            <h6 style=\\\"text-align:left\\\">This type of transport detail will have an effect on the risk level.<br>An administrative detail will have less risk than a training detail, which requires them to drive / ride in difficult cross-country terrain.</h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row align-items-center class=\\\"cell-class\\\">\\n        <ion-col size=\\\"2\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\">MEDIUM</h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px\\\">\\n          <div>\\n            <h6 style=\\\"text-align:left\\\">This refers mainly to the road conditions under which the driver / rider operates.<br>Their prevailing conditions will have a direct effect on the driver / rider.</h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row align-items-center class=\\\"cell-class\\\">\\n        <ion-col size=\\\"2\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\">MANAGEMENT</h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px\\\">\\n          <div>\\n            <h6 style=\\\"text-align:left\\\">Close supervision of the driver / rider will contribute to risk minimisation.<br>Assignment of Vehicle Commander of a high rank will have a psychological effect on the driver to do better.</h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-item>\\n\\n  <ion-item lines=\\\"none\\\" no-padding>\\n    <ion-grid style=\\\"margin-left: 5px;\\\">\\n      <ion-row>\\n        <ion-col class=\\\"cell-class\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>RISK LEVEL</strong></h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row align-items-center class=\\\"cell-class\\\">\\n        <ion-col>\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>LOW RISK</strong></h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>MEDIUM RISK</strong></h6>\\n          </div>\\n        </ion-col>\\n        <ion-col>\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>HIGH RISK</strong></h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row align-items-center class=\\\"cell-class\\\">\\n        <ion-col>\\n          <div>\\n            <h6 style=\\\"text-align:center\\\">Normal operational risk.</h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\">Above normal operational risk level.<br>Increase supervision, briefing and exercise caution, Mission may be suspended till conditions are better.</h6>\\n          </div>\\n        </ion-col>\\n        <ion-col>\\n          <div>\\n            <h6 style=\\\"text-align:center\\\">Do not proceed with mission unless approved by higher authorities.<br><strong>All high risk factors must be mitigated.</strong></h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-item>\\n\\n  <ion-item lines=\\\"none\\\" no-padding>\\n    <ion-grid style=\\\"margin-left: 5px;\\\">\\n      <ion-row class=\\\"cell-class\\\">\\n        <ion-col>\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>List of Common Vehicle Defects</strong></h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row class=\\\"cell-class\\\">\\n        <ion-col class=\\\"cell-class\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>Major Defects</strong></h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\">\\n          <div>\\n            <h6 style=\\\"text-align:center\\\"><strong>Minor Defects</strong></h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row class=\\\"cell-class\\\">\\n        <ion-col class=\\\"cell-class\\\">\\n          <div>\\n            <h6 style=\\\"text-align:left\\\">- Emitting black or white smoke<br>\\n              - Exhaust silencer leaking<br>\\n              - Speedometer not working<br>\\n              - Horn not working<br>\\n              - Signal Indicator not working<br>\\n              - Brake light not working<br>\\n              - Headlights not working<br>\\n              - Tail lights not working<br>\\n              - No Mirrors / <strong>Loose mirror</strong> / <strong>Blurred mirror</strong><br>\\n              - Windscreen shattered / crack<br>\\n              - Wiper not working<br>\\n              - Unusual noise or vibration from engine<br>\\n              - Brakes not effective<br>\\n              - Engine oil level below the minimum level, exceed maximum level<br>\\n              - Bald tyre<br>\\n              - Door not closing properly<br>\\n              - Radiator water leaking<br>\\n              - Speed Warning Device not working<br>\\n              - Unserviceable Front/Rear (Safety Belt)<br>\\n              - Unserviceable Safety strap<br>\\n              - Pintle securing pin missing (Not fit for towing)</h6>\\n          </div>\\n        </ion-col>\\n        <ion-col class=\\\"cell-class\\\">\\n          <div>\\n            <h6 style=\\\"text-align:left\\\">- Weak batteries<br>\\n              - Battery water too low<br>\\n              - Temperature gauge and other panel gauges not working<br>\\n              - Incorrect tyre pressure<br>\\n              - Vehicle body dented<br>\\n              - Superstructure damaged or broken<br>\\n              - Canopy torn<br>\\n              - Tailboard strap missing<br>\\n              - No self-centering (Steering system)<br>\\n              - Steering free-play too much<br>\\n              - Fan belt worn or slacked<br>\\n              - Weak suspension coil spring<br>\\n              - Towing pin missing (Not fit for towing)<br>\\n              - Pintle securing pin missing (Not fit for towing) to major fault</h6>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-item>\\n  <div>\\n    <h6 style=\\\"margin-left: 10px;\\\"><strong><u>Briefing and ensuring notes for TO/ DV/ LOA Drivers</u></strong><br></h6>\\n\\n    <h6 style=\\\"margin-left: 10px;\\\"><ol type=\\\"a\\\">\\n      <li>Check and ensure seating capacity, if exceeds (Please do not proceed on with the detail)</li>\\n      <li>Brief troops to engage seat belt throughout the journey</li>\\n      <li>Assist the troops in engaging the safety straps. Safety straps are to be engaged throughout the journey.</li>\\n      <li>Brief \\\"no smoking / sleeping on vehicle\\\" throughout the journey</li>\\n      <li>Nobody is to move while the vehicle is on the move</li>\\n      <li>No sitting on the tailboard at all times</li>\\n    </ol></h6>\\n\\n    <h6 style=\\\"margin-left: 10px;\\\"><strong>* For any matters please seek vehicle commander's assistance</strong><br></h6>\\n  </div>\\n  <div>\\n    <h5 style=\\\"text-align:right; margin-right: 10px;\\\"><strong><u>SAF 1200</u></strong></h5>\\n    <h5 style=\\\"text-align:center;\\\"><strong><u>MT RISK ASSESSMENT CHECKLIST (MT-RAC)</u></strong></h5>\\n    <ion-grid style=\\\"margin-left: 5px;\\\"><ion-row class=\\\"cell-class\\\">\\n      <h6 style=\\\"margin-left: 10px;\\\">The MT-RAC form is an assessment of the 5-M Risk Factors and identified high risk factors are to be mitigated. All SAF Drivers are to fill up the MT-RAC form, and completed forms are to be kept by the MT Node for 3 working days or in the event of an accident, until the investigation is completed. A MT-RAC form is to be completed for every transport detail, or when there is a change in the conditions or nature of detail. For exercises/training, a MT-RAC is prepared at the start of each exercise, and updated  if there is a change in conditions.</h6>\\n    </ion-row></ion-grid></div>\\n\\n  <form class=\\\"form\\\" [formGroup]=\\\"mtracForm\\\" (submit)=\\\"addmtrac(mtracForm.value)\\\">\\n  <ion-card><ion-card-content>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label  position=\\\"floating\\\">driving area</ion-label>\\n      <ion-select [ngStyle]=\\\"{'color': 'black'}\\\" formControlName=\\\"incamp\\\" interface=\\\"popover\\\" value=\\\"true\\\">\\n        <ion-select-option [ngStyle]=\\\"{'color': 'black'}\\\" text-wrap value=true>In Camp</ion-select-option>\\n        <ion-select-option [ngStyle]=\\\"{'color': 'black'}\\\" text-wrap value=false *ngIf=\\\"gettime()\\\">Out of Camp</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label  position=\\\"floating\\\" >From</ion-label>\\n      <ion-input [ngStyle]=\\\"{'color': 'black'}\\\" type=\\\"text\\\" onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"startLocation\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label  position=\\\"floating\\\">To</ion-label>\\n      <ion-input [ngStyle]=\\\"{'color': 'black'}\\\" type=\\\"text\\\" onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"endLocation\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-col><ion-item>\\n        <ion-label  position=\\\"floating\\\" >Vehicle Number</ion-label>\\n        <ion-input [ngStyle]=\\\"{'color': 'black'}\\\" onkeyup=\\\"this.value = this.value.toUpperCase()\\\" formControlName=\\\"vehicleNumber\\\"></ion-input>\\n      </ion-item>\\n      <div class=\\\"validation-errors\\\">\\n        <ng-container *ngFor=\\\"let validation of validationMessages.vehicleNumber\\\">\\n          <div class=\\\"error-message\\\" *ngIf=\\\"mtracForm.get('vehicleNumber').hasError(validation.type) && (mtracForm.get('vehicleNumber').dirty || mtracForm.get('vehicleNumber').touched)\\\">\\n            {{ validation.message }}\\n          </div>\\n        </ng-container>\\n      </div>\\n      </ion-col></ion-item>\\n  </ion-card-content></ion-card>\\n\\n  <ion-card>\\n    <ion-card-title text-center>MAN FACTORS</ion-card-title>\\n    <ion-card-content>\\n\\n      <ion-col><ion-item>\\n        <ion-label ><strong>Driving Experience</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\"  formControlName=\\\"licenseType\\\" interface=\\\"popover\\\" text-left>\\n          <ion-select-option text-wrap value=\\\"L\\\">CAT A, B</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"M\\\">CAT C</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"H\\\">CAT D</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"N\\\">Have never been trained and familiarized in the vehicle that you will be driving</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.licenseType\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('licenseType').hasError(validation.type) && (mtracForm.get('licenseType').dirty || mtracForm.get('licenseType').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n      <ion-col><ion-item>\\n        <ion-label ><strong>Vehicle Type</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\"  formControlName=\\\"vehicleType\\\" interface=\\\"popover\\\" text-wrap>\\n          <ion-select-option text-wrap value=\\\"L\\\">Same as last detail / Different (GP Car/Pickup)</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"M\\\">Different (MUV/OUV/JEEP)</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"H\\\">Different (Coach/3Ton/5Ton/7Ton)</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.vehicleType\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('vehicleType').hasError(validation.type) && (mtracForm.get('vehicleType').dirty || mtracForm.get('vehicleType').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n      <ion-col><ion-item>\\n        <ion-label ><strong>Fatigue/Length of Rest</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\" formControlName=\\\"rest\\\" interface=\\\"popover\\\" text-wrap>\\n          <ion-select-option text-wrap value=\\\"L\\\">More than 6 hours</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"M\\\">Less than 6 hours (Home/Camp)</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"H\\\">Less than 6 hours (Field)</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.rest\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('rest').hasError(validation.type) && (mtracForm.get('rest').dirty || mtracForm.get('rest').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n      <ion-col><ion-item>\\n        <ion-label ><strong>My Health</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\" formControlName=\\\"health\\\" interface=\\\"popover\\\" text-wrap>\\n          <ion-select-option text-wrap value=\\\"L\\\">Good</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"M\\\">Fair (Just recovered from illness < 1 day)</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"N\\\">Poor (Still ill or Attend C) / Still under medication that causes drowsiness</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.health\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('health').hasError(validation.type) && (mtracForm.get('health').dirty || mtracForm.get('health').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n    </ion-card-content></ion-card>\\n\\n  <ion-card>\\n    <ion-card-title text-center>MEDIUM FACTORS</ion-card-title>\\n    <ion-card-content>\\n      <ion-col><ion-item>\\n        <ion-label ><strong>Weather</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\" formControlName=\\\"weather\\\" interface=\\\"popover\\\" text-wrap>\\n          <ion-select-option text-wrap value=\\\"L\\\">Dry</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"M\\\">Wet</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"H\\\">Heavy showers</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.weather\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('weather').hasError(validation.type) && (mtracForm.get('weather').dirty || mtracForm.get('weather').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n      <ion-col><ion-item>\\n        <ion-label ><strong>Route Familiarity</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\" formControlName=\\\"route\\\" interface=\\\"popover\\\" text-wrap>\\n          <ion-select-option text-wrap value=\\\"L\\\">Familiar</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"H\\\">Not Familiar</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.route\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('route').hasError(validation.type) && (mtracForm.get('route').dirty || mtracForm.get('route').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n    </ion-card-content></ion-card>\\n\\n  <ion-card>\\n    <ion-card-title text-center>MISSION FACTORS</ion-card-title>\\n    <ion-card-content>\\n      <ion-col><ion-item>\\n        <ion-label ><strong>Detail Type</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\" formControlName=\\\"detailType\\\" interface=\\\"popover\\\" text-wrap>\\n          <ion-select-option text-wrap value=\\\"L\\\">Admin</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"M\\\">Training/Special mission oriented towing vehicle/gun</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"H\\\">Occasional towing trailer/vehicle/gun</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.detailType\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('detailType').hasError(validation.type) && (mtracForm.get('detailType').dirty || mtracForm.get('detailType').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n    </ion-card-content></ion-card>\\n\\n  <ion-card>\\n    <ion-card-title text-center>MANAGEMENT FACTORS</ion-card-title>\\n    <ion-card-content>\\n      <ion-col><ion-item>\\n        <ion-label ><strong>Without Vehicle Commander</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\" formControlName=\\\"vc\\\" interface=\\\"popover\\\" text-wrap>\\n          <ion-select-option text-wrap value=\\\"L\\\">CAT A, B</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"M\\\">CAT C</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"N\\\">CAT D</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.vc\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('vc').hasError(validation.type) && (mtracForm.get('vc').dirty || mtracForm.get('vc').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n    </ion-card-content></ion-card>\\n\\n  <ion-card>\\n    <ion-card-title text-center>MACHINE FACTORS</ion-card-title>\\n    <ion-card-content>\\n      <ion-col><ion-item>\\n        <ion-label ><strong>Vehicle Serviceability</strong></ion-label>\\n        <ion-select [ngStyle]=\\\"{'color': 'black'}\\\" formControlName=\\\"vehicleServiceability\\\" interface=\\\"popover\\\" text-wrap>\\n          <ion-select-option text-wrap value=\\\"L\\\">No fault</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"H\\\">Minor fault</ion-select-option>\\n          <ion-select-option text-wrap value=\\\"N\\\">Major fault</ion-select-option>\\n        </ion-select></ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validationMessages.vehicleServiceability\\\">\\n            <div class=\\\"error-message\\\"\\n                 *ngIf=\\\"mtracForm.get('vehicleServiceability').hasError(validation.type) && (mtracForm.get('vehicleServiceability').dirty || mtracForm.get('vehicleServiceability').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n      </ion-col>\\n    </ion-card-content></ion-card>\\n\\n    <ion-card>\\n      <ion-card-title text-center>OVERALL RISK LEVEL</ion-card-title>\\n      <ion-card-content>\\n        <ion-item *ngIf=\\\"!getoverallrisk()\\\" color=\\\"danger\\\" text-center>\\n          <ion-label >\\n            NO MOVE\\n          </ion-label>\\n        </ion-item>\\n        <ion-item *ngIf=\\\"getoverallrisk()=='HIGH'\\\" color=\\\"danger\\\" text-center>\\n          <ion-label >\\n            {{getoverallrisk()}}\\n          </ion-label>\\n        </ion-item>\\n        <ion-item *ngIf=\\\"getoverallrisk()=='MEDIUM'\\\" color=\\\"warning\\\" text-center>\\n          <ion-label >\\n            {{getoverallrisk()}}\\n          </ion-label>\\n        </ion-item>\\n        <ion-item  *ngIf=\\\"getoverallrisk()=='LOW'\\\" color=\\\"success\\\" text-center>\\n          <ion-label>\\n            {{getoverallrisk()}}\\n          </ion-label>\\n        </ion-item>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <div>\\n      <h6 style=\\\"text-align:center;\\\"><strong>SAF DRIVERS<sup>1</sup> AND VEHICLE COMMANDERS ARE RESPONSIBLE FOR THE TROOPS AND CARGO TRANSPORTED. THEY ARE TO PERFORM THE FOLLOWING ACTIONS AND BRIEFING. (PLEASE TICK ACCORDINGLY ON THE CHECKLIST)</strong></h6>\\n    </div>\\n\\n    <ion-item lines=\\\"none\\\" no-padding style=\\\"ion-item-background: white\\\">\\n      <ion-grid style=\\\"margin-left: 5px;\\\">\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\"><strong>Description</strong></h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px; text-align:center;\\\">\\n            <div>\\n              <h6 style=\\\"text-align:center\\\"><strong>Driver</strong></h6>\\n            </div>\\n          </ion-col>\\n          <ion-col>\\n            <div>\\n              <h6 style=\\\"text-align:center\\\"><strong>Veh Com</strong></h6>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Ensure that the driver is licensed to operate the vehicle</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"invalid-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div>\\n              <h5 class=\\\"invalid-div\\\" style=\\\"text-align:center\\\"><strong>-</strong></h5>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"license\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Ensure that driver does not exceed the vehicle or road speed limit</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"invalid-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div>\\n              <h5 class=\\\"invalid-div\\\" style=\\\"text-align:center\\\"><strong>-</strong></h5>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"speedlimit\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Warn the driver of any obstacles, hazards or dangers</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"invalid-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div>\\n              <h5 class=\\\"invalid-div\\\" style=\\\"text-align:center\\\"><strong>-</strong></h5>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"danger\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Warn the driver during reversing or movement towards congested or narrow spaces</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"invalid-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div>\\n              <h5 class=\\\"invalid-div\\\" style=\\\"text-align:center\\\"><strong>-</strong></h5>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"reverse\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Brief and ensure troops secure their seat belts before movement of vehicle</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"seatbeltdriver\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"seatbeltcommander\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Check and ensure seating or loading capacity of the vehicle is not exceeded</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"seatingdriver\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"seatingcommander\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Check and ensure safety straps in place and tailboard of vehicle is closed</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"safetystrapdriver\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"safetystrapcommander\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Brief troops on no smoking/sleeping on the vehicle before movement of vehicle</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"smokingdriver\\\" style=\\\"background: transparent;\\\"></ion-checkbox>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"smokingcommander\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Secure load before movement</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"loaddriver\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"loadcommander\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Brief and ensure troops secure their seat belts before movement of vehicle</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"seatbelttroopsdriver\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"seatbelttroopscommander\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">If vehicle involved in an accident to contact parent unit, POLICE and SAF PROVOST UNIT to inform about accident</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"accidentdriver\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"accidentcommander\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Ensure that MT RAC form is completed and duly counter-signed</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"cell-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"mtraccompletedriver\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"mtraccompletecommander\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"cell-class\\\">\\n          <ion-col size=\\\"8\\\">\\n            <div>\\n              <h6 style=\\\"text-align:left\\\">Ensure that driver has completed the checks listed above</h6>\\n            </div>\\n          </ion-col>\\n          <ion-col class=\\\"invalid-class\\\" style=\\\"margin-left : -1px;\\\">\\n            <div>\\n              <h5 class=\\\"invalid-div\\\" style=\\\"text-align:center\\\"><strong>-</strong></h5>\\n            </div>\\n          </ion-col>\\n          <ion-col align-items-center>\\n            <div class=\\\"checkbox-div\\\" align=\\\"center\\\">\\n              <ion-checkbox name=\\\"checklistcomplete\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n\\n<!--\\n\\n    <div class=\\\"btn-wrapper\\\">\\n      <div *ngIf = showSubmit()>\\n        <ion-button class=\\\"submit-btn\\\" type=\\\"submit\\\" routerLink=\\\"/add-drive\\\" [disabled]=\\\"!mtracForm.valid\\\" style=\\\"padding-right:10px\\\">Submit\\n        </ion-button>\\n        <ion-button (click)='onCancel()'>Cancel</ion-button>\\n      </div>\\n      <div *ngIf = !showSubmit()>\\n        <ion-button expand=\\\"block\\\" (click)='onCancel()'>OK</ion-button>\\n      </div>\\n    </div>\\n\\n-->\\n  </form>\\n  <ion-item>\\n    <ion-label text-wrap>I acknowledge that I, {{this.database.current.user.name}}, have read through, understood, and checked through the MT Risk Assessment (MT-RAC) Checklist on {{getcdt()}}.</ion-label>\\n    <ion-checkbox slot=\\\"start\\\" name=\\\"mtrac\\\" (ionChange)=\\\"setcheckboxstatus()\\\" style=\\\"background: transparent;\\\">></ion-checkbox>\\n  </ion-item>\\n  <div class=\\\"btn-wrapper\\\">\\n    <div *ngIf=getcheckboxstatus()>\\n      <ion-button style=\\\"padding-right:10px\\\" routerLink=\\\"/add-drive\\\" [disabled]=\\\"!mtracForm.valid || getoverallrisk()==false\\\">Continue</ion-button>\\n      <ion-button (click)='onCancel()' routerLink=\\\"/tabs/summary\\\" >Cancel</ion-button>\\n    </div>\\n    <div *ngIf = !getcheckboxstatus()>\\n      <ion-button expand=\\\"block\\\" (click)='onCancel()' routerLink=\\\"/tabs/summary\\\" >Cancel</ion-button>\\n    </div>\\n  </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { mtracPage } from './mtrac.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: mtracPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [mtracPage]\n})\nexport class mtracPageModule {}\n","export default \"@charset \\\"UTF-8\\\";\\n* {\\n  -–ion-background-color: #FFFF66;\\n  --ion-text-color: black;\\n}\\nion-content {\\n  --ion-background-color:#FFFF66;\\n  --color:black;\\n  --ion-text-color: black;\\n}\\nion-card {\\n  --background:#FFFF66;\\n}\\nion-item {\\n  --background:#FFFF66;\\n  height: auto;\\n  min-height: auto;\\n}\\nion-grid {\\n  --background:#FFFF66;\\n}\\nion-input {\\n  text-transform: uppercase;\\n  color: primary !important;\\n}\\nion-card-title {\\n  --color:black;\\n}\\nion-select {\\n  --placeholder-color:black;\\n  --color:black;\\n  --padding-start: 0px;\\n  --inner-padding-end: 0px;\\n  min-width: auto;\\n  max-width: 70%;\\n  height: auto;\\n  min-height: auto;\\n  max-height: 100%;\\n}\\nlabel {\\n  color: black;\\n}\\n.btn-wrapper {\\n  text-align: center;\\n}\\n.input[type=number] {\\n  -moz-appearance: textfield;\\n}\\n.input[type=number]::-webkit-inner-spin-button {\\n  display: none;\\n}\\n.toolbar-title {\\n  text-overflow: inherit;\\n  white-space: normal;\\n  text-align: left;\\n  font-size: 1.3em;\\n}\\n.cell-class {\\n  border-color: black;\\n  border-width: 0.01em;\\n  border-style: solid;\\n}\\n.invalid-class {\\n  border-color: black;\\n  border-width: 0.01em;\\n  border-style: solid;\\n  background: #c9c966;\\n}\\n.row {\\n  height: 100%;\\n}\\n.col {\\n  height: 100%;\\n  border: solid black;\\n}\\n.sc-ion-popover-md-h {\\n  min-width: auto;\\n  min-height: auto;\\n  max-width: 100%;\\n  height: 50%;\\n}\\n.popover-content.sc-ion-popover-md {\\n  position: inherit;\\n  min-width: auto;\\n  max-width: 100%;\\n  height: auto;\\n  min-height: auto;\\n  max-height: 100%;\\n}\\ndiv {\\n  color: black;\\n  background-color: #FFFF66;\\n}\\n.invalid-div {\\n  color: black;\\n  background-color: #c9c966;\\n}\\n.checkbox-div {\\n  background-color: #FFFF66;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbXRyYWMvbXRyYWMucGFnZS5zY3NzIiwiL1VzZXJzL21vamF2ZS9EZXNrdG9wL0VuZ2luZWVyc0xvZ2Jvb2syL3NyYy9hcHAvbXRyYWMvbXRyYWMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQ0FoQjtFQUVJLCtCQUFBO0VBQ0EsdUJBQUE7QURDSjtBQ0VBO0VBQ0UsOEJBQUE7RUFDQSxhQUFBO0VBQ0EsdUJBQUE7QURDRjtBQ0VBO0VBQ0Usb0JBQUE7QURDRjtBQ0VBO0VBQ0Usb0JBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7QURDRjtBQ0VBO0VBQ0Usb0JBQUE7QURDRjtBQ0VBO0VBQ0UseUJBQUE7RUFDQSx5QkFBQTtBRENGO0FDRUE7RUFDRSxhQUFBO0FEQ0Y7QUNFQTtFQUNFLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLG9CQUFBO0VBQ0Esd0JBQUE7RUFDQSxlQUFBO0VBQ0EsY0FBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FEQ0Y7QUNFQTtFQUNFLFlBQUE7QURDRjtBQ0VBO0VBQ0Usa0JBQUE7QURDRjtBQ0dBO0VBRUUsMEJBQUE7QURERjtBQ0FFO0VBQThCLGFBQUE7QURHaEM7QUNDQTtFQUNHLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FERUg7QUNDQTtFQUNFLG1CQUFBO0VBQ0Esb0JBQUE7RUFDQSxtQkFBQTtBREVGO0FDQ0E7RUFDRSxtQkFBQTtFQUNBLG9CQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtBREVGO0FDQ0E7RUFFRSxZQUFBO0FEQ0Y7QUNFQTtFQUNFLFlBQUE7RUFDQSxtQkFBQTtBRENGO0FDRUE7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsV0FBQTtBRENKO0FDRUE7RUFDSSxpQkFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QURDSjtBQ0VBO0VBQ0ksWUFBQTtFQUNBLHlCQUFBO0FEQ0o7QUNFQTtFQUNJLFlBQUE7RUFDQSx5QkFBQTtBRENKO0FDRUE7RUFDSSx5QkFBQTtBRENKIiwiZmlsZSI6InNyYy9hcHAvbXRyYWMvbXRyYWMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuKiB7XG4gIC3igJNpb24tYmFja2dyb3VuZC1jb2xvcjogI0ZGRkY2NjtcbiAgLS1pb24tdGV4dC1jb2xvcjogYmxhY2s7XG59XG5cbmlvbi1jb250ZW50IHtcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjojRkZGRjY2O1xuICAtLWNvbG9yOmJsYWNrO1xuICAtLWlvbi10ZXh0LWNvbG9yOiBibGFjaztcbn1cblxuaW9uLWNhcmQge1xuICAtLWJhY2tncm91bmQ6I0ZGRkY2Njtcbn1cblxuaW9uLWl0ZW0ge1xuICAtLWJhY2tncm91bmQ6I0ZGRkY2NjtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtaW4taGVpZ2h0OiBhdXRvO1xufVxuXG5pb24tZ3JpZCB7XG4gIC0tYmFja2dyb3VuZDojRkZGRjY2O1xufVxuXG5pb24taW5wdXQge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogcHJpbWFyeSAhaW1wb3J0YW50O1xufVxuXG5pb24tY2FyZC10aXRsZSB7XG4gIC0tY29sb3I6YmxhY2s7XG59XG5cbmlvbi1zZWxlY3Qge1xuICAtLXBsYWNlaG9sZGVyLWNvbG9yOmJsYWNrO1xuICAtLWNvbG9yOmJsYWNrO1xuICAtLXBhZGRpbmctc3RhcnQ6IDBweDtcbiAgLS1pbm5lci1wYWRkaW5nLWVuZDogMHB4O1xuICBtaW4td2lkdGg6IGF1dG87XG4gIG1heC13aWR0aDogNzAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIG1pbi1oZWlnaHQ6IGF1dG87XG4gIG1heC1oZWlnaHQ6IDEwMCU7XG59XG5cbmxhYmVsIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4uYnRuLXdyYXBwZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5pbnB1dFt0eXBlPW51bWJlcl0ge1xuICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbn1cbi5pbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4udG9vbGJhci10aXRsZSB7XG4gIHRleHQtb3ZlcmZsb3c6IGluaGVyaXQ7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtc2l6ZTogMS4zZW07XG59XG5cbi5jZWxsLWNsYXNzIHtcbiAgYm9yZGVyLWNvbG9yOiBibGFjaztcbiAgYm9yZGVyLXdpZHRoOiAwLjAxZW07XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG59XG5cbi5pbnZhbGlkLWNsYXNzIHtcbiAgYm9yZGVyLWNvbG9yOiBibGFjaztcbiAgYm9yZGVyLXdpZHRoOiAwLjAxZW07XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJhY2tncm91bmQ6ICNjOWM5NjY7XG59XG5cbi5yb3cge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5jb2wge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlcjogc29saWQgYmxhY2s7XG59XG5cbi5zYy1pb24tcG9wb3Zlci1tZC1oIHtcbiAgbWluLXdpZHRoOiBhdXRvO1xuICBtaW4taGVpZ2h0OiBhdXRvO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNTAlO1xufVxuXG4ucG9wb3Zlci1jb250ZW50LnNjLWlvbi1wb3BvdmVyLW1kIHtcbiAgcG9zaXRpb246IGluaGVyaXQ7XG4gIG1pbi13aWR0aDogYXV0bztcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIG1pbi1oZWlnaHQ6IGF1dG87XG4gIG1heC1oZWlnaHQ6IDEwMCU7XG59XG5cbmRpdiB7XG4gIGNvbG9yOiBibGFjaztcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkY2Njtcbn1cblxuLmludmFsaWQtZGl2IHtcbiAgY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzljOTY2O1xufVxuXG4uY2hlY2tib3gtZGl2IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkY2Njtcbn0iLCIqIHtcbi8vICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7ICAvLyBkaXNhYmxlZCBpdGVtcyB3aWxsIG5vdCBiZSBncmV5IG91dC5cbiAgICAt4oCTaW9uLWJhY2tncm91bmQtY29sb3I6I0ZGRkY2NjtcbiAgICAtLWlvbi10ZXh0LWNvbG9yOiBibGFjaztcbn1cblxuaW9uLWNvbnRlbnR7XG4gIC0taW9uLWJhY2tncm91bmQtY29sb3I6I0ZGRkY2NjtcbiAgLS1jb2xvcjpibGFjaztcbiAgLS1pb24tdGV4dC1jb2xvcjogYmxhY2s7XG59XG5cbmlvbi1jYXJke1xuICAtLWJhY2tncm91bmQ6I0ZGRkY2Njtcbn1cblxuaW9uLWl0ZW17XG4gIC0tYmFja2dyb3VuZDojRkZGRjY2O1xuICBoZWlnaHQ6IGF1dG87XG4gIG1pbi1oZWlnaHQ6IGF1dG87XG59XG5cbmlvbi1ncmlke1xuICAtLWJhY2tncm91bmQ6I0ZGRkY2Njtcbn1cblxuaW9uLWlucHV0e1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogcHJpbWFyeSFpbXBvcnRhbnQ7XG59XG5cbmlvbi1jYXJkLXRpdGxle1xuICAtLWNvbG9yOmJsYWNrO1xufVxuXG5pb24tc2VsZWN0e1xuICAtLXBsYWNlaG9sZGVyLWNvbG9yOmJsYWNrO1xuICAtLWNvbG9yOmJsYWNrO1xuICAtLXBhZGRpbmctc3RhcnQ6IDBweDtcbiAgLS1pbm5lci1wYWRkaW5nLWVuZDogMHB4O1xuICBtaW4td2lkdGg6IGF1dG87XG4gIG1heC13aWR0aDogNzAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIG1pbi1oZWlnaHQ6IGF1dG87XG4gIG1heC1oZWlnaHQ6IDEwMCU7XG59XG5cbmxhYmVse1xuICBjb2xvcjpibGFjaztcbn1cblxuLmJ0bi13cmFwcGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4vLyBkbyBub3Qgc2hvdyBzcGlubmVyIGZvciBudW1iZXIgaW5wdXRzXG4uaW5wdXRbdHlwZT1udW1iZXJdIHsgIFxuICAmOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9ueyBkaXNwbGF5OiBub25lOyB9XG4gIC1tb3otYXBwZWFyYW5jZTp0ZXh0ZmllbGQ7XG59XG5cbi50b29sYmFyLXRpdGxlIHtcbiAgIHRleHQtb3ZlcmZsb3c6IGluaGVyaXQ7XG4gICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgIGZvbnQtc2l6ZToxLjNlbTtcbn1cblxuLmNlbGwtY2xhc3Mge1xuICBib3JkZXItY29sb3I6IGJsYWNrO1xuICBib3JkZXItd2lkdGg6IC4wMWVtO1xuICBib3JkZXItc3R5bGU6c29saWQ7XG59XG5cbi5pbnZhbGlkLWNsYXNzIHtcbiAgYm9yZGVyLWNvbG9yOiBibGFjaztcbiAgYm9yZGVyLXdpZHRoOiAuMDFlbTtcbiAgYm9yZGVyLXN0eWxlOnNvbGlkO1xuICBiYWNrZ3JvdW5kOiNjOWM5NjY7XG59XG5cbi5yb3cge1xuICAvLyBGb3JjZSBncmlkIHRvIGZpbGwgaGVpZ2h0IG9mIGNvbnRlbnQgYXMgdGhpcyBpcyBub3Qgc2V0IGJ5IGRlZmF1bHRcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uY29se1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlcjogc29saWQgYmxhY2s7XG59XG5cbi5zYy1pb24tcG9wb3Zlci1tZC1oIHtcbiAgICBtaW4td2lkdGg6IGF1dG87XG4gICAgbWluLWhlaWdodDogYXV0bztcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiA1MCU7XG59XG5cbi5wb3BvdmVyLWNvbnRlbnQuc2MtaW9uLXBvcG92ZXItbWQge1xuICAgIHBvc2l0aW9uOiBpbmhlcml0O1xuICAgIG1pbi13aWR0aDogYXV0bztcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG1pbi1oZWlnaHQ6IGF1dG87XG4gICAgbWF4LWhlaWdodDogMTAwJTtcbn1cblxuZGl2e1xuICAgIGNvbG9yOiBibGFjaztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRjY2O1xufVxuXG4uaW52YWxpZC1kaXZ7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNjOWM5NjY7XG59XG5cbi5jaGVja2JveC1kaXZ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkY2Njtcbn0iXX0= */\"","import { Component, OnInit, wtfStartTimeRange } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { DatabaseService, VehicleTypes } from '../services/database.service';\nimport { ToastController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport * as dayjs from 'dayjs'; // Datetime utility, See http://zetcode.com/javascript/dayjs/\n\n@Component({\n  selector: 'app-mtrac',\n  templateUrl: './mtrac.page.html',\n  styleUrls: ['./mtrac.page.scss'],\n})\n\nexport class mtracPage implements OnInit {\n\n  mtracForm: FormGroup;\n  errorMessage = '';\n  successMessage = '';\n  toast: any;\n  today = new Date().toISOString();\n  updateStatus;\n  checkboxstatus = false;\n\n  validationMessages = {\n    date: [\n        { type: 'required', message: 'Date is required.' }],\n    vehicleNumber: [\n        { type: 'required', message: 'Vehicle Number is required.' },\n        { type: 'minlength', message: 'Vehicle number must be at least 5 characters long.' }],\n    time: [\n        { type: 'required', message: 'Enter current time' },],\n    licenseType: [\n        { type: 'required', message: 'choose license type' },],\n    rest: [\n        { type: 'required', message: 'choose rest' },],\n    health: [\n        { type: 'required', message: 'choose health' },],\n    weather: [\n        { type: 'required', message: 'choose weather' },],\n    route: [\n        { type: 'required', message: 'choose route' },],\n    detailType: [\n        { type: 'required', message: 'choose detail type' },],\n    vc: [\n        { type: 'required', message: 'choose vc' },],\n    vehicleServiceability: [\n        { type: 'required', message: 'choose vehicle serviceability' },],\n    startLocation: [\n        { type: 'required', message: 'enter start location' },],\n    endLocation: [\n        { type: 'required', message: 'enter end location' },],\n\n\n};\n\n  constructor(\n    private navCtrl: NavController,\n    private formBuilder: FormBuilder,\n    public toastController: ToastController,\n    public database: DatabaseService,\n    public route: ActivatedRoute\n  ) { }\n\n    ngOnInit() {\n      this.mtracForm = this.formBuilder.group({\n      vehicleNumber: new FormControl('', Validators.compose([Validators.minLength(5), Validators.required])),\n      licenseType: new FormControl('', Validators.compose([Validators.required])),\n      vehicleType: new FormControl('', Validators.compose([Validators.required])),\n      rest: new FormControl('', Validators.compose([Validators.required])),\n      health: new FormControl('', Validators.compose([Validators.required])),\n      weather: new FormControl('', Validators.compose([Validators.required])),\n      route: new FormControl('', Validators.compose([Validators.required])),\n      detailType: new FormControl('', Validators.compose([Validators.required])),\n      vc: new FormControl('', Validators.compose([Validators.required])),\n      vehicleServiceability: new FormControl('', Validators.compose([Validators.required])),\n      incamp: new FormControl('', Validators.compose([Validators.required])),\n      startLocation: new FormControl('', Validators.compose([Validators.required])),\n      endLocation: new FormControl('', Validators.compose([Validators.required])),\n    });\n  }\n\n  public setcheckboxstatus(){\n    this.checkboxstatus =! this.checkboxstatus;\n  }\n\n  public getcheckboxstatus(){\n    return this.checkboxstatus;\n  }\n\n  gettime() {\n    var cd = new Date(); // for now\n    var nmtmoringstart = new Date();\n    nmtmoringstart.setHours(7,30,0);\n    var nmtmoringend = new Date();\n    nmtmoringend.setHours(9,30,0);\n    var nmtnightstart = new Date();\n    nmtnightstart.setHours(7,30,0);\n    var nmtnightend = new Date();\n    nmtnightend.setHours(9,30,0);\n    if (cd >= nmtmoringstart && cd < nmtmoringend){\n      return false;\n    }\n    if (cd >= nmtnightstart && cd < nmtnightend){\n      return false;\n    }\n    return true;\n  }\n\n  getcdt() {\n    var cd = new Date(); // for now\n    var cdt = cd.getDate() + \"/\"\n                + (cd.getMonth()+1)  + \"/\"\n                + cd.getFullYear() + \" @ \"\n                + this.timenow();\n    return cdt\n    }\n\n  timenow() {\n    var ct = new Date(); // for now\n    var r = \"\";\n    if (ct.getHours() < 10) {\n        r += 0;\n        r += ct.getHours();\n    }\n    else {\n        r += ct.getHours();\n    }\n    r += \":\";\n    if (ct.getMinutes() < 10) {\n        r += 0;\n        r += ct.getMinutes();\n    }\n    else {\n        r += ct.getMinutes();\n    }\n    return r;\n  }\n\n  public getapprovedvtypes(): string[] {\n        var vtypes =  VehicleTypes\n        if (this.database.current.user.mss_certified != true) {\n            vtypes = vtypes.filter( vtype => vtype != 'MSS');\n        }\n        if (this.database.current.user.flb_certified != true) {\n            vtypes = vtypes.filter( vtype => vtype != 'FLB');\n        }\n        if (this.database.current.user.belrex_certified != true) {\n            vtypes = vtypes.filter( vtype => vtype != 'BELREX');\n        return vtypes\n        }\n  }\n\n  onCancel() {\n    this.navCtrl.pop();\n  }\n\n  showSubmit() {\n    return true;\n  }\n\n  showToast(msg) {\n    this.toastController.create({\n      message: msg,\n      duration: 2000,\n      //  showCloseButton: true,\n      //  closeButtonText: 'OK',\n      position: 'bottom'\n    }).then((obj) => {\n      obj.present();\n    });\n  }\n\n  getoverallrisk() {\n    var licenseType = this.mtracForm.value.licenseType;\n    var vehicleType = this.mtracForm.value.vehicleType;\n    var rest = this.mtracForm.value.rest;\n    var health = this.mtracForm.value.health;\n    var weather = this.mtracForm.value.weather;\n    var route = this.mtracForm.value.route;\n    var detailType = this.mtracForm.value.detailType;\n    var vc = this.mtracForm.value.vc;\n    var vehicleServiceability = this.mtracForm.value.vehicleServiceability;\n    var incamp = this.mtracForm.value.incamp;\n    if (licenseType==\"N\" || health==\"N\" || vc==\"N\" || vehicleServiceability==\"N\" || !this.mtracForm.valid) {\n        return false;\n    }\n    else if (licenseType==\"H\" || vehicleType==\"H\" || rest==\"H\" || health==\"H\" || weather==\"H\" || route==\"H\" || detailType==\"H\" || vc==\"H\" || vehicleServiceability==\"H\") {\n        return \"HIGH\";\n    }\n    else if (licenseType==\"M\" || vehicleType==\"M\" || rest==\"M\" || health==\"M\" || weather==\"M\" || route==\"M\" || detailType==\"M\" || vc==\"M\" || vehicleServiceability==\"M\") {\n        return \"MEDIUM\";\n    }\n    else if (licenseType==\"L\" || vehicleType==\"L\" || rest==\"L\" || health==\"L\" || weather==\"L\" || route==\"L\" || detailType==\"L\" || vc==\"L\" || vehicleServiceability==\"L\") {\n        return \"LOW\";\n    }\n  }\n\n  /*async addmtrac(value)\n  {\n      try {\n        const time2 = dayjs(new Date(this.mtracForm.value.time)).format('HH:mm');\n        var new_mtrac: mtrac =\n        {\n          created: this.database.getTimeStamp(),\n          driver: this.database.current.user.email,\n          // Stage-1 details\n          vehicle_number: this.mtracForm.value.vehicleNumber,\n          vehicle_type: this.mtracForm.value.vehicleType,\n          date: (this.mtracForm.value.date).split('T')[0],\n          location: this.mtracForm.value.location,\n          time: time2,\n          fleet: this.database.current.user.fleet,\n          company: this.database.current.user.company,\n          licenseType: this.mtracForm.value.licenseType,\n          vehicleType: this.mtracForm.value.vehicleType,\n          rest: this.mtracForm.value.rest,\n          health: this.mtracForm.value.health,\n          weather: this.mtracForm.value.weather,\n          route: this.mtracForm.value.route,\n          detailType: this.mtracForm.value.detailType,\n          vc: this.mtracForm.value.vc,\n          vehicleServiceability: this.mtracForm.value.vehicleServiceability,\n          incamp: this.mtracForm.value.incamp,\n        };\n        let subAutoID = this.database.collection('mtrac').doc().id;\n        new_mtrac.id = subAutoID\n        console.log('new_mtrac=${JSON.stringify(new_mtrac)}');\n        await this.database.write('mtrac', new_mtrac.id, new_mtrac);\n        this.errorMessage = '';\n        this.successMessage = 'Your mtrac has been added.';\n\n        this.showToast(this.successMessage);\n        this.navCtrl.pop();\n      } catch (err) {\n\n        this.errorMessage = `Add Fuel error: ${err}`;\n        this.successMessage = '';\n\n        this.showToast(this.errorMessage);\n        this.navCtrl.pop();\n      }\n  }*/\n\n}\n"],"sourceRoot":"webpack:///"}