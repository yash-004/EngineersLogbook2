function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["home-home-module"], {
  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/home/home.page.html":
  /*!***************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/home/home.page.html ***!
    \***************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppHomeHomePageHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<ion-content padding id='login-content'>\n\n  <form class=\"form\" [formGroup]=\"validationsForm\"  (ngSubmit)=\"loginUser(validationsForm.value)\">\n    <ion-item class=\"textfield\" no-padding id='email'>\n      <ion-label class=\"textfield\" position=\"floating\">Email</ion-label>\n      <ion-input type=\"email\" formControlName=\"email\" name=\"email\"></ion-input>\n    </ion-item>\n\n    <!--div class=\"validation-errors\">\n      <ng-container *ngFor=\"let validation of validationMessages.email\">\n        <div class=\"error-message\" *ngIf=\"validationsForm.get('email').hasError(validation.type) && (validationsForm.get('email').dirty || validationsForm.get('email').touched)\">\n          {{ validation.message }}\n        </div>\n      </ng-container>\n    </div-->\n\n    <ion-item class=\"textfield\" fill=\"outline\" no-padding id='password'>\n      <ion-label class=\"textfield\" position=\"floating\">Password</ion-label>\n      <ion-input type=\"password\" formControlName=\"password\" class=\"form-control\" required ></ion-input>\n    </ion-item>\n\n    <!--div class=\"validation-errors\">\n      <ng-container *ngFor=\"let validation of validationMessages.password\">\n        <div class=\"error-message\" *ngIf=\"validationsForm.get('password').hasError(validation.type) && (validationsForm.get('password').dirty || validationsForm.get('password').touched)\">\n          {{ validation.message }}\n        </div>\n      </ng-container>\n    </div-->\n\n    <label class=\"error-message\">{{errorMessage}}</label>\n\n    <ion-button class=\"submit-btn\" type=\"submit\" fill=\"solid\" expand=\"block\" [disabled]=\"!validationsForm.valid\" >Login</ion-button>\n\n  </form>\n  <ion-button class='signup-btn' fill=\"outline\" routerLink=\"/signup\" expand=\"block\">Sign up</ion-button>\n\n<!--\n  <ion-button class='offline-btn' fill=\"outline\" routerLink=\"/offline\" expand=\"block\">Offline Mode</ion-button>\n-->\n\n      <ion-list>\n        <ion-item lines=\"full\">\n          <ion-icon slot=\"start\" name=\"moon\"></ion-icon>\n          <ion-label>\n            Toggle Dark Theme\n          </ion-label>\n          <ion-toggle [(ngModel)]=\"toggle_dark_mode\" id=\"themeToggle\" slot=\"end\"></ion-toggle>\n        </ion-item>\n      </ion-list>\n\n      <div text-center>\n        <img src=\"assets/30SCE.png\">\n      </div>\n\n  <!-- FOR DEBUGGING ONLY -->\n\n  <!--<div id='debug-stuff' style=\"position:relative; top:5em;\" *ngIf=\"debugging_mode\">\n    <ion-button size='small' fill=\"outline\" (click)=\"debug('driver')\" clear>Debug Driver</ion-button>\n    <ion-button size='small' fill=\"outline\" (click)=\"debug('commander')\" clear>Debug Commander</ion-button>\n    <ion-button size='small' fill=\"outline\" (click)=\"debug('admin')\" clear>Debug Admin</ion-button>\n    &lt;!&ndash;ion-button (click)=\"changeTheme('autumn')\">Autumn</ion-button>\n    <ion-button (click)=\"changeTheme('night')\">Dark</ion-button>\n    <ion-button (click)=\"changeTheme('neon')\">Neon</ion-button> &ndash;&gt;\n  </div>-->\n\n\n</ion-content>\n";
    /***/
  },

  /***/
  "./src/app/home/home.module.ts":
  /*!*************************************!*\
    !*** ./src/app/home/home.module.ts ***!
    \*************************************/

  /*! exports provided: HomePageModule */

  /***/
  function srcAppHomeHomeModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "HomePageModule", function () {
      return HomePageModule;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _ionic_angular__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @ionic/angular */
    "./node_modules/@ionic/angular/dist/fesm5.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _home_page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./home.page */
    "./src/app/home/home.page.ts");

    var HomePageModule = function HomePageModule() {
      _classCallCheck(this, HomePageModule);
    };

    HomePageModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"], _ionic_angular__WEBPACK_IMPORTED_MODULE_3__["IonicModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["ReactiveFormsModule"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["RouterModule"].forChild([{
        path: '',
        component: _home_page__WEBPACK_IMPORTED_MODULE_6__["HomePage"]
      }])],
      declarations: [_home_page__WEBPACK_IMPORTED_MODULE_6__["HomePage"]]
    })], HomePageModule);
    /***/
  },

  /***/
  "./src/app/home/home.page.scss":
  /*!*************************************!*\
    !*** ./src/app/home/home.page.scss ***!
    \*************************************/

  /*! exports provided: default */

  /***/
  function srcAppHomeHomePageScss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "ion-content {\n  --padding-start: 10%;\n  --padding-end: 10%;\n  --padding-top: 10%;\n}\nion-content .rounded {\n  border-radius: 5px;\n}\nion-content .textfield {\n  --background: transparent;\n}\nion-content .error-message {\n  color: red;\n  font-size: 0.8em;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tb2phdmUvRGVza3RvcC9FbmdpbmVlcnNMb2dib29rMi9zcmMvYXBwL2hvbWUvaG9tZS5wYWdlLnNjc3MiLCJzcmMvYXBwL2hvbWUvaG9tZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFJRSxvQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7QUNIRjtBRFVFO0VBR0Usa0JBQUE7QUNSSjtBRFVFO0VBQ0UseUJBQUE7QUNSSjtBRFVFO0VBQ0UsVUFBQTtFQUNBLGdCQUFBO0FDUkoiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pb24tY29udGVudCB7XG5cbi8vICBvcGFjaXR5OiAwOyAgIC8vIGFuaW1lanMgd2lsbCBmYWRlIHRoaXMgaW5cbiAgXG4gIC0tcGFkZGluZy1zdGFydDogMTAlO1xuICAtLXBhZGRpbmctZW5kOiAxMCU7XG4gIC0tcGFkZGluZy10b3A6IDEwJTtcblxuICAvLyBodHRwczovL3d3dy5jc3NtYXRpYy5jb20vZ3JhZGllbnQtZ2VuZXJhdG9yXG4gIC8vYmFja2dyb3VuZDogLW1vei1saW5lYXItZ3JhZGllbnQobGVmdCwgcmdiYSgzMyw1Myw5LDEpMCUsICByZ2JhKDEwNCwxMzMsODEsMSkgIDEwMCUpO1xuICAvLy0taW9uLWJhY2tncm91bmQtY29sb3I6IG5vbmU7XG4gIC8vLS1pb24tdGV4dC1jb2xvcjojMDAwMDAwO1xuICAgIFxuICAucm91bmRlZCB7XG4gICAgLW1vei1ib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICB9XG4gIC50ZXh0ZmllbGQge1xuICAgIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIH1cbiAgLmVycm9yLW1lc3NhZ2Uge1xuICAgIGNvbG9yOiByZWQ7XG4gICAgZm9udC1zaXplOiAwLjhlbTtcbiAgfVxufVxuIiwiaW9uLWNvbnRlbnQge1xuICAtLXBhZGRpbmctc3RhcnQ6IDEwJTtcbiAgLS1wYWRkaW5nLWVuZDogMTAlO1xuICAtLXBhZGRpbmctdG9wOiAxMCU7XG59XG5pb24tY29udGVudCAucm91bmRlZCB7XG4gIC1tb3otYm9yZGVyLXJhZGl1czogNXB4O1xuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuaW9uLWNvbnRlbnQgLnRleHRmaWVsZCB7XG4gIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5pb24tY29udGVudCAuZXJyb3ItbWVzc2FnZSB7XG4gIGNvbG9yOiByZWQ7XG4gIGZvbnQtc2l6ZTogMC44ZW07XG59Il19 */";
    /***/
  },

  /***/
  "./src/app/home/home.page.ts":
  /*!***********************************!*\
    !*** ./src/app/home/home.page.ts ***!
    \***********************************/

  /*! exports provided: HomePage */

  /***/
  function srcAppHomeHomePageTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "HomePage", function () {
      return HomePage;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _ionic_angular__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @ionic/angular */
    "./node_modules/@ionic/angular/dist/fesm5.js");
    /* harmony import */


    var _services_authentication_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../services/authentication.service */
    "./src/app/services/authentication.service.ts");
    /* harmony import */


    var _services_database_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../services/database.service */
    "./src/app/services/database.service.ts");
    /* harmony import */


    var _services_messaging_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../services/messaging.service */
    "./src/app/services/messaging.service.ts");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var _ionic_storage__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @ionic/storage */
    "./node_modules/@ionic/storage/fesm2015/ionic-storage.js");
    /* harmony import */


    var _services_anime_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../services/anime.js */
    "./src/app/services/anime.js");
    /* harmony import */


    var _services_anime_js__WEBPACK_IMPORTED_MODULE_9___default =
    /*#__PURE__*/
    __webpack_require__.n(_services_anime_js__WEBPACK_IMPORTED_MODULE_9__); //import { ThemeService } from '../services/theme.service';
    // For splash animation


    var HomePage =
    /*#__PURE__*/
    function () {
      function HomePage(navCtrl, authService, database, messaging, formBuilder, loadingCtrl, storage //,private theme: ThemeService
      ) {
        _classCallCheck(this, HomePage);

        this.navCtrl = navCtrl;
        this.authService = authService;
        this.database = database;
        this.messaging = messaging;
        this.formBuilder = formBuilder;
        this.loadingCtrl = loadingCtrl;
        this.storage = storage;
        this.errorMessage = '';
        this.validationMessages = {
          email: [{
            type: 'required',
            message: 'Email is required.'
          }, {
            type: 'pattern',
            message: 'Invalid email.'
          }],
          // TODO: Validate password security at sign-up page only
          password: [{
            type: 'required',
            message: 'Password is required.'
          }, {
            type: 'minlength',
            message: 'Password must be at least 6 characters long.'
          }]
        };
        this.debugging_mode = true;
        this.toggle_dark_mode = false; //this.animate();
      }

      _createClass(HomePage, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this = this;

          this.debugging_mode = !_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].production; // --prod

          this.validationsForm = this.formBuilder.group({
            email: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')])),
            password: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].minLength(6), _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]))
          }); // Restore used user/password

          this.storage.get('email').then(function (value) {
            _this.validationsForm.get('email').setValue(value);
          });
          this.storage.get('password').then(function (value) {
            _this.validationsForm.get('password').setValue(value);
          }); // Query for the toggle that is used to change between themes
          // Note: "dark" colors are defined in theme/variables.scss

          var toggle = document.querySelector('#themeToggle');
          toggle.addEventListener('ionChange', function (ev) {
            document.body.classList.toggle('dark', ev.detail.checked);

            _this.storage.set('dark', ev.detail.checked);
          });
          this.storage.get('dark').then(function (value) {
            document.body.classList.toggle('dark', value);
            _this.toggle_dark_mode = value; // This will also set ngModel for ion-toggle
          });
        }
      }, {
        key: "loginUser",
        value: function loginUser(input) {
          return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0,
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee() {
            var _this2 = this;

            var res;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    console.log("> Attempting login: ".concat(input.email)); // Loading spinner overlay

                    _context.next = 3;
                    return this.loadingCtrl.create({
                      message: "Authenticating..."
                    });

                  case 3:
                    this.loading = _context.sent;
                    this.loading.present();
                    _context.prev = 5;
                    _context.next = 8;
                    return this.authService.loginUser(input);

                  case 8:
                    res = _context.sent;
                    console.log("> Firebase authentication is successful: ".concat(res.user.email)); // Init database, retrieve user/drives info    

                    this.setLoadingText("Reading database...");
                    _context.next = 13;
                    return this.database.init(res.user.email);

                  case 13:
                    console.log("> Finished loading user: ".concat(res.user.email)); // Init cloud messaging/notifications

                    this.setLoadingText("Initializing cloud messaging...");
                    _context.next = 17;
                    return this.messaging.init(res.user.email);

                  case 17:
                    this.setLoadingText("Login success.");
                    setTimeout(function () {
                      _this2.loading.dismiss();
                    }, 2000); // Done initialization

                    if (this.database.current.user.is_commander) {
                      this.navCtrl.navigateForward('/tabs/commander');
                    } else {
                      this.navCtrl.navigateForward('/tabs/summary');
                    }

                    this.errorMessage = ''; // On successful login, save it      

                    this.storage.set('email', input.email);
                    this.storage.set('password', input.password);
                    _context.next = 29;
                    break;

                  case 25:
                    _context.prev = 25;
                    _context.t0 = _context["catch"](5);
                    this.loading.dismiss();
                    this.errorMessage = "Login failed. ".concat(_context.t0);

                  case 29:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee, this, [[5, 25]]);
          }));
        }
      }, {
        key: "setLoadingText",
        value: function setLoadingText(text) {
          var elem = document.querySelector("div.loading-wrapper div.loading-content");
          if (elem) elem.innerHTML = text;
        }
      }, {
        key: "debug",
        value: function debug(who) {
          if (who === 'driver') {
            this.validationsForm.get('email').setValue('tan97@gmail.com');
            this.validationsForm.get('password').setValue('123456');
          } else if (who === 'commander') {
            this.validationsForm.get('email').setValue('lee55@gmail.com');
            this.validationsForm.get('password').setValue('123456');
          } else if (who === 'admin') {
            this.validationsForm.get('email').setValue('superuser@gmail.com');
            this.validationsForm.get('password').setValue('123456');
          }
        }
      }, {
        key: "animate",
        value: function animate() {
          // Only start animation when background image has finished loading
          document.body.classList.add('js-loading');
          window.addEventListener("load", function () {
            document.body.classList.remove('js-loading');
            console.log("Inside window::load");

            _services_anime_js__WEBPACK_IMPORTED_MODULE_9__["timeline"]({
              loop: false
            }).add({
              targets: '#login-content',
              opacity: [0, 1],
              duration: 3000,
              easing: "easeOutExpo"
            }).add({
              targets: '#email',
              opacity: [0, 1],
              translateY: ["50em", 0],
              duration: 800,
              easing: "easeOutBack",
              offset: '-=3000'
            }).add({
              targets: '#password',
              opacity: [0, 1],
              translateY: ["50em", 0],
              duration: 800,
              easing: "easeOutBack",
              offset: '-=2500'
            }).add({
              targets: '.submit-btn',
              opacity: [0, 1],
              translateY: ["50em", 0],
              duration: 800,
              easing: "easeOutBack",
              offset: '-=2250'
            }).add({
              targets: '.signup-btn',
              opacity: [0, 1],
              translateY: ["50em", 0],
              duration: 800,
              easing: "easeOutBack",
              offset: '-=2000'
            }).add({
              targets: '#debug-stuff',
              opacity: [0, 1],
              duration: 800,
              easing: "easeOutBack",
              offset: '-=1000'
            });
          });
        }
      }]);

      return HomePage;
    }();

    HomePage.ctorParameters = function () {
      return [{
        type: _ionic_angular__WEBPACK_IMPORTED_MODULE_3__["NavController"]
      }, {
        type: _services_authentication_service__WEBPACK_IMPORTED_MODULE_4__["AuthenticationService"]
      }, {
        type: _services_database_service__WEBPACK_IMPORTED_MODULE_5__["DatabaseService"]
      }, {
        type: _services_messaging_service__WEBPACK_IMPORTED_MODULE_6__["MessagingService"]
      }, {
        type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
      }, {
        type: _ionic_angular__WEBPACK_IMPORTED_MODULE_3__["LoadingController"]
      }, {
        type: _ionic_storage__WEBPACK_IMPORTED_MODULE_8__["Storage"]
      }];
    };

    HomePage = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-home',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./home.page.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/home/home.page.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./home.page.scss */
      "./src/app/home/home.page.scss"))["default"]]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ionic_angular__WEBPACK_IMPORTED_MODULE_3__["NavController"], _services_authentication_service__WEBPACK_IMPORTED_MODULE_4__["AuthenticationService"], _services_database_service__WEBPACK_IMPORTED_MODULE_5__["DatabaseService"], _services_messaging_service__WEBPACK_IMPORTED_MODULE_6__["MessagingService"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _ionic_angular__WEBPACK_IMPORTED_MODULE_3__["LoadingController"], _ionic_storage__WEBPACK_IMPORTED_MODULE_8__["Storage"] //,private theme: ThemeService
    ])], HomePage);
    /***/
  },

  /***/
  "./src/app/services/anime.js":
  /*!***********************************!*\
    !*** ./src/app/services/anime.js ***!
    \***********************************/

  /*! no static exports found */

  /***/
  function srcAppServicesAnimeJs(module, exports, __webpack_require__) {
    var _this3 = this;

    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
    /**
    * http://animejs.com
    * JavaScript animation engine
    * @version v2.2.0
    * @author Julian Garnier
    * @copyright ©2017 Julian Garnier
    * Released under the MIT license
    **/


    (function (root, factory) {
      if (true) {
        // AMD. Register as an anonymous module.
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
      } else {}
    })(this, function () {
      // Defaults
      var defaultInstanceSettings = {
        update: undefined,
        begin: undefined,
        run: undefined,
        complete: undefined,
        loop: 1,
        direction: 'normal',
        autoplay: true,
        offset: 0
      };
      var defaultTweenSettings = {
        duration: 1000,
        delay: 0,
        easing: 'easeOutElastic',
        elasticity: 500,
        round: 0
      };
      var validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skewX', 'skewY', 'perspective'];
      var transformString; // Utils

      function stringContains(str, text) {
        return str.indexOf(text) > -1;
      }

      var is = {
        arr: function arr(a) {
          return Array.isArray(a);
        },
        obj: function obj(a) {
          return stringContains(Object.prototype.toString.call(a), 'Object');
        },
        pth: function pth(a) {
          return is.obj(a) && a.hasOwnProperty('totalLength');
        },
        svg: function svg(a) {
          return a instanceof SVGElement;
        },
        dom: function dom(a) {
          return a.nodeType || is.svg(a);
        },
        str: function str(a) {
          return typeof a === 'string';
        },
        fnc: function fnc(a) {
          return typeof a === 'function';
        },
        und: function und(a) {
          return typeof a === 'undefined';
        },
        hex: function hex(a) {
          return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a);
        },
        rgb: function rgb(a) {
          return /^rgb/.test(a);
        },
        hsl: function hsl(a) {
          return /^hsl/.test(a);
        },
        col: function col(a) {
          return is.hex(a) || is.rgb(a) || is.hsl(a);
        }
      }; // BezierEasing https://github.com/gre/bezier-easing

      var bezier = function () {
        var kSplineTableSize = 11;
        var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);

        function A(aA1, aA2) {
          return 1.0 - 3.0 * aA2 + 3.0 * aA1;
        }

        ;

        function B(aA1, aA2) {
          return 3.0 * aA2 - 6.0 * aA1;
        }

        ;

        function C(aA1) {
          return 3.0 * aA1;
        }

        ;

        function calcBezier(aT, aA1, aA2) {
          return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
        }

        ;

        function getSlope(aT, aA1, aA2) {
          return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
        }

        ;

        function binarySubdivide(aX, aA, aB, mX1, mX2) {
          var currentX,
              currentT,
              i = 0;

          do {
            currentT = aA + (aB - aA) / 2.0;
            currentX = calcBezier(currentT, mX1, mX2) - aX;

            if (currentX > 0.0) {
              aB = currentT;
            } else {
              aA = currentT;
            }

            ;
          } while (Math.abs(currentX) > 0.0000001 && ++i < 10);

          return currentT;
        }

        function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
          for (var i = 0; i < 4; ++i) {
            var currentSlope = getSlope(aGuessT, mX1, mX2);
            if (currentSlope === 0.0) return aGuessT;
            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
            aGuessT -= currentX / currentSlope;
          }

          return aGuessT;
        }

        function bezier(mX1, mY1, mX2, mY2) {
          if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) return;
          var sampleValues = new Float32Array(kSplineTableSize);

          if (mX1 !== mY1 || mX2 !== mY2) {
            for (var i = 0; i < kSplineTableSize; ++i) {
              sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
            }
          }

          function getTForX(aX) {
            var intervalStart = 0.0;
            var currentSample = 1;
            var lastSample = kSplineTableSize - 1;

            for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
              intervalStart += kSampleStepSize;
            }

            --currentSample;
            var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
            var guessForT = intervalStart + dist * kSampleStepSize;
            var initialSlope = getSlope(guessForT, mX1, mX2);

            if (initialSlope >= 0.001) {
              return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
            } else if (initialSlope === 0.0) {
              return guessForT;
            } else {
              return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
            }
          }

          return function (x) {
            if (mX1 === mY1 && mX2 === mY2) return x;
            if (x === 0) return 0;
            if (x === 1) return 1;
            return calcBezier(getTForX(x), mY1, mY2);
          };
        }

        return bezier;
      }();

      var easings = function () {
        var names = ['Quad', 'Cubic', 'Quart', 'Quint', 'Sine', 'Expo', 'Circ', 'Back', 'Elastic']; // Elastic easing adapted from jQueryUI http://api.jqueryui.com/easings/

        function elastic(t, p) {
          return t === 0 || t === 1 ? t : -Math.pow(2, 10 * (t - 1)) * Math.sin((t - 1 - p / (Math.PI * 2.0) * Math.asin(1)) * (Math.PI * 2) / p);
        } // Approximated Penner equations http://matthewlein.com/ceaser/


        var equations = {
          In: [[0.550, 0.085, 0.680, 0.530],
          /* InQuad */
          [0.550, 0.055, 0.675, 0.190],
          /* InCubic */
          [0.895, 0.030, 0.685, 0.220],
          /* InQuart */
          [0.755, 0.050, 0.855, 0.060],
          /* InQuint */
          [0.470, 0.000, 0.745, 0.715],
          /* InSine */
          [0.950, 0.050, 0.795, 0.035],
          /* InExpo */
          [0.600, 0.040, 0.980, 0.335],
          /* InCirc */
          [0.600, -0.280, 0.735, 0.045],
          /* InBack */
          elastic
          /* InElastic */
          ],
          Out: [[0.250, 0.460, 0.450, 0.940],
          /* OutQuad */
          [0.215, 0.610, 0.355, 1.000],
          /* OutCubic */
          [0.165, 0.840, 0.440, 1.000],
          /* OutQuart */
          [0.230, 1.000, 0.320, 1.000],
          /* OutQuint */
          [0.390, 0.575, 0.565, 1.000],
          /* OutSine */
          [0.190, 1.000, 0.220, 1.000],
          /* OutExpo */
          [0.075, 0.820, 0.165, 1.000],
          /* OutCirc */
          [0.175, 0.885, 0.320, 1.275],
          /* OutBack */
          function (t, f) {
            return 1 - elastic(1 - t, f);
          }
          /* OutElastic */
          ],
          InOut: [[0.455, 0.030, 0.515, 0.955],
          /* InOutQuad */
          [0.645, 0.045, 0.355, 1.000],
          /* InOutCubic */
          [0.770, 0.000, 0.175, 1.000],
          /* InOutQuart */
          [0.860, 0.000, 0.070, 1.000],
          /* InOutQuint */
          [0.445, 0.050, 0.550, 0.950],
          /* InOutSine */
          [1.000, 0.000, 0.000, 1.000],
          /* InOutExpo */
          [0.785, 0.135, 0.150, 0.860],
          /* InOutCirc */
          [0.680, -0.550, 0.265, 1.550],
          /* InOutBack */
          function (t, f) {
            return t < .5 ? elastic(t * 2, f) / 2 : 1 - elastic(t * -2 + 2, f) / 2;
          }
          /* InOutElastic */
          ]
        };
        var functions = {
          linear: bezier(0.250, 0.250, 0.750, 0.750)
        };

        var _loop = function _loop(type) {
          equations[type].forEach(function (f, i) {
            functions['ease' + type + names[i]] = is.fnc(f) ? f : bezier.apply(_this3, f);
          });
        };

        for (var type in equations) {
          _loop(type);
        }

        return functions;
      }(); // Strings


      function stringToHyphens(str) {
        return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
      }

      function selectString(str) {
        if (is.col(str)) return;

        try {
          var nodes = document.querySelectorAll(str);
          return nodes;
        } catch (e) {
          return;
        }
      } // Arrays


      function filterArray(arr, callback) {
        var len = arr.length;
        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;
        var result = [];

        for (var i = 0; i < len; i++) {
          if (i in arr) {
            var val = arr[i];

            if (callback.call(thisArg, val, i, arr)) {
              result.push(val);
            }
          }
        }

        return result;
      }

      function flattenArray(arr) {
        return arr.reduce(function (a, b) {
          return a.concat(is.arr(b) ? flattenArray(b) : b);
        }, []);
      }

      function toArray(o) {
        if (is.arr(o)) return o;
        if (is.str(o)) o = selectString(o) || o;
        if (o instanceof NodeList || o instanceof HTMLCollection) return [].slice.call(o);
        return [o];
      }

      function arrayContains(arr, val) {
        return arr.some(function (a) {
          return a === val;
        });
      } // Objects


      function cloneObject(o) {
        var clone = {};

        for (var p in o) {
          clone[p] = o[p];
        }

        return clone;
      }

      function replaceObjectProps(o1, o2) {
        var o = cloneObject(o1);

        for (var p in o1) {
          o[p] = o2.hasOwnProperty(p) ? o2[p] : o1[p];
        }

        return o;
      }

      function mergeObjects(o1, o2) {
        var o = cloneObject(o1);

        for (var p in o2) {
          o[p] = is.und(o1[p]) ? o2[p] : o1[p];
        }

        return o;
      } // Colors


      function rgbToRgba(rgbValue) {
        var rgb = /rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g.exec(rgbValue);
        return rgb ? "rgba(".concat(rgb[1], ",1)") : rgbValue;
      }

      function hexToRgba(hexValue) {
        var rgx = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
        var hex = hexValue.replace(rgx, function (m, r, g, b) {
          return r + r + g + g + b + b;
        });
        var rgb = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
        var r = parseInt(rgb[1], 16);
        var g = parseInt(rgb[2], 16);
        var b = parseInt(rgb[3], 16);
        return "rgba(".concat(r, ",").concat(g, ",").concat(b, ",1)");
      }

      function hslToRgba(hslValue) {
        var hsl = /hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g.exec(hslValue) || /hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g.exec(hslValue);
        var h = parseInt(hsl[1]) / 360;
        var s = parseInt(hsl[2]) / 100;
        var l = parseInt(hsl[3]) / 100;
        var a = hsl[4] || 1;

        function hue2rgb(p, q, t) {
          if (t < 0) t += 1;
          if (t > 1) t -= 1;
          if (t < 1 / 6) return p + (q - p) * 6 * t;
          if (t < 1 / 2) return q;
          if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
          return p;
        }

        var r, g, b;

        if (s == 0) {
          r = g = b = l;
        } else {
          var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
          var p = 2 * l - q;
          r = hue2rgb(p, q, h + 1 / 3);
          g = hue2rgb(p, q, h);
          b = hue2rgb(p, q, h - 1 / 3);
        }

        return "rgba(".concat(r * 255, ",").concat(g * 255, ",").concat(b * 255, ",").concat(a, ")");
      }

      function colorToRgb(val) {
        if (is.rgb(val)) return rgbToRgba(val);
        if (is.hex(val)) return hexToRgba(val);
        if (is.hsl(val)) return hslToRgba(val);
      } // Units


      function getUnit(val) {
        var split = /([\+\-]?[0-9#\.]+)(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(val);
        if (split) return split[2];
      }

      function getTransformUnit(propName) {
        if (stringContains(propName, 'translate') || propName === 'perspective') return 'px';
        if (stringContains(propName, 'rotate') || stringContains(propName, 'skew')) return 'deg';
      } // Values


      function minMaxValue(val, min, max) {
        return Math.min(Math.max(val, min), max);
      }

      function getFunctionValue(val, animatable) {
        if (!is.fnc(val)) return val;
        return val(animatable.target, animatable.id, animatable.total);
      }

      function getCSSValue(el, prop) {
        if (prop in el.style) {
          return getComputedStyle(el).getPropertyValue(stringToHyphens(prop)) || '0';
        }
      }

      function getAnimationType(el, prop) {
        if (is.dom(el) && arrayContains(validTransforms, prop)) return 'transform';
        if (is.dom(el) && (el.getAttribute(prop) || is.svg(el) && el[prop])) return 'attribute';
        if (is.dom(el) && prop !== 'transform' && getCSSValue(el, prop)) return 'css';
        if (el[prop] != null) return 'object';
      }

      function getTransformValue(el, propName) {
        var defaultUnit = getTransformUnit(propName);
        var defaultVal = stringContains(propName, 'scale') ? 1 : 0 + defaultUnit;
        var str = el.style.transform;
        if (!str) return defaultVal;
        var match = [];
        var props = [];
        var values = [];
        var rgx = /(\w+)\((.+?)\)/g;

        while (match = rgx.exec(str)) {
          props.push(match[1]);
          values.push(match[2]);
        }

        var value = filterArray(values, function (val, i) {
          return props[i] === propName;
        });
        return value.length ? value[0] : defaultVal;
      }

      function getOriginalTargetValue(target, propName) {
        switch (getAnimationType(target, propName)) {
          case 'transform':
            return getTransformValue(target, propName);

          case 'css':
            return getCSSValue(target, propName);

          case 'attribute':
            return target.getAttribute(propName);
        }

        return target[propName] || 0;
      }

      function getRelativeValue(to, from) {
        var operator = /^(\*=|\+=|-=)/.exec(to);
        if (!operator) return to;
        var u = getUnit(to) || 0;
        var x = parseFloat(from);
        var y = parseFloat(to.replace(operator[0], ''));

        switch (operator[0][0]) {
          case '+':
            return x + y + u;

          case '-':
            return x - y + u;

          case '*':
            return x * y + u;
        }
      }

      function validateValue(val, unit) {
        if (is.col(val)) return colorToRgb(val);
        var originalUnit = getUnit(val);
        var unitLess = originalUnit ? val.substr(0, val.length - originalUnit.length) : val;
        return unit && !/\s/g.test(val) ? unitLess + unit : unitLess;
      } // getTotalLength() equivalent for circle, rect, polyline, polygon and line shapes. 
      // adapted from https://gist.github.com/SebLambla/3e0550c496c236709744


      function getDistance(p1, p2) {
        return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));
      }

      function getCircleLength(el) {
        return 2 * Math.PI * el.getAttribute('r');
      }

      function getRectLength(el) {
        return el.getAttribute('width') * 2 + el.getAttribute('height') * 2;
      }

      function getLineLength(el) {
        return getDistance({
          x: el.getAttribute('x1'),
          y: el.getAttribute('y1')
        }, {
          x: el.getAttribute('x2'),
          y: el.getAttribute('y2')
        });
      }

      function getPolylineLength(el) {
        var points = el.points;
        var totalLength = 0;
        var previousPos;

        for (var i = 0; i < points.numberOfItems; i++) {
          var currentPos = points.getItem(i);
          if (i > 0) totalLength += getDistance(previousPos, currentPos);
          previousPos = currentPos;
        }

        return totalLength;
      }

      function getPolygonLength(el) {
        var points = el.points;
        return getPolylineLength(el) + getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0));
      } // Path animation


      function getTotalLength(el) {
        if (el.getTotalLength) return el.getTotalLength();

        switch (el.tagName.toLowerCase()) {
          case 'circle':
            return getCircleLength(el);

          case 'rect':
            return getRectLength(el);

          case 'line':
            return getLineLength(el);

          case 'polyline':
            return getPolylineLength(el);

          case 'polygon':
            return getPolygonLength(el);
        }
      }

      function setDashoffset(el) {
        var pathLength = getTotalLength(el);
        el.setAttribute('stroke-dasharray', pathLength);
        return pathLength;
      } // Motion path


      function getPath(path, percent) {
        var el = is.str(path) ? selectString(path)[0] : path;
        var p = percent || 100;
        return function (prop) {
          return {
            el: el,
            property: prop,
            totalLength: getTotalLength(el) * (p / 100)
          };
        };
      }

      function getPathProgress(path, progress) {
        function point() {
          var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
          var l = progress + offset >= 1 ? progress + offset : 0;
          return path.el.getPointAtLength(l);
        }

        var p = point();
        var p0 = point(-1);
        var p1 = point(+1);

        switch (path.property) {
          case 'x':
            return p.x;

          case 'y':
            return p.y;

          case 'angle':
            return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI;
        }
      } // Decompose value


      function decomposeValue(val, unit) {
        var rgx = /-?\d*\.?\d+/g;
        var value = validateValue(is.pth(val) ? val.totalLength : val, unit) + '';
        return {
          original: value,
          numbers: value.match(rgx) ? value.match(rgx).map(Number) : [0],
          strings: is.str(val) || unit ? value.split(rgx) : []
        };
      } // Animatables


      function parseTargets(targets) {
        var targetsArray = targets ? flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets)) : [];
        return filterArray(targetsArray, function (item, pos, self) {
          return self.indexOf(item) === pos;
        });
      }

      function getAnimatables(targets) {
        var parsed = parseTargets(targets);
        return parsed.map(function (t, i) {
          return {
            target: t,
            id: i,
            total: parsed.length
          };
        });
      } // Properties


      function normalizePropertyTweens(prop, tweenSettings) {
        var settings = cloneObject(tweenSettings);

        if (is.arr(prop)) {
          var l = prop.length;
          var isFromTo = l === 2 && !is.obj(prop[0]);

          if (!isFromTo) {
            // Duration divided by the number of tweens
            if (!is.fnc(tweenSettings.duration)) settings.duration = tweenSettings.duration / l;
          } else {
            // Transform [from, to] values shorthand to a valid tween value
            prop = {
              value: prop
            };
          }
        }

        return toArray(prop).map(function (v, i) {
          // Default delay value should be applied only on the first tween
          var delay = !i ? tweenSettings.delay : 0; // Use path object as a tween value

          var obj = is.obj(v) && !is.pth(v) ? v : {
            value: v
          }; // Set default delay value

          if (is.und(obj.delay)) obj.delay = delay;
          return obj;
        }).map(function (k) {
          return mergeObjects(k, settings);
        });
      }

      function getProperties(instanceSettings, tweenSettings, params) {
        var properties = [];
        var settings = mergeObjects(instanceSettings, tweenSettings);

        for (var p in params) {
          if (!settings.hasOwnProperty(p) && p !== 'targets') {
            properties.push({
              name: p,
              offset: settings['offset'],
              tweens: normalizePropertyTweens(params[p], tweenSettings)
            });
          }
        }

        return properties;
      } // Tweens


      function normalizeTweenValues(tween, animatable) {
        var t = {};

        for (var p in tween) {
          var value = getFunctionValue(tween[p], animatable);

          if (is.arr(value)) {
            value = value.map(function (v) {
              return getFunctionValue(v, animatable);
            });
            if (value.length === 1) value = value[0];
          }

          t[p] = value;
        }

        t.duration = parseFloat(t.duration);
        t.delay = parseFloat(t.delay);
        return t;
      }

      function normalizeEasing(val) {
        return is.arr(val) ? bezier.apply(this, val) : easings[val];
      }

      function normalizeTweens(prop, animatable) {
        var previousTween;
        return prop.tweens.map(function (t) {
          var tween = normalizeTweenValues(t, animatable);
          var tweenValue = tween.value;
          var originalValue = getOriginalTargetValue(animatable.target, prop.name);
          var previousValue = previousTween ? previousTween.to.original : originalValue;
          var from = is.arr(tweenValue) ? tweenValue[0] : previousValue;
          var to = getRelativeValue(is.arr(tweenValue) ? tweenValue[1] : tweenValue, from);
          var unit = getUnit(to) || getUnit(from) || getUnit(originalValue);
          tween.from = decomposeValue(from, unit);
          tween.to = decomposeValue(to, unit);
          tween.start = previousTween ? previousTween.end : prop.offset;
          tween.end = tween.start + tween.delay + tween.duration;
          tween.easing = normalizeEasing(tween.easing);
          tween.elasticity = (1000 - minMaxValue(tween.elasticity, 1, 999)) / 1000;
          tween.isPath = is.pth(tweenValue);
          tween.isColor = is.col(tween.from.original);
          if (tween.isColor) tween.round = 1;
          previousTween = tween;
          return tween;
        });
      } // Tween progress


      var setTweenProgress = {
        css: function css(t, p, v) {
          return t.style[p] = v;
        },
        attribute: function attribute(t, p, v) {
          return t.setAttribute(p, v);
        },
        object: function object(t, p, v) {
          return t[p] = v;
        },
        transform: function transform(t, p, v, transforms, id) {
          if (!transforms[id]) transforms[id] = [];
          transforms[id].push("".concat(p, "(").concat(v, ")"));
        }
      }; // Animations

      function createAnimation(animatable, prop) {
        var animType = getAnimationType(animatable.target, prop.name);

        if (animType) {
          var tweens = normalizeTweens(prop, animatable);
          return {
            type: animType,
            property: prop.name,
            animatable: animatable,
            tweens: tweens,
            duration: tweens[tweens.length - 1].end,
            delay: tweens[0].delay
          };
        }
      }

      function getAnimations(animatables, properties) {
        return filterArray(flattenArray(animatables.map(function (animatable) {
          return properties.map(function (prop) {
            return createAnimation(animatable, prop);
          });
        })), function (a) {
          return !is.und(a);
        });
      } // Create Instance


      function getInstanceTimings(type, animations, instanceSettings, tweenSettings) {
        var isDelay = type === 'delay';

        if (animations.length) {
          return (isDelay ? Math.min : Math.max).apply(Math, animations.map(function (anim) {
            return anim[type];
          }));
        } else {
          return isDelay ? tweenSettings.delay : instanceSettings.offset + tweenSettings.delay + tweenSettings.duration;
        }
      }

      function createNewInstance(params) {
        var instanceSettings = replaceObjectProps(defaultInstanceSettings, params);
        var tweenSettings = replaceObjectProps(defaultTweenSettings, params);
        var animatables = getAnimatables(params.targets);
        var properties = getProperties(instanceSettings, tweenSettings, params);
        var animations = getAnimations(animatables, properties);
        return mergeObjects(instanceSettings, {
          children: [],
          animatables: animatables,
          animations: animations,
          duration: getInstanceTimings('duration', animations, instanceSettings, tweenSettings),
          delay: getInstanceTimings('delay', animations, instanceSettings, tweenSettings)
        });
      } // Core


      var activeInstances = [];
      var raf = 0;

      var engine = function () {
        function play() {
          raf = requestAnimationFrame(step);
        }

        ;

        function step(t) {
          var activeLength = activeInstances.length;

          if (activeLength) {
            var i = 0;

            while (i < activeLength) {
              if (activeInstances[i]) activeInstances[i].tick(t);
              i++;
            }

            play();
          } else {
            cancelAnimationFrame(raf);
            raf = 0;
          }
        }

        return play;
      }(); // Public Instance


      function anime() {
        var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var now,
            startTime,
            lastTime = 0;
        var resolve = null;

        function makePromise() {
          return window.Promise && new Promise(function (_resolve) {
            return resolve = _resolve;
          });
        }

        var promise = makePromise();
        var instance = createNewInstance(params);

        function toggleInstanceDirection() {
          instance.reversed = !instance.reversed;
        }

        function adjustTime(time) {
          return instance.reversed ? instance.duration - time : time;
        }

        function syncInstanceChildren(time) {
          var children = instance.children;
          var childrenLength = children.length;

          if (time >= instance.currentTime) {
            for (var i = 0; i < childrenLength; i++) {
              children[i].seek(time);
            }
          } else {
            for (var _i = childrenLength; _i--;) {
              children[_i].seek(time);
            }
          }
        }

        function setAnimationsProgress(insTime) {
          var i = 0;
          var transforms = {};
          var animations = instance.animations;
          var animationsLength = animations.length;

          while (i < animationsLength) {
            var anim = animations[i];
            var animatable = anim.animatable;
            var tweens = anim.tweens;
            var tweenLength = tweens.length - 1;
            var tween = tweens[tweenLength]; // Only check for keyframes if there is more than one tween

            if (tweenLength) tween = filterArray(tweens, function (t) {
              return insTime < t.end;
            })[0] || tween;
            var elapsed = minMaxValue(insTime - tween.start - tween.delay, 0, tween.duration) / tween.duration;
            var eased = isNaN(elapsed) ? 1 : tween.easing(elapsed, tween.elasticity);
            var strings = tween.to.strings;
            var round = tween.round;
            var numbers = [];
            var progress = void 0;
            var toNumbersLength = tween.to.numbers.length;

            for (var n = 0; n < toNumbersLength; n++) {
              var value = void 0;
              var toNumber = tween.to.numbers[n];
              var fromNumber = tween.from.numbers[n];

              if (!tween.isPath) {
                value = fromNumber + eased * (toNumber - fromNumber);
              } else {
                value = getPathProgress(tween.value, eased * toNumber);
              }

              if (round) {
                if (!(tween.isColor && n > 2)) {
                  value = Math.round(value * round) / round;
                }
              }

              numbers.push(value);
            } // Manual Array.reduce for better performances


            var stringsLength = strings.length;

            if (!stringsLength) {
              progress = numbers[0];
            } else {
              progress = strings[0];

              for (var s = 0; s < stringsLength; s++) {
                var a = strings[s];
                var b = strings[s + 1];
                var _n = numbers[s];

                if (!isNaN(_n)) {
                  if (!b) {
                    progress += _n + ' ';
                  } else {
                    progress += _n + b;
                  }
                }
              }
            }

            setTweenProgress[anim.type](animatable.target, anim.property, progress, transforms, animatable.id);
            anim.currentValue = progress;
            i++;
          }

          var transformsLength = Object.keys(transforms).length;

          if (transformsLength) {
            for (var id = 0; id < transformsLength; id++) {
              if (!transformString) {
                var t = 'transform';
                transformString = getCSSValue(document.body, t) ? t : "-webkit-".concat(t);
              }

              instance.animatables[id].target.style[transformString] = transforms[id].join(' ');
            }
          }

          instance.currentTime = insTime;
          instance.progress = insTime / instance.duration * 100;
        }

        function setCallback(cb) {
          if (instance[cb]) instance[cb](instance);
        }

        function countIteration() {
          if (instance.remaining && instance.remaining !== true) {
            instance.remaining--;
          }
        }

        function setInstanceProgress(engineTime) {
          var insDuration = instance.duration;
          var insOffset = instance.offset;
          var insStart = insOffset + instance.delay;
          var insCurrentTime = instance.currentTime;
          var insReversed = instance.reversed;
          var insTime = adjustTime(engineTime);
          if (instance.children.length) syncInstanceChildren(insTime);

          if (insTime >= insStart || !insDuration) {
            if (!instance.began) {
              instance.began = true;
              setCallback('begin');
            }

            setCallback('run');
          }

          if (insTime > insOffset && insTime < insDuration) {
            setAnimationsProgress(insTime);
          } else {
            if (insTime <= insOffset && insCurrentTime !== 0) {
              setAnimationsProgress(0);
              if (insReversed) countIteration();
            }

            if (insTime >= insDuration && insCurrentTime !== insDuration || !insDuration) {
              setAnimationsProgress(insDuration);
              if (!insReversed) countIteration();
            }
          }

          setCallback('update');

          if (engineTime >= insDuration) {
            if (instance.remaining) {
              startTime = now;
              if (instance.direction === 'alternate') toggleInstanceDirection();
            } else {
              instance.pause();

              if (!instance.completed) {
                instance.completed = true;
                setCallback('complete');

                if ('Promise' in window) {
                  resolve();
                  promise = makePromise();
                }
              }
            }

            lastTime = 0;
          }
        }

        instance.reset = function () {
          var direction = instance.direction;
          var loops = instance.loop;
          instance.currentTime = 0;
          instance.progress = 0;
          instance.paused = true;
          instance.began = false;
          instance.completed = false;
          instance.reversed = direction === 'reverse';
          instance.remaining = direction === 'alternate' && loops === 1 ? 2 : loops;
          setAnimationsProgress(0);

          for (var i = instance.children.length; i--;) {
            instance.children[i].reset();
          }
        };

        instance.tick = function (t) {
          now = t;
          if (!startTime) startTime = now;
          var engineTime = (lastTime + now - startTime) * anime.speed;
          setInstanceProgress(engineTime);
        };

        instance.seek = function (time) {
          setInstanceProgress(adjustTime(time));
        };

        instance.pause = function () {
          var i = activeInstances.indexOf(instance);
          if (i > -1) activeInstances.splice(i, 1);
          instance.paused = true;
        };

        instance.play = function () {
          if (!instance.paused) return;
          instance.paused = false;
          startTime = 0;
          lastTime = adjustTime(instance.currentTime);
          activeInstances.push(instance);
          if (!raf) engine();
        };

        instance.reverse = function () {
          toggleInstanceDirection();
          startTime = 0;
          lastTime = adjustTime(instance.currentTime);
        };

        instance.restart = function () {
          instance.pause();
          instance.reset();
          instance.play();
        };

        instance.finished = promise;
        instance.reset();
        if (instance.autoplay) instance.play();
        return instance;
      } // Remove targets from animation


      function removeTargets(targets) {
        var targetsArray = parseTargets(targets);

        for (var i = activeInstances.length; i--;) {
          var instance = activeInstances[i];
          var animations = instance.animations;

          for (var a = animations.length; a--;) {
            if (arrayContains(targetsArray, animations[a].animatable.target)) {
              animations.splice(a, 1);
              if (!animations.length) instance.pause();
            }
          }
        }
      } // Timeline


      function timeline(params) {
        var tl = anime(params);
        tl.pause();
        tl.duration = 0;

        tl.add = function (instancesParams) {
          tl.children.forEach(function (i) {
            i.began = true;
            i.completed = true;
          });
          toArray(instancesParams).forEach(function (instanceParams) {
            var insParams = mergeObjects(instanceParams, replaceObjectProps(defaultTweenSettings, params || {}));
            insParams.targets = insParams.targets || params.targets;
            var tlDuration = tl.duration;
            var insOffset = insParams.offset;
            insParams.autoplay = false;
            insParams.direction = tl.direction;
            insParams.offset = is.und(insOffset) ? tlDuration : getRelativeValue(insOffset, tlDuration);
            tl.began = true;
            tl.completed = true;
            tl.seek(insParams.offset);
            var ins = anime(insParams);
            ins.began = true;
            ins.completed = true;
            if (ins.duration > tlDuration) tl.duration = ins.duration;
            tl.children.push(ins);
          });
          tl.seek(0);
          tl.reset();
          if (tl.autoplay) tl.restart();
          return tl;
        };

        return tl;
      }

      anime.version = '2.2.0';
      anime.speed = 1;
      anime.running = activeInstances;
      anime.remove = removeTargets;
      anime.getValue = getOriginalTargetValue;
      anime.path = getPath;
      anime.setDashoffset = setDashoffset;
      anime.bezier = bezier;
      anime.easings = easings;
      anime.timeline = timeline;

      anime.random = function (min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
      };

      return anime;
    });
    /***/

  },

  /***/
  "./src/app/services/messaging.service.ts":
  /*!***********************************************!*\
    !*** ./src/app/services/messaging.service.ts ***!
    \***********************************************/

  /*! exports provided: MessagingService */

  /***/
  function srcAppServicesMessagingServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MessagingService", function () {
      return MessagingService;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _ionic_angular__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @ionic/angular */
    "./node_modules/@ionic/angular/dist/fesm5.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _database_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./database.service */
    "./src/app/services/database.service.ts");
    /* harmony import */


    var _ionic_native_fcm_ngx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @ionic-native/fcm/ngx */
    "./node_modules/@ionic-native/fcm/ngx/index.js");

    var MessagingService =
    /*#__PURE__*/
    function () {
      function MessagingService(platform, database, fcm // Firebase Cloud Messaging
      ) {
        _classCallCheck(this, MessagingService);

        this.platform = platform;
        this.database = database;
        this.fcm = fcm;
      }

      _createClass(MessagingService, [{
        key: "init",
        value: function init(email) {
          var _this4 = this;

          // Setup Firebase Cloud Messaging -- token handling,
          // notifications in foreground/background.
          if (this.platform.is('cordova')) {
            console.log("> FCM: Initializing cloud messaging services: ".concat(email));
            this.fcm.getToken().then(function (token) {
              console.log("> FCM: Token received: ".concat(token));
              var doc = {
                token: token,
                userId: email
              };

              _this4.database.write('devices', email, doc);
            });
            this.fcm.onTokenRefresh().subscribe(function (token) {
              console.log("> FCM: Token refreshed: ".concat(token));
              console.log(token);
            });
            this.fcm.onNotification().subscribe(function (data) {
              if (data.wasTapped) {
                console.log("> FCM: Received in background: ".concat(data)); //          this.router.navigate([data.landing_page, data.key3]);
              } else {
                console.log("> FCM: Received token in foreground: ".concat(data)); //          this.router.navigate([data.landing_page, data.key3]);
              }
            });
            console.log("> FCM: initialization ok.");
          }
        }
      }]);

      return MessagingService;
    }();

    MessagingService.ctorParameters = function () {
      return [{
        type: _ionic_angular__WEBPACK_IMPORTED_MODULE_1__["Platform"]
      }, {
        type: _database_service__WEBPACK_IMPORTED_MODULE_3__["DatabaseService"]
      }, {
        type: _ionic_native_fcm_ngx__WEBPACK_IMPORTED_MODULE_4__["FCM"] // Firebase Cloud Messaging

      }];
    };

    MessagingService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])({
      providedIn: 'root'
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ionic_angular__WEBPACK_IMPORTED_MODULE_1__["Platform"], _database_service__WEBPACK_IMPORTED_MODULE_3__["DatabaseService"], _ionic_native_fcm_ngx__WEBPACK_IMPORTED_MODULE_4__["FCM"] // Firebase Cloud Messaging
    ])], MessagingService);
    /***/
  }
}]);
//# sourceMappingURL=home-home-module-es5.js.map