{"version":3,"file":"ngx-countdown.js","sources":["ng://ngx-countdown/interfaces.ts","ng://ngx-countdown/countdown.timer.ts","ng://ngx-countdown/countdown.config.ts","ng://ngx-countdown/countdown.component.ts","ng://ngx-countdown/countdown.module.ts","ng://ngx-countdown/ngx-countdown.ts"],"sourcesContent":["export type CountdownFormatFn = (opt: CountdownFormatFnOption) => string;\n\nexport interface CountdownFormatFnOption {\n  date: number;\n  formatStr: string;\n  timezone?: string;\n}\n\nexport enum CountdownStatus {\n  ing,\n  pause,\n  stop,\n  done,\n}\n\nexport interface CountdownConfig {\n  /**\n   * Start the counter on demand, must call `begin()` to starting, Default: `false`\n   */\n  demand?: boolean;\n\n  /**\n   * Calculate the remaining time based on the server, e.g: `10`,`5.5`, (Unit: seconds)\n   */\n  leftTime?: number;\n\n  /**\n   * Refers to counting down from local time to end time (Unit: Milliseconds second UNIX timestamp)\n   */\n  stopTime?: number;\n\n  /**\n   * Formats a date value, pls refer to [Accepted patterns](https://angular.io/api/common/DatePipe#usage-notes), Default: `HH:mm:ss`\n   */\n  format?: string;\n\n  /**\n   * Beautify text, generally used to convert formatted time text into HTML\n   */\n  prettyText?: (text: string) => string;\n\n  /**\n   * Should be trigger type `notify` event on the x second. When values is `0` will be trigger every time.\n   */\n  notify?: number[] | number;\n\n  /**\n   * Default based on the implementation of `formatDate` in `@angular/common`\n   *\n   * You can changed to other libs, e.g: [date-fns](https://date-fns.org/v2.0.1/docs/format)\n   */\n  formatDate?: CountdownFormatFn;\n\n  /**\n   * A timezone offset (such as '+0430'), or a standard UTC/GMT. When not supplied, uses the end-user's local system timezone, Default: `+0000`\n   */\n  timezone?: string;\n}\n\nexport type CountdownEventAction = 'start' | 'stop' | 'restart' | 'pause' | 'resume' | 'notify' | 'done';\n\nexport interface CountdownEvent {\n  action: CountdownEventAction;\n  status: CountdownStatus;\n  left: number;\n  text: string;\n}\n\nexport interface CountdownItem {\n  text?: string;\n  value?: number;\n}\n","import { Injectable, NgZone } from '@angular/core';\n\n@Injectable()\nexport class CountdownTimer {\n  private fns: Array<((count: number) => number | void) | number> = [];\n  private commands: Array<() => void> = [];\n  private nextTime: number;\n  private ing = false;\n\n  constructor(private ngZone: NgZone) {}\n\n  start() {\n    if (this.ing === true) return;\n\n    this.ing = true;\n    this.nextTime = +new Date();\n    this.ngZone.runOutsideAngular(() => {\n      this.process();\n    });\n  }\n\n  private process() {\n    while (this.commands.length) {\n      this.commands.shift()();\n    }\n    let diff = +new Date() - this.nextTime;\n    const count = 1 + Math.floor(diff / 100);\n\n    diff = 100 - (diff % 100);\n    this.nextTime += 100 * count;\n\n    for (let i = 0, len = this.fns.length; i < len; i += 2) {\n      let frequency = this.fns[i + 1] as number;\n\n      // 100/s\n      if (0 === frequency) {\n        (this.fns[i] as (count: number) => void)(count);\n        // 1000/s\n      } else {\n        // 先把末位至0，再每次加2\n        frequency += 2 * count - 1;\n\n        const step = Math.floor(frequency / 20);\n        if (step > 0) {\n          (this.fns[i] as (count: number) => void)(step);\n        }\n\n        // 把末位还原成1\n        this.fns[i + 1] = (frequency % 20) + 1;\n      }\n    }\n\n    if (!this.ing) return;\n\n    setTimeout(() => this.process(), diff);\n  }\n\n  add(fn: () => void, frequency: number): this {\n    this.commands.push(() => {\n      this.fns.push(fn);\n      this.fns.push(frequency === 1000 ? 1 : 0);\n      this.ing = true;\n    });\n    return this;\n  }\n\n  remove(fn: () => void): this {\n    this.commands.push(() => {\n      const i = this.fns.indexOf(fn);\n      if (i !== -1) {\n        this.fns.splice(i, 2);\n      }\n      this.ing = this.fns.length > 0;\n    });\n    return this;\n  }\n}\n","// tslint:disable: no-inferrable-types\nimport { Injectable, Inject, LOCALE_ID } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { CountdownFormatFn, CountdownConfig } from './interfaces';\n\n@Injectable({ providedIn: 'root' })\nexport class CountdownGlobalConfig implements CountdownConfig {\n  constructor(@Inject(LOCALE_ID) private locale: string) { }\n\n  demand?: boolean = false;\n\n  leftTime?: number = 0;\n\n  format?: string = 'HH:mm:ss';\n\n  timezone?: string = '+0000';\n\n  formatDate?: CountdownFormatFn = ({ date, formatStr, timezone }) => {\n    return formatDate(new Date(date), formatStr, this.locale, timezone || this.timezone || '+0000');\n  };\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  OnInit,\n  SimpleChange,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Inject,\n  LOCALE_ID,\n  ChangeDetectorRef,\n  TemplateRef,\n  NgZone,\n} from '@angular/core';\n\nimport { CountdownConfig, CountdownStatus, CountdownEvent, CountdownEventAction, CountdownItem } from './interfaces';\nimport { CountdownTimer } from './countdown.timer';\nimport { CountdownGlobalConfig } from './countdown.config';\n\n@Component({\n  selector: 'countdown',\n  template: `\n    <ng-container *ngIf=\"!render\">\n      <span [innerHTML]=\"i.text\"></span>\n    </ng-container>\n    <ng-container *ngTemplateOutlet=\"render; context: { $implicit: i }\"></ng-container>\n  `,\n  host: { '[class.count-down]': 'true' },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CountdownComponent implements OnInit, OnChanges, OnDestroy {\n  private frequency = 1000;\n  private _notify: any = {};\n  private _left = 0;\n  private status: CountdownStatus = CountdownStatus.ing;\n  private isDestroy = false;\n  i: CountdownItem = {};\n\n  @Input() config: CountdownConfig;\n  @Input() render: TemplateRef<void>;\n  @Output() readonly event = new EventEmitter<CountdownEvent>();\n\n  constructor(\n    @Inject(LOCALE_ID) private locale: string,\n    private timer: CountdownTimer,\n    private defCog: CountdownGlobalConfig,\n    private cdr: ChangeDetectorRef,\n    private ngZone: NgZone,\n  ) {}\n\n  get left() {\n    return this._left;\n  }\n\n  /**\n   * Start countdown, you must manually call when `demand: false`\n   */\n  begin() {\n    this.status = CountdownStatus.ing;\n    this.callEvent('start');\n  }\n\n  /**\n   * Restart countdown\n   */\n  restart(): void {\n    if (this.status !== CountdownStatus.stop) {\n      this.destroy();\n    }\n    this.init();\n    this.callEvent('restart');\n  }\n\n  /**\n   * Stop countdown, must call `restart` when stopped, it's different from pause, unable to recover\n   */\n  stop() {\n    if (this.status === CountdownStatus.stop) {\n      return;\n    }\n    this.status = CountdownStatus.stop;\n    this.destroy();\n    this.callEvent('stop');\n  }\n\n  /**\n   * Pause countdown, you can use `resume` to recover again\n   */\n  pause() {\n    if (this.status === CountdownStatus.stop || this.status === CountdownStatus.pause) return;\n    this.status = CountdownStatus.pause;\n    this.callEvent('pause');\n  }\n\n  /**\n   * Resume countdown\n   */\n  resume() {\n    if (this.status === CountdownStatus.stop || this.status !== CountdownStatus.pause) return;\n    this.status = CountdownStatus.ing;\n    this.callEvent('resume');\n  }\n\n  private callEvent(action: CountdownEventAction) {\n    this.event.emit({ action, left: this._left, status: this.status, text: this.i.text });\n  }\n\n  private init() {\n    const { locale, defCog } = this;\n    const config = (this.config = {\n      ...new CountdownGlobalConfig(locale),\n      ...defCog,\n      ...this.config,\n    });\n    // tslint:disable-next-line: no-bitwise\n    const frq = (this.frequency = ~config.format.indexOf('S') ? 100 : 1000);\n    this.status = config.demand ? CountdownStatus.pause : CountdownStatus.ing;\n\n    this.getLeft();\n\n    // bind reflow to me\n    const _reflow = this.reflow;\n    this.reflow = (count: number = 0, force: boolean = false) => _reflow.apply(this, [count, force]);\n\n    if (Array.isArray(config.notify)) {\n      config.notify.forEach((time: number) => {\n        if (time < 1) throw new Error(`The notify config must be a positive integer.`);\n\n        time = time * 1000;\n        time = time - (time % frq);\n        this._notify[time] = true;\n      });\n    }\n\n    this.timer.add(this.reflow, frq).start();\n\n    this.reflow(0, true);\n  }\n\n  private destroy() {\n    this.timer.remove(this.reflow);\n    return this;\n  }\n\n  /**\n   * 更新时钟\n   */\n  private reflow(count: number = 0, force: boolean = false): void {\n    if (this.isDestroy) return;\n\n    const { status, config, _notify } = this;\n    if (!force && status !== CountdownStatus.ing) return;\n\n    const value = (this._left = this._left - this.frequency * count);\n    this.i = {\n      value,\n      text: config.formatDate({ date: value, formatStr: config.format, timezone: config.timezone }),\n    };\n    if (typeof config.prettyText === 'function') {\n      this.i.text = config.prettyText(this.i.text);\n    }\n    this.cdr.detectChanges();\n\n    if (config.notify === 0 || _notify[value]) {\n      this.ngZone.run(() => {\n        this.callEvent('notify');\n      });\n    }\n\n    if (value < 1) {\n      this.ngZone.run(() => {\n        this.status = CountdownStatus.done;\n        this.callEvent('done');\n        this.destroy();\n      });\n    }\n  }\n\n  /**\n   * 获取倒计时剩余帧数\n   */\n  private getLeft(): void {\n    const { config, frequency } = this;\n    let left = config.leftTime * 1000;\n    const end = config.stopTime;\n\n    if (!left && end) {\n      left = end - new Date().getTime();\n    }\n\n    this._left = left - (left % frequency);\n  }\n\n  ngOnInit() {\n    this.init();\n    if (!this.config.demand) {\n      this.begin();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroy = true;\n    this.destroy();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (!changes.config.firstChange) {\n      this.restart();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CountdownComponent } from './countdown.component';\nimport { CountdownTimer } from './countdown.timer';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [CountdownTimer],\n  declarations: [CountdownComponent],\n  exports: [CountdownComponent],\n})\nexport class CountdownModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}