import { Easing } from './math';
export interface Config {
    value: number;
    container: HTMLElement;
    fromAngle?: number;
    toAngle?: number;
    animationDuration?: number;
    animationDelay?: number;
    lineWidth?: number;
    easing?: Easing;
    gaugeRadius?: number;
    color?: string;
    colors?: string[];
}
export interface GaugeItem {
    element: SVGCircleElement;
    metadata: {
        relativeLeft: number;
        relativeTop: number;
        angle: number;
    };
}
export declare type AnimationOptions = Pick<Config, 'animationDuration' | 'animationDelay' | 'easing'>;
export declare class Gauge {
    private readonly config;
    private readonly root;
    private readonly leftTopOffset;
    private readonly maxEasing;
    constructor(config: Config);
    private createRootSvgElement;
    draw(options?: AnimationOptions): Promise<void>;
    private getAnimation;
    setValue(value: number, options?: AnimationOptions): Promise<void>;
    insertAdjacentToRoot(where: InsertPosition, html: string): void;
    getElementAtValue(value: number): GaugeItem;
    private renderCircle;
}
